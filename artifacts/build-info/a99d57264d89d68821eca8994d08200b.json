{
	"id": "a99d57264d89d68821eca8994d08200b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/AlvaraAvax.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport {ERC20BurnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport {WithSupervisedTransfersAvax} from \"../utils/WithSupervisedTransfersAvax.sol\";\n\ncontract AlvaraAvax is\n    ERC20Upgradeable,\n    OwnableUpgradeable,\n    ERC20BurnableUpgradeable,\n    WithSupervisedTransfersAvax\n{\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURN_ROLE = keccak256(\"BURN_ROLE\");\n\n    function initialize() public initializer {\n        __ERC20_init(\"Alvara\", \"ALVA\");\n        __ERC20Burnable_init();\n        __WithSupervisedTransfers_init(MINTER_ROLE, BURN_ROLE);\n        __Ownable_init();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        super._mint(to, amount);\n    }\n\n    function burn(address from, uint256 amount) public onlyRole(BURN_ROLE) {\n        super._burn(from, amount);\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public override supervisedTransferFrom(from, to) returns (bool) {\n        return super.transferFrom(from, to, amount);\n    }\n}\n"
			},
			"contracts/utils/WithSupervisedTransfersAvax.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\n/**\n * Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method.\n * The admin can also specify listing timestamp.\n * After the token listing, anyone can tranferFrom without any restrictions forever.\n * Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.\n */\nabstract contract WithSupervisedTransfersAvax is AccessControlUpgradeable {\n    /**\n     * @dev Once the listingTimestamp passes (which disables supervised transfers) it can never be set again.\n     * This ensures once supervised transfers are disabled, they can never be enabled again.\n     */\n    error TokenAlreadyListed();\n\n    /**\n     * @dev Used before listing if not allowed transferFrom occurs.\n     */\n    error SupervisedTranferFrom();\n\n    /**\n     * Called every time the listing timestamp is updated for easy off-chain tracking.\n     * @param newListingTimestamp the value of the new listing timestamp\n     */\n    event ListingTimestampUpdated(uint32 newListingTimestamp);\n\n    bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =\n        keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\");\n    uint32 public listingTimestamp;\n\n    /**\n     * This modifier blocks all tranferFrom function calls unless:\n     * - the token has already been listed\n     * - OR the transaction involves admin\n     * - OR the reciver is whitelisted\n     * This modifier MUST be used on the transferFrom function.\n     */\n    modifier supervisedTransferFrom(address from, address to) {\n        bool duringSupervisedTransfers = listingTimestamp == 0 ||\n            block.timestamp < listingTimestamp;\n        if (duringSupervisedTransfers) {\n            bool transactionInvolvesAdmin = hasRole(DEFAULT_ADMIN_ROLE, from) ||\n                hasRole(DEFAULT_ADMIN_ROLE, to) ||\n                hasRole(DEFAULT_ADMIN_ROLE, _msgSender());\n            if (\n                !transactionInvolvesAdmin &&\n                !hasRole(ALLOWED_TRANSFER_FROM_ROLE, to)\n            ) {\n                revert SupervisedTranferFrom();\n            }\n        }\n        _;\n    }\n\n    /**\n     * The initialize grants the admin role to the deployer\n     */\n    function __WithSupervisedTransfers_init(\n        bytes32 MINTER_ROLE,\n        bytes32 BURN_ROLE\n    ) internal onlyInitializing {\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _grantRole(MINTER_ROLE, _msgSender());\n        _grantRole(BURN_ROLE, _msgSender());\n    }\n\n    /**\n     * Allows the admin to specify when the token should become tradeable.\n     * Once the token is tradeable, transferFrom can never be supervised again.\n     * @param newListingTimestamp epoch time of when the token is listed on DEX\n     */\n    function setListingTimestamp(uint32 newListingTimestamp)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {\n            revert TokenAlreadyListed();\n        }\n        emit ListingTimestampUpdated(newListingTimestamp);\n        listingTimestamp = newListingTimestamp;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "prague"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2146,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 541,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1632:13493  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1632:13493  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3700:3712  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3544:3546  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3851:3858  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3886  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2570:2583  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2602:2607  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2595:2607  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4889  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4955:4962  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4964:4970  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4947  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4988:4992  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4981:4992  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5658:5662  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5730:5734  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5745:5751  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5729  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5772:5776  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5778:5780  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5782:5788  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5771  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5806:5810  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6300:6304  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6407:6417  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6388  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6417  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6362  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2783:2796  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2815:2822  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2808:2822  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:7131  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7116  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7080:7132  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7170:7185  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7166  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7185  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7270:7275  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7277:7284  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7320  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7302  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7320  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7269  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4181  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4248:4250  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4252:4258  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4240  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4434:4441  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4471  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4487  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10916:10935  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10994:11015  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11076  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11092  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11101  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11560  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11573:11578  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11580:11587  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11572  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11588  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11618  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11639  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11598:11841  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11683:11689  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11679  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11689  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11779  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11781:11788  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11815  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11806  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11815  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11773  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11526:11847  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7814:8602  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7910:7928  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7988:8004  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8104:8123  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8135  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8159:8180  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8295  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8295  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8485  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8495  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8289:8295  amount */\n      dup7\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8558:8595  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12431:12522  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506108218061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x821 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLF 0xEA03 0xC1 STOP DELEGATECALL EXTCALL BLOBHASH 0xC1 0xAB 0xD3 PUSH25 0xF2D2F7EF5728C697CC834133B4EC4140DB5B07FD64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1632:11861:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1318": {
									"entryPoint": null,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1253": {
									"entryPoint": 845,
									"id": 1253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1850": {
									"entryPoint": null,
									"id": 1850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1296": {
									"entryPoint": 1136,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1079": {
									"entryPoint": 1256,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_874": {
									"entryPoint": 803,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_899": {
									"entryPoint": 555,
									"id": 899,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1002": {
									"entryPoint": 663,
									"id": 1002,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_961": {
									"entryPoint": 615,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_787": {
									"entryPoint": 411,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_797": {
									"entryPoint": 648,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_817": {
									"entryPoint": null,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_932": {
									"entryPoint": 580,
									"id": 932,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_856": {
									"entryPoint": 790,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:17",
										"nodeType": "YulBlock",
										"src": "0:5716:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:17",
													"nodeType": "YulBlock",
													"src": "135:297:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:17",
																		"nodeType": "YulLiteral",
																		"src": "163:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:17"
																},
																"nativeSrc": "145:21:17",
																"nodeType": "YulFunctionCall",
																"src": "145:21:17"
															},
															"nativeSrc": "145:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:17"
														},
														{
															"nativeSrc": "175:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:17"
																},
																"nativeSrc": "189:13:17",
																"nodeType": "YulFunctionCall",
																"src": "189:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:17",
																	"nodeType": "YulTypedName",
																	"src": "179:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:17",
																				"nodeType": "YulLiteral",
																				"src": "233:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:17"
																		},
																		"nativeSrc": "218:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:17"
																},
																"nativeSrc": "211:34:17",
																"nodeType": "YulFunctionCall",
																"src": "211:34:17"
															},
															"nativeSrc": "211:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:17",
																				"nodeType": "YulLiteral",
																				"src": "275:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:17"
																		},
																		"nativeSrc": "260:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:17",
																				"nodeType": "YulLiteral",
																				"src": "292:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:17"
																		},
																		"nativeSrc": "280:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:17"
																},
																"nativeSrc": "254:50:17",
																"nodeType": "YulFunctionCall",
																"src": "254:50:17"
															},
															"nativeSrc": "254:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:17"
																				},
																				"nativeSrc": "324:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:17",
																				"nodeType": "YulLiteral",
																				"src": "348:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:17"
																		},
																		"nativeSrc": "320:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:17",
																		"nodeType": "YulLiteral",
																		"src": "353:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:17"
																},
																"nativeSrc": "313:42:17",
																"nodeType": "YulFunctionCall",
																"src": "313:42:17"
															},
															"nativeSrc": "313:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:17"
														},
														{
															"nativeSrc": "364:62:17",
															"nodeType": "YulAssignment",
															"src": "364:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:17",
																								"nodeType": "YulLiteral",
																								"src": "407:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:17"
																						},
																						"nativeSrc": "395:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:17",
																								"nodeType": "YulLiteral",
																								"src": "416:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:17"
																						},
																						"nativeSrc": "412:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:17"
																				},
																				"nativeSrc": "391:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:17"
																		},
																		"nativeSrc": "376:45:17",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:17",
																		"nodeType": "YulLiteral",
																		"src": "423:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:17"
																},
																"nativeSrc": "372:54:17",
																"nodeType": "YulFunctionCall",
																"src": "372:54:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:17",
														"nodeType": "YulTypedName",
														"src": "104:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:17",
														"nodeType": "YulTypedName",
														"src": "115:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:17",
														"nodeType": "YulTypedName",
														"src": "126:4:17",
														"type": ""
													}
												],
												"src": "14:418:17"
											},
											{
												"body": {
													"nativeSrc": "486:124:17",
													"nodeType": "YulBlock",
													"src": "486:124:17",
													"statements": [
														{
															"nativeSrc": "496:29:17",
															"nodeType": "YulAssignment",
															"src": "496:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:17"
																},
																"nativeSrc": "505:20:17",
																"nodeType": "YulFunctionCall",
																"src": "505:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:17",
																"nodeType": "YulBlock",
																"src": "588:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:17",
																					"nodeType": "YulLiteral",
																					"src": "597:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:17",
																					"nodeType": "YulLiteral",
																					"src": "600:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:17"
																			},
																			"nativeSrc": "590:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:17"
																		},
																		"nativeSrc": "590:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:17",
																										"nodeType": "YulLiteral",
																										"src": "573:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:17",
																										"nodeType": "YulLiteral",
																										"src": "578:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:17"
																								},
																								"nativeSrc": "569:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:17",
																								"nodeType": "YulLiteral",
																								"src": "582:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:17"
																						},
																						"nativeSrc": "565:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:17"
																				},
																				"nativeSrc": "554:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:17"
																		},
																		"nativeSrc": "544:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:17"
																},
																"nativeSrc": "537:50:17",
																"nodeType": "YulFunctionCall",
																"src": "537:50:17"
															},
															"nativeSrc": "534:70:17",
															"nodeType": "YulIf",
															"src": "534:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:17",
														"nodeType": "YulTypedName",
														"src": "465:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:17",
														"nodeType": "YulTypedName",
														"src": "476:5:17",
														"type": ""
													}
												],
												"src": "437:173:17"
											},
											{
												"body": {
													"nativeSrc": "702:213:17",
													"nodeType": "YulBlock",
													"src": "702:213:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:17",
																"nodeType": "YulBlock",
																"src": "748:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:17",
																					"nodeType": "YulLiteral",
																					"src": "757:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:17",
																					"nodeType": "YulLiteral",
																					"src": "760:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:17"
																			},
																			"nativeSrc": "750:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:17"
																		},
																		"nativeSrc": "750:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:17"
																		},
																		"nativeSrc": "719:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:17",
																		"nodeType": "YulLiteral",
																		"src": "744:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:17"
																},
																"nativeSrc": "715:32:17",
																"nodeType": "YulFunctionCall",
																"src": "715:32:17"
															},
															"nativeSrc": "712:52:17",
															"nodeType": "YulIf",
															"src": "712:52:17"
														},
														{
															"nativeSrc": "773:39:17",
															"nodeType": "YulAssignment",
															"src": "773:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:17"
																},
																"nativeSrc": "783:29:17",
																"nodeType": "YulFunctionCall",
																"src": "783:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:17"
																}
															]
														},
														{
															"nativeSrc": "821:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:17",
																"nodeType": "YulLiteral",
																"src": "834:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:17",
																	"nodeType": "YulTypedName",
																	"src": "825:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:17",
															"nodeType": "YulAssignment",
															"src": "844:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:17",
																				"nodeType": "YulLiteral",
																				"src": "881:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:17"
																		},
																		"nativeSrc": "866:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:17"
																},
																"nativeSrc": "853:32:17",
																"nodeType": "YulFunctionCall",
																"src": "853:32:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:17"
																}
															]
														},
														{
															"nativeSrc": "894:15:17",
															"nodeType": "YulAssignment",
															"src": "894:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:17",
																"nodeType": "YulIdentifier",
																"src": "904:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:17",
														"nodeType": "YulTypedName",
														"src": "660:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:17",
														"nodeType": "YulTypedName",
														"src": "671:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:17",
														"nodeType": "YulTypedName",
														"src": "683:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:17",
														"nodeType": "YulTypedName",
														"src": "691:6:17",
														"type": ""
													}
												],
												"src": "615:300:17"
											},
											{
												"body": {
													"nativeSrc": "1015:92:17",
													"nodeType": "YulBlock",
													"src": "1015:92:17",
													"statements": [
														{
															"nativeSrc": "1025:26:17",
															"nodeType": "YulAssignment",
															"src": "1025:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:17"
																},
																"nativeSrc": "1033:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:17"
																				},
																				"nativeSrc": "1085:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:17"
																		},
																		"nativeSrc": "1078:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:17"
																},
																"nativeSrc": "1060:41:17",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:17"
															},
															"nativeSrc": "1060:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:17",
														"nodeType": "YulTypedName",
														"src": "984:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:17",
														"nodeType": "YulTypedName",
														"src": "995:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:17",
														"nodeType": "YulTypedName",
														"src": "1006:4:17",
														"type": ""
													}
												],
												"src": "920:187:17"
											},
											{
												"body": {
													"nativeSrc": "1213:76:17",
													"nodeType": "YulBlock",
													"src": "1213:76:17",
													"statements": [
														{
															"nativeSrc": "1223:26:17",
															"nodeType": "YulAssignment",
															"src": "1223:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:17"
																},
																"nativeSrc": "1231:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:17"
																},
																"nativeSrc": "1258:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:17"
															},
															"nativeSrc": "1258:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:17",
														"nodeType": "YulTypedName",
														"src": "1182:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:17",
														"nodeType": "YulTypedName",
														"src": "1193:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:17",
														"nodeType": "YulTypedName",
														"src": "1204:4:17",
														"type": ""
													}
												],
												"src": "1112:177:17"
											},
											{
												"body": {
													"nativeSrc": "1398:270:17",
													"nodeType": "YulBlock",
													"src": "1398:270:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:17",
																"nodeType": "YulBlock",
																"src": "1444:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:17"
																			},
																			"nativeSrc": "1446:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:17"
																		},
																		"nativeSrc": "1446:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:17"
																		},
																		"nativeSrc": "1415:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:17"
																},
																"nativeSrc": "1411:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:17"
															},
															"nativeSrc": "1408:52:17",
															"nodeType": "YulIf",
															"src": "1408:52:17"
														},
														{
															"nativeSrc": "1469:39:17",
															"nodeType": "YulAssignment",
															"src": "1469:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:17"
																},
																"nativeSrc": "1479:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:17"
																}
															]
														},
														{
															"nativeSrc": "1517:48:17",
															"nodeType": "YulAssignment",
															"src": "1517:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:17"
																		},
																		"nativeSrc": "1546:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:17"
																},
																"nativeSrc": "1527:38:17",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:17"
																}
															]
														},
														{
															"nativeSrc": "1574:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:17",
																"nodeType": "YulLiteral",
																"src": "1587:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:17",
															"nodeType": "YulAssignment",
															"src": "1597:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:17"
																		},
																		"nativeSrc": "1619:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:17"
																},
																"nativeSrc": "1606:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:17"
																}
															]
														},
														{
															"nativeSrc": "1647:15:17",
															"nodeType": "YulAssignment",
															"src": "1647:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:17",
																"nodeType": "YulIdentifier",
																"src": "1657:5:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:17",
														"nodeType": "YulTypedName",
														"src": "1348:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:17",
														"nodeType": "YulTypedName",
														"src": "1359:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:17",
														"nodeType": "YulTypedName",
														"src": "1371:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:17",
														"nodeType": "YulTypedName",
														"src": "1379:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:17",
														"nodeType": "YulTypedName",
														"src": "1387:6:17",
														"type": ""
													}
												],
												"src": "1294:374:17"
											},
											{
												"body": {
													"nativeSrc": "1770:87:17",
													"nodeType": "YulBlock",
													"src": "1770:87:17",
													"statements": [
														{
															"nativeSrc": "1780:26:17",
															"nodeType": "YulAssignment",
															"src": "1780:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:17"
																},
																"nativeSrc": "1788:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:17",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:17"
																		},
																		"nativeSrc": "1833:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:17"
																},
																"nativeSrc": "1815:36:17",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:17"
															},
															"nativeSrc": "1815:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:17",
														"nodeType": "YulTypedName",
														"src": "1739:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:17",
														"nodeType": "YulTypedName",
														"src": "1750:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:17",
														"nodeType": "YulTypedName",
														"src": "1761:4:17",
														"type": ""
													}
												],
												"src": "1673:184:17"
											},
											{
												"body": {
													"nativeSrc": "1932:116:17",
													"nodeType": "YulBlock",
													"src": "1932:116:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:17",
																"nodeType": "YulBlock",
																"src": "1978:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:17"
																			},
																			"nativeSrc": "1980:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:17"
																		},
																		"nativeSrc": "1980:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:17"
																		},
																		"nativeSrc": "1949:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:17"
																},
																"nativeSrc": "1945:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:17"
															},
															"nativeSrc": "1942:52:17",
															"nodeType": "YulIf",
															"src": "1942:52:17"
														},
														{
															"nativeSrc": "2003:39:17",
															"nodeType": "YulAssignment",
															"src": "2003:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:17"
																},
																"nativeSrc": "2013:29:17",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:17",
														"nodeType": "YulTypedName",
														"src": "1898:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:17",
														"nodeType": "YulTypedName",
														"src": "1909:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:17",
														"nodeType": "YulTypedName",
														"src": "1921:6:17",
														"type": ""
													}
												],
												"src": "1862:186:17"
											},
											{
												"body": {
													"nativeSrc": "2140:173:17",
													"nodeType": "YulBlock",
													"src": "2140:173:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:17",
																"nodeType": "YulBlock",
																"src": "2186:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:17"
																			},
																			"nativeSrc": "2188:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:17"
																		},
																		"nativeSrc": "2188:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:17"
																		},
																		"nativeSrc": "2157:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:17"
																},
																"nativeSrc": "2153:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:17"
															},
															"nativeSrc": "2150:52:17",
															"nodeType": "YulIf",
															"src": "2150:52:17"
														},
														{
															"nativeSrc": "2211:39:17",
															"nodeType": "YulAssignment",
															"src": "2211:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:17"
																},
																"nativeSrc": "2221:29:17",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:17"
																}
															]
														},
														{
															"nativeSrc": "2259:48:17",
															"nodeType": "YulAssignment",
															"src": "2259:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:17"
																		},
																		"nativeSrc": "2288:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:17"
																},
																"nativeSrc": "2269:38:17",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:17",
														"nodeType": "YulTypedName",
														"src": "2098:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:17",
														"nodeType": "YulTypedName",
														"src": "2109:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:17",
														"nodeType": "YulTypedName",
														"src": "2121:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:17",
														"nodeType": "YulTypedName",
														"src": "2129:6:17",
														"type": ""
													}
												],
												"src": "2053:260:17"
											},
											{
												"body": {
													"nativeSrc": "2373:325:17",
													"nodeType": "YulBlock",
													"src": "2373:325:17",
													"statements": [
														{
															"nativeSrc": "2383:22:17",
															"nodeType": "YulAssignment",
															"src": "2383:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:17"
																},
																"nativeSrc": "2393:12:17",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:17"
																}
															]
														},
														{
															"nativeSrc": "2414:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:17"
																},
																"nativeSrc": "2440:12:17",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:17",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:17",
																"nodeType": "YulBlock",
																"src": "2491:31:17",
																"statements": [
																	{
																		"nativeSrc": "2493:27:17",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:17"
																			},
																			"nativeSrc": "2503:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:17"
																},
																"nativeSrc": "2464:26:17",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:17"
															},
															"nativeSrc": "2461:61:17",
															"nodeType": "YulIf",
															"src": "2461:61:17"
														},
														{
															"body": {
																"nativeSrc": "2581:111:17",
																"nodeType": "YulBlock",
																"src": "2581:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:17",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:17",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:17"
																					},
																					"nativeSrc": "2605:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:17"
																			},
																			"nativeSrc": "2595:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:17"
																		},
																		"nativeSrc": "2595:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:17"
																			},
																			"nativeSrc": "2639:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:17"
																		},
																		"nativeSrc": "2639:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:17"
																			},
																			"nativeSrc": "2667:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:17"
																		},
																		"nativeSrc": "2667:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:17"
																		},
																		"nativeSrc": "2557:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:17"
																},
																"nativeSrc": "2534:38:17",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:17"
															},
															"nativeSrc": "2531:161:17",
															"nodeType": "YulIf",
															"src": "2531:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:17",
														"nodeType": "YulTypedName",
														"src": "2353:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:17",
														"nodeType": "YulTypedName",
														"src": "2362:6:17",
														"type": ""
													}
												],
												"src": "2318:380:17"
											},
											{
												"body": {
													"nativeSrc": "2751:174:17",
													"nodeType": "YulBlock",
													"src": "2751:174:17",
													"statements": [
														{
															"nativeSrc": "2761:16:17",
															"nodeType": "YulAssignment",
															"src": "2761:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:17"
																},
																"nativeSrc": "2768:9:17",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:17",
																"nodeType": "YulBlock",
																"src": "2808:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:17",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:17",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:17"
																					},
																					"nativeSrc": "2832:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:17"
																			},
																			"nativeSrc": "2822:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:17"
																		},
																		"nativeSrc": "2822:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:17",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:17"
																			},
																			"nativeSrc": "2866:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:17"
																		},
																		"nativeSrc": "2866:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:17"
																			},
																			"nativeSrc": "2894:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:17"
																		},
																		"nativeSrc": "2894:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:17"
																},
																"nativeSrc": "2789:10:17",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:17"
															},
															"nativeSrc": "2786:133:17",
															"nodeType": "YulIf",
															"src": "2786:133:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:17",
														"nodeType": "YulTypedName",
														"src": "2734:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:17",
														"nodeType": "YulTypedName",
														"src": "2737:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:17",
														"nodeType": "YulTypedName",
														"src": "2743:3:17",
														"type": ""
													}
												],
												"src": "2703:222:17"
											},
											{
												"body": {
													"nativeSrc": "3104:227:17",
													"nodeType": "YulBlock",
													"src": "3104:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:17"
																},
																"nativeSrc": "3114:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:17"
															},
															"nativeSrc": "3114:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:17"
																		},
																		"nativeSrc": "3151:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:17"
																},
																"nativeSrc": "3144:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:17"
															},
															"nativeSrc": "3144:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:17"
																		},
																		"nativeSrc": "3190:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:17"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:17",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:17",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:17"
																},
																"nativeSrc": "3183:62:17",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:17"
															},
															"nativeSrc": "3183:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:17"
																		},
																		"nativeSrc": "3261:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:17"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:17",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:17",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:17"
																},
																"nativeSrc": "3254:35:17",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:17"
															},
															"nativeSrc": "3254:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:17"
														},
														{
															"nativeSrc": "3298:27:17",
															"nodeType": "YulAssignment",
															"src": "3298:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:17",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:17"
																},
																"nativeSrc": "3306:19:17",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:17",
														"nodeType": "YulTypedName",
														"src": "3081:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:17",
														"nodeType": "YulTypedName",
														"src": "3095:4:17",
														"type": ""
													}
												],
												"src": "2930:401:17"
											},
											{
												"body": {
													"nativeSrc": "3510:226:17",
													"nodeType": "YulBlock",
													"src": "3510:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:17"
																},
																"nativeSrc": "3520:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:17"
															},
															"nativeSrc": "3520:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:17"
																		},
																		"nativeSrc": "3557:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:17"
																},
																"nativeSrc": "3550:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:17"
															},
															"nativeSrc": "3550:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:17"
																		},
																		"nativeSrc": "3596:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:17"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:17",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:17",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:17"
																},
																"nativeSrc": "3589:62:17",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:17"
															},
															"nativeSrc": "3589:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:17"
																		},
																		"nativeSrc": "3667:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:17",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:17"
																},
																"nativeSrc": "3660:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:17"
															},
															"nativeSrc": "3660:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:17"
														},
														{
															"nativeSrc": "3703:27:17",
															"nodeType": "YulAssignment",
															"src": "3703:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:17",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:17"
																},
																"nativeSrc": "3711:19:17",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:17",
														"nodeType": "YulTypedName",
														"src": "3487:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:17",
														"nodeType": "YulTypedName",
														"src": "3501:4:17",
														"type": ""
													}
												],
												"src": "3336:400:17"
											},
											{
												"body": {
													"nativeSrc": "3915:224:17",
													"nodeType": "YulBlock",
													"src": "3915:224:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:17"
																},
																"nativeSrc": "3925:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:17"
															},
															"nativeSrc": "3925:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:17"
																		},
																		"nativeSrc": "3962:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:17",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:17"
																},
																"nativeSrc": "3955:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:17"
															},
															"nativeSrc": "3955:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:17"
																		},
																		"nativeSrc": "4001:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:17"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:17",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:17",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:17"
																},
																"nativeSrc": "3994:62:17",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:17"
															},
															"nativeSrc": "3994:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:17"
																		},
																		"nativeSrc": "4072:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:17"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:17",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:17"
																},
																"nativeSrc": "4065:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:17"
															},
															"nativeSrc": "4065:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:17"
														},
														{
															"nativeSrc": "4106:27:17",
															"nodeType": "YulAssignment",
															"src": "4106:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:17",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:17"
																},
																"nativeSrc": "4114:19:17",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:17",
														"nodeType": "YulTypedName",
														"src": "3892:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:17",
														"nodeType": "YulTypedName",
														"src": "3906:4:17",
														"type": ""
													}
												],
												"src": "3741:398:17"
											},
											{
												"body": {
													"nativeSrc": "4318:179:17",
													"nodeType": "YulBlock",
													"src": "4318:179:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:17"
																},
																"nativeSrc": "4328:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:17"
															},
															"nativeSrc": "4328:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:17"
																		},
																		"nativeSrc": "4365:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:17",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:17"
																},
																"nativeSrc": "4358:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:17"
															},
															"nativeSrc": "4358:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:17"
																		},
																		"nativeSrc": "4404:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:17"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:17",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:17",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:17"
																},
																"nativeSrc": "4397:59:17",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:17"
															},
															"nativeSrc": "4397:59:17",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:17"
														},
														{
															"nativeSrc": "4465:26:17",
															"nodeType": "YulAssignment",
															"src": "4465:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:17"
																},
																"nativeSrc": "4473:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:17",
														"nodeType": "YulTypedName",
														"src": "4295:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:17",
														"nodeType": "YulTypedName",
														"src": "4309:4:17",
														"type": ""
													}
												],
												"src": "4144:353:17"
											},
											{
												"body": {
													"nativeSrc": "4676:227:17",
													"nodeType": "YulBlock",
													"src": "4676:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:17"
																},
																"nativeSrc": "4686:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:17"
															},
															"nativeSrc": "4686:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:17"
																		},
																		"nativeSrc": "4723:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:17"
																},
																"nativeSrc": "4716:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:17"
															},
															"nativeSrc": "4716:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:17"
																		},
																		"nativeSrc": "4762:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:17",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:17",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:17"
																},
																"nativeSrc": "4755:62:17",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:17"
															},
															"nativeSrc": "4755:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:17"
																		},
																		"nativeSrc": "4833:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:17"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:17",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:17",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:17"
																},
																"nativeSrc": "4826:35:17",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:17"
															},
															"nativeSrc": "4826:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:17"
														},
														{
															"nativeSrc": "4870:27:17",
															"nodeType": "YulAssignment",
															"src": "4870:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:17",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:17"
																},
																"nativeSrc": "4878:19:17",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:17",
														"nodeType": "YulTypedName",
														"src": "4653:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:17",
														"nodeType": "YulTypedName",
														"src": "4667:4:17",
														"type": ""
													}
												],
												"src": "4502:401:17"
											},
											{
												"body": {
													"nativeSrc": "5082:225:17",
													"nodeType": "YulBlock",
													"src": "5082:225:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:17"
																},
																"nativeSrc": "5092:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:17"
															},
															"nativeSrc": "5092:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:17"
																		},
																		"nativeSrc": "5129:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:17",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:17"
																},
																"nativeSrc": "5122:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:17"
															},
															"nativeSrc": "5122:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:17"
																		},
																		"nativeSrc": "5168:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:17",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:17",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:17"
																},
																"nativeSrc": "5161:62:17",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:17"
															},
															"nativeSrc": "5161:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:17"
																		},
																		"nativeSrc": "5239:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:17"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:17",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:17",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:17"
																},
																"nativeSrc": "5232:33:17",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:17"
															},
															"nativeSrc": "5232:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:17"
														},
														{
															"nativeSrc": "5274:27:17",
															"nodeType": "YulAssignment",
															"src": "5274:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:17"
																},
																"nativeSrc": "5282:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:17",
														"nodeType": "YulTypedName",
														"src": "5059:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:17",
														"nodeType": "YulTypedName",
														"src": "5073:4:17",
														"type": ""
													}
												],
												"src": "4908:399:17"
											},
											{
												"body": {
													"nativeSrc": "5486:228:17",
													"nodeType": "YulBlock",
													"src": "5486:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:17"
																},
																"nativeSrc": "5496:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:17"
															},
															"nativeSrc": "5496:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:17"
																		},
																		"nativeSrc": "5533:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:17"
																},
																"nativeSrc": "5526:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:17"
															},
															"nativeSrc": "5526:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:17"
																		},
																		"nativeSrc": "5572:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:17",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:17",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:17"
																},
																"nativeSrc": "5565:62:17",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:17"
															},
															"nativeSrc": "5565:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:17"
																		},
																		"nativeSrc": "5643:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:17"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:17",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:17",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:17"
																},
																"nativeSrc": "5636:36:17",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:17"
															},
															"nativeSrc": "5636:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:17"
														},
														{
															"nativeSrc": "5681:27:17",
															"nodeType": "YulAssignment",
															"src": "5681:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:17"
																},
																"nativeSrc": "5689:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:17",
														"nodeType": "YulTypedName",
														"src": "5463:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:17",
														"nodeType": "YulTypedName",
														"src": "5477:4:17",
														"type": ""
													}
												],
												"src": "5312:402:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLF 0xEA03 0xC1 STOP DELEGATECALL EXTCALL BLOBHASH 0xC1 0xAB 0xD3 PUSH25 0xF2D2F7EF5728C697CC834133B4EC4140DB5B07FD64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1632:11861:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4802:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:17;;1078:22;1060:41;;1048:2;1033:18;4802:197:4;920:187:17;3613:106:4;3700:12;;3613:106;;;1258:25:17;;;1246:2;1231:18;3613:106:4;1112:177:17;5561:256:4;;;;;;:::i;:::-;;:::i;3462:91::-;;;3544:2;1815:36:17;;1803:2;1788:18;3462:91:4;1673:184:17;6212:234:4;;;;;;:::i;:::-;;:::i;3777:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3877:18:4;3851:7;3877:18;;;:9;:18;;;;;;;3777:125;2727:102;;;:::i;6933:427::-;;;;;;:::i;:::-;;:::i;4098:189::-;;;;;;:::i;:::-;;:::i;4345:149::-;;;;;;:::i;:::-;;:::i;2516:98::-;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;965:10:9;4939:32:4;965:10:9;4955:7:4;4964:6;4939:8;:32::i;:::-;4988:4;4981:11;;;4802:197;;;;;:::o;5561:256::-;5658:4;965:10:9;5714:38:4;5730:4;965:10:9;5745:6:4;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;:::-;-1:-1:-1;5806:4:4;;5561:256;-1:-1:-1;;;;5561:256:4:o;6212:234::-;6300:4;965:10:9;6354:64:4;965:10:9;6370:7:4;6407:10;6379:25;965:10:9;6370:7:4;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;2727:102::-;2783:13;2815:7;2808:14;;;;;:::i;6933:427::-;7026:4;965:10:9;7026:4:4;7107:25;965:10:9;7124:7:4;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;-1:-1:-1;;;7142:85:4;;3132:2:17;7142:85:4;;;3114:21:17;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:17;;;3254:35;3306:19;;7142:85:4;;;;;;;;;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;4098:189::-;4177:4;965:10:9;4231:28:4;965:10:9;4248:2:4;4252:6;4231:9;:28::i;4345:149::-;-1:-1:-1;;;;;4460:18:4;;;4434:7;4460:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4345:149::o;10815:340::-;-1:-1:-1;;;;;10916:19:4;;10908:68;;;;-1:-1:-1;;;10908:68:4;;3538:2:17;10908:68:4;;;3520:21:17;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:17;;;3660:34;3711:19;;10908:68:4;3336:400:17;10908:68:4;-1:-1:-1;;;;;10994:21:4;;10986:68;;;;-1:-1:-1;;;10986:68:4;;3943:2:17;10986:68:4;;;3925:21:17;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:17;;;4065:32;4114:19;;10986:68:4;3741:398:17;10986:68:4;-1:-1:-1;;;;;11065:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11116:32;;1258:25:17;;;11116:32:4;;1231:18:17;11116:32:4;;;;;;;10815:340;;;:::o;11436:411::-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;-1:-1:-1;;11602:16:4;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;-1:-1:-1;;;11655:68:4;;4346:2:17;11655:68:4;;;4328:21:17;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;11655:68:4;4144:353:17;11655:68:4;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11526:321;11436:411;;;:::o;7814:788::-;-1:-1:-1;;;;;7910:18:4;;7902:68;;;;-1:-1:-1;;;7902:68:4;;4704:2:17;7902:68:4;;;4686:21:17;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:17;;;4826:35;4878:19;;7902:68:4;4502:401:17;7902:68:4;-1:-1:-1;;;;;7988:16:4;;7980:64;;;;-1:-1:-1;;;7980:64:4;;5110:2:17;7980:64:4;;;5092:21:17;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:17;;;5232:33;5282:19;;7980:64:4;4908:399:17;7980:64:4;-1:-1:-1;;;;;8126:15:4;;8104:19;8126:15;;;:9;:15;;;;;;8159:21;;;;8151:72;;;;-1:-1:-1;;;8151:72:4;;5514:2:17;8151:72:4;;;5496:21:17;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:17;;;5636:36;5689:19;;8151:72:4;5312:402:17;8151:72:4;-1:-1:-1;;;;;8257:15:4;;;;;;;:9;:15;;;;;;8275:20;;;8257:38;;8472:13;;;;;;;;;;:23;;;;;;8521:26;;;;;;8289:6;1258:25:17;;1246:2;1231:18;;1112:177;8521:26:4;;;;;;;;8558:37;12431:91;14:418:17;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:17;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:17:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:17;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:17:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416200",
								"executionCost": "453",
								"totalCost": "416653"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2556",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51141",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
									".code": [
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3777,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2727,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4939,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5714,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5762,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6379,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6379,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6354,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "PUSH",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2808,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 7107,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7261,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4231,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4471,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11076,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11563,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11602,
											"end": 11639,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 17,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11781,
											"end": 11788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11806,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11815,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 11765,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8558,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 12431,
											"end": 12522,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 17,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 731,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 737,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 739,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 743,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1323,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ERC20BurnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 731,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 737,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 739,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 743,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1323,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1466,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP16 PUSH15 0xE15BFE85E156DEE162B13CBC584722 STOP CALLF 0x422E SWAP15 PUSH19 0x8CBBCA907B6CA65A64736F6C634300081E0033 ",
							"sourceMap": "242:2603:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP16 PUSH15 0xE15BFE85E156DEE162B13CBC584722 STOP CALLF 0x422E SWAP15 PUSH19 0x8CBBCA907B6CA65A64736F6C634300081E0033 ",
							"sourceMap": "242:2603:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2146,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x77 CALL SWAP5 0x25 PUSH18 0x4FFE7343D54D67E1C0C31E90662469AADFE1 DUP4 0x4B PC 0xBB PUSH22 0x7F9DC664736F6C634300081E00330000000000000000 ",
							"sourceMap": "202:12593:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x77 CALL SWAP5 0x25 PUSH18 0x4FFE7343D54D67E1C0C31E90662469AADFE1 DUP4 0x4B PC 0xBB PUSH22 0x7F9DC664736F6C634300081E00330000000000000000 ",
							"sourceMap": "202:12593:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFDESTRUCT NUMBER DUP9 PUSH11 0x87C67F8D6ACCE4E11728F EXTSTATICCALL 0x1E PUSH32 0x1939AA5763C2F5E278EF9CE54164736F6C634300081E00330000000000000000 ",
							"sourceMap": "215:1058:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFDESTRUCT NUMBER DUP9 PUSH11 0x87C67F8D6ACCE4E11728F EXTSTATICCALL 0x1E PUSH32 0x1939AA5763C2F5E278EF9CE54164736F6C634300081E00330000000000000000 ",
							"sourceMap": "215:1058:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokens/AlvaraAvax.sol": {
				"AlvaraAvax": {
					"abi": [
						{
							"inputs": [],
							"name": "SupervisedTranferFrom",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyListed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "ListingTimestampUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALLOWED_TRANSFER_FROM_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BURN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingTimestamp",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "setListingTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SupervisedTranferFrom()": [
								{
									"details": "Used before listing if not allowed transferFrom occurs."
								}
							],
							"TokenAlreadyListed()": [
								{
									"details": "Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"ListingTimestampUpdated(uint32)": {
								"params": {
									"newListingTimestamp": "the value of the new listing timestamp"
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setListingTimestamp(uint32)": {
								"params": {
									"newListingTimestamp": "epoch time of when the token is listed on DEX"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/AlvaraAvax.sol\":479:1421  contract AlvaraAvax is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/AlvaraAvax.sol\":479:1421  contract AlvaraAvax is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe90cdd1c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb930908f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xbd39a2a8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      dup1\n      0x313ce567\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e695cca\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0x18160ddd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_41\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3700:3712  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1549:1574   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_45\n        /* \"#utility.yul\":1403:1580   */\n      jump\n        /* \"contracts/tokens/AlvaraAvax.sol\":1201:1419  function transferFrom(... */\n    tag_7:\n      tag_41\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_56\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3544:3546  18 */\n      0x12\n        /* \"#utility.yul\":2824:2860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2797:2815   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n      tag_45\n        /* \"#utility.yul\":2682:2866   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_71\n      tag_80\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_41\n      tag_83\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":965:1076  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_13:\n      tag_71\n      tag_87\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n    tag_14:\n      tag_71\n      tag_90\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1258:1358  bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =... */\n    tag_15:\n      tag_56\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1319:1358  keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\") */\n      0x2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1258:1358  bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =... */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_56\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3851:3858  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3886  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_71\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1264:1425  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_18:\n      tag_71\n      tag_104\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":749:959  function initialize() public initializer {... */\n    tag_19:\n      tag_71\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3439:3490   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3427:3429   */\n      0x20\n        /* \"#utility.yul\":3412:3430   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      tag_45\n        /* \"#utility.yul\":3293:3496   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_41\n      tag_113\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_22:\n      tag_47\n      tag_117\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":1082:1195  function burn(address from, uint256 amount) public onlyRole(BURN_ROLE) {... */\n    tag_23:\n      tag_71\n      tag_120\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_25:\n      tag_41\n      tag_126\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_26:\n      tag_41\n      tag_130\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":684:742  bytes32 public constant BURN_ROLE = keccak256(\"BURN_ROLE\") */\n    tag_27:\n      tag_56\n        /* \"contracts/tokens/AlvaraAvax.sol\":720:742  keccak256(\"BURN_ROLE\") */\n      0xe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22\n        /* \"contracts/tokens/AlvaraAvax.sol\":684:742  bytes32 public constant BURN_ROLE = keccak256(\"BURN_ROLE\") */\n      dup2\n      jump\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1364:1394  uint32 public listingTimestamp */\n    tag_28:\n      sload(0x012d)\n      tag_136\n      swap1\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_136:\n      mload(0x40)\n        /* \"#utility.yul\":3675:3685   */\n      0xffffffff\n        /* \"#utility.yul\":3663:3686   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3645:3687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"#utility.yul\":3618:3636   */\n      add\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1364:1394  uint32 public listingTimestamp */\n      tag_45\n        /* \"#utility.yul\":3501:3693   */\n      jump\n        /* \"contracts/tokens/AlvaraAvax.sol\":616:678  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_29:\n      tag_56\n        /* \"contracts/tokens/AlvaraAvax.sol\":654:678  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/tokens/AlvaraAvax.sol\":616:678  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_30:\n      tag_71\n      tag_144\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_31:\n      tag_56\n      tag_147\n      calldatasize\n      0x04\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2922:3277  function setListingTimestamp(uint32 newListingTimestamp)... */\n    tag_32:\n      tag_71\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      tag_71\n      tag_156\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3135:3139  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3216  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3256  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_160\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1240  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3256  super.supportsInterface(interfaceId) */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3151:3256  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2570:2583  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2602:2607  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2595:2607  return _name */\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_164\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4889  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4955:4962  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4964:4970  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4947  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_172:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4988:4992  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/AlvaraAvax.sol\":1201:1419  function transferFrom(... */\n    tag_63:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1774:1790  listingTimestamp */\n      sload(0x012d)\n        /* \"contracts/tokens/AlvaraAvax.sol\":1353:1357  bool */\n      0x00\n      swap1\n        /* \"contracts/tokens/AlvaraAvax.sol\":1334:1338  from */\n      dup5\n      swap1\n        /* \"contracts/tokens/AlvaraAvax.sol\":1340:1342  to */\n      dup5\n      swap1\n        /* \"contracts/tokens/AlvaraAvax.sol\":1353:1357  bool */\n      dup4\n      swap1\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1774:1790  listingTimestamp */\n      0xffffffff\n      and\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1774:1795  listingTimestamp == 0 */\n      iszero\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1774:1845  listingTimestamp == 0 ||... */\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1829:1845  listingTimestamp */\n      and(0xffffffff, sload(0x012d))\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1811:1826  block.timestamp */\n      timestamp\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1811:1845  block.timestamp < listingTimestamp */\n      lt\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1774:1845  listingTimestamp == 0 ||... */\n    tag_176:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1741:1845  bool duringSupervisedTransfers = listingTimestamp == 0 ||... */\n      swap1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1859:1884  duringSupervisedTransfers */\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1855:2285  if (duringSupervisedTransfers) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1900:1929  bool transactionInvolvesAdmin */\n      0x00\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1932:1965  hasRole(DEFAULT_ADMIN_ROLE, from) */\n      tag_178\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1900:1929  bool transactionInvolvesAdmin */\n      dup2\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1960:1964  from */\n      dup6\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1932:1939  hasRole */\n      tag_114\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1932:1965  hasRole(DEFAULT_ADMIN_ROLE, from) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1932:2016  hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      dup1\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1985:2016  hasRole(DEFAULT_ADMIN_ROLE, to) */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2013:2015  to */\n      dup5\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1985:1992  hasRole */\n      tag_114\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1985:2016  hasRole(DEFAULT_ADMIN_ROLE, to) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1932:2077  hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      dup1\n      tag_182\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2036:2077  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_114\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2036:2077  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n    tag_182:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1900:2077  bool transactionInvolvesAdmin = hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      swap1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2113:2137  transactionInvolvesAdmin */\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2112:2137  !transactionInvolvesAdmin */\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2112:2197  !transactionInvolvesAdmin &&... */\n      dup1\n      iszero\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2158:2197  hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      tag_185\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1319:1358  keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\") */\n      0x2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2194:2196  to */\n      dup5\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2158:2165  hasRole */\n      tag_114\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2158:2197  hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2157:2197  !hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2112:2197  !transactionInvolvesAdmin &&... */\n    tag_184:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2091:2275  if (... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2237:2260  SupervisedTranferFrom() */\n      mload(0x40)\n      shl(0xe0, 0xafae8e97)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2091:2275  if (... */\n    tag_186:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1886:2285  {... */\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":1855:2285  if (duringSupervisedTransfers) {... */\n    tag_177:\n        /* \"contracts/tokens/AlvaraAvax.sol\":1376:1412  super.transferFrom(from, to, amount) */\n      tag_188\n        /* \"contracts/tokens/AlvaraAvax.sol\":1395:1399  from */\n      dup8\n        /* \"contracts/tokens/AlvaraAvax.sol\":1401:1403  to */\n      dup8\n        /* \"contracts/tokens/AlvaraAvax.sol\":1405:1411  amount */\n      dup8\n        /* \"contracts/tokens/AlvaraAvax.sol\":1376:1394  super.transferFrom */\n      tag_189\n        /* \"contracts/tokens/AlvaraAvax.sol\":1376:1412  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/tokens/AlvaraAvax.sol\":1369:1412  return super.transferFrom(from, to, amount) */\n      swap8\n        /* \"contracts/tokens/AlvaraAvax.sol\":1201:1419  function transferFrom(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5404:5408  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5410:5417  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5403  _grantRole */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4831:4833   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4813:4834   */\n      mstore\n        /* \"#utility.yul\":4870:4872   */\n      0x2f\n        /* \"#utility.yul\":4850:4868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4843:4873   */\n      mstore\n        /* \"#utility.yul\":4909:4943   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":4889:4907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4882:4944   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":4960:4978   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4953:4998   */\n      mstore\n        /* \"#utility.yul\":5015:5034   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6582:6586  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6588:6595  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6581  _revokeRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6300:6304  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6407:6417  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6388  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6417  allowance(owner, spender) + addedValue */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6362  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":965:1076  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_88:\n        /* \"contracts/tokens/AlvaraAvax.sol\":654:678  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/tokens/AlvaraAvax.sol\":1046:1069  super._mint(to, amount) */\n      tag_196\n        /* \"contracts/tokens/AlvaraAvax.sol\":1058:1060  to */\n      dup4\n        /* \"contracts/tokens/AlvaraAvax.sol\":1062:1068  amount */\n      dup4\n        /* \"contracts/tokens/AlvaraAvax.sol\":1046:1057  super._mint */\n      tag_216\n        /* \"contracts/tokens/AlvaraAvax.sol\":1046:1069  super._mint(to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:951  _burn(_msgSender(), amount) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":944:950  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:929  _burn */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:951  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2177  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2167  _transferOwnership */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1264:1425  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1386  _spendAllowance(account, _msgSender(), amount) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1356:1363  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1379:1385  amount */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1355  _spendAllowance */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1386  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1418  _burn(account, amount) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1402:1409  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1411:1417  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1401  _burn */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1418  _burn(account, amount) */\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":749:959  function initialize() public initializer {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_238\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_238\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5491:5512   */\n      mstore\n        /* \"#utility.yul\":5548:5550   */\n      0x2e\n        /* \"#utility.yul\":5528:5546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5521:5551   */\n      mstore\n        /* \"#utility.yul\":5587:5621   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5567:5585   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5560:5622   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5638:5656   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5631:5675   */\n      mstore\n        /* \"#utility.yul\":5692:5711   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_202\n        /* \"#utility.yul\":5307:5717   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_242:\n        /* \"contracts/tokens/AlvaraAvax.sol\":800:830  __ERC20_init(\"Alvara\", \"ALVA\") */\n      tag_244\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x416c76617261)\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x414c5641)\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens/AlvaraAvax.sol\":800:812  __ERC20_init */\n      tag_245\n        /* \"contracts/tokens/AlvaraAvax.sol\":800:830  __ERC20_init(\"Alvara\", \"ALVA\") */\n      jump\t// in\n    tag_244:\n        /* \"contracts/tokens/AlvaraAvax.sol\":840:862  __ERC20Burnable_init() */\n      tag_246\n        /* \"contracts/tokens/AlvaraAvax.sol\":840:860  __ERC20Burnable_init */\n      tag_247\n        /* \"contracts/tokens/AlvaraAvax.sol\":840:862  __ERC20Burnable_init() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/tokens/AlvaraAvax.sol\":872:926  __WithSupervisedTransfers_init(MINTER_ROLE, BURN_ROLE) */\n      tag_248\n        /* \"contracts/tokens/AlvaraAvax.sol\":654:678  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/tokens/AlvaraAvax.sol\":720:742  keccak256(\"BURN_ROLE\") */\n      0xe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22\n        /* \"contracts/tokens/AlvaraAvax.sol\":872:902  __WithSupervisedTransfers_init */\n      tag_249\n        /* \"contracts/tokens/AlvaraAvax.sol\":872:926  __WithSupervisedTransfers_init(MINTER_ROLE, BURN_ROLE) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/tokens/AlvaraAvax.sol\":936:952  __Ownable_init() */\n      tag_250\n        /* \"contracts/tokens/AlvaraAvax.sol\":936:950  __Ownable_init */\n      tag_251\n        /* \"contracts/tokens/AlvaraAvax.sol\":936:952  __Ownable_init() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":2824:2860   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2797:2815   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"contracts/tokens/AlvaraAvax.sol\":749:959  function initialize() public initializer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3436:3440  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3465  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2783:2796  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2815:2822  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2808:2822  return _symbol */\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n        /* \"contracts/tokens/AlvaraAvax.sol\":1082:1195  function burn(address from, uint256 amount) public onlyRole(BURN_ROLE) {... */\n    tag_121:\n        /* \"contracts/tokens/AlvaraAvax.sol\":720:742  keccak256(\"BURN_ROLE\") */\n      0xe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/tokens/AlvaraAvax.sol\":1163:1188  super._burn(from, amount) */\n      tag_196\n        /* \"contracts/tokens/AlvaraAvax.sol\":1175:1179  from */\n      dup4\n        /* \"contracts/tokens/AlvaraAvax.sol\":1181:1187  amount */\n      dup4\n        /* \"contracts/tokens/AlvaraAvax.sol\":1163:1174  super._burn */\n      tag_220\n        /* \"contracts/tokens/AlvaraAvax.sol\":1163:1188  super._burn(from, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:7131  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7116  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7080:7132  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7170:7185  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7166  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7185  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6123:6125   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6105:6126   */\n      mstore\n        /* \"#utility.yul\":6162:6164   */\n      0x25\n        /* \"#utility.yul\":6142:6160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6135:6165   */\n      mstore\n        /* \"#utility.yul\":6201:6235   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6181:6199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6174:6236   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6252:6270   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6245:6280   */\n      mstore\n        /* \"#utility.yul\":6297:6316   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_202\n        /* \"#utility.yul\":5921:6322   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7270:7275  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7277:7284  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7320  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7302  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7320  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7269  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7349:7353  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4181  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4248:4250  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4252:4258  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4240  _transfer */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5831:5835  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5837:5844  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5830  _revokeRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4434:4441  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4471  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4487  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2922:3277  function setListingTimestamp(uint32 newListingTimestamp)... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3051:3067  listingTimestamp */\n      and(0xffffffff, sload(0x012d))\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3051:3071  listingTimestamp > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3051:3110  listingTimestamp > 0 && block.timestamp >= listingTimestamp */\n      tag_287\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3094:3110  listingTimestamp */\n      and(0xffffffff, sload(0x012d))\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3075:3090  block.timestamp */\n      timestamp\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3075:3110  block.timestamp >= listingTimestamp */\n      lt\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3051:3110  listingTimestamp > 0 && block.timestamp >= listingTimestamp */\n    tag_287:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3047:3164  if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3133:3153  TokenAlreadyListed() */\n      mload(0x40)\n      shl(0xe1, 0x6f555ee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3047:3164  if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {... */\n    tag_288:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3178:3222  ListingTimestampUpdated(newListingTimestamp) */\n      mload(0x40)\n        /* \"#utility.yul\":3675:3685   */\n      0xffffffff\n        /* \"#utility.yul\":3663:3686   */\n      dup4\n      and\n        /* \"#utility.yul\":3645:3687   */\n      dup2\n      mstore\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3178:3222  ListingTimestampUpdated(newListingTimestamp) */\n      0x0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d6\n      swap1\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"#utility.yul\":3618:3636   */\n      add\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3178:3222  ListingTimestampUpdated(newListingTimestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3232:3248  listingTimestamp */\n      0x012d\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":3232:3270  listingTimestamp = newListingTimestamp */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2922:3277  function setListingTimestamp(uint32 newListingTimestamp)... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2423:2445  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6529:6531   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6511:6532   */\n      mstore\n        /* \"#utility.yul\":6568:6570   */\n      0x26\n        /* \"#utility.yul\":6548:6566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6541:6571   */\n      mstore\n        /* \"#utility.yul\":6607:6641   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6587:6605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6580:6642   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6658:6676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6651:6687   */\n      mstore\n        /* \"#utility.yul\":6704:6723   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_202\n        /* \"#utility.yul\":6327:6729   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2517:2525  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2516  _transferOwnership */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10916:10935  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6936:6938   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6918:6939   */\n      mstore\n        /* \"#utility.yul\":6975:6977   */\n      0x24\n        /* \"#utility.yul\":6955:6973   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6948:6978   */\n      mstore\n        /* \"#utility.yul\":7014:7048   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6994:7012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6987:7049   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7065:7083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7058:7092   */\n      mstore\n        /* \"#utility.yul\":7109:7128   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":6734:7134   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10994:11015  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7341:7343   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7323:7344   */\n      mstore\n        /* \"#utility.yul\":7380:7382   */\n      0x22\n        /* \"#utility.yul\":7360:7378   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7353:7383   */\n      mstore\n        /* \"#utility.yul\":7419:7453   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7399:7417   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7392:7454   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7470:7488   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7463:7495   */\n      mstore\n        /* \"#utility.yul\":7512:7531   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":7139:7537   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11076  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11092  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11101  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5658:5662  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5730:5734  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5745:5751  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5729  _spendAllowance */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5772:5776  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5778:5780  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5782:5788  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5771  _transfer */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3866:3870  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3865  _checkRole */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8029:8033  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8028  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8065  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8091:8095  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8132:8139  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8126:8130  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8433:8437  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8439:8446  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8432  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8421:8570  if (hasRole(role, account)) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8469  _roles */\n      0xfb\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8492  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8500  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8878:9413  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8961:8982  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7744:7746   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7726:7747   */\n      mstore\n        /* \"#utility.yul\":7783:7785   */\n      0x1f\n        /* \"#utility.yul\":7763:7781   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7756:7786   */\n      mstore\n        /* \"#utility.yul\":7822:7855   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7802:7820   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7795:7856   */\n      mstore\n        /* \"#utility.yul\":7873:7891   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":7542:7897   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9105:9111  amount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9089:9101  _totalSupply */\n      0x35\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9089:9111  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_329\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_329:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9275  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9275  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9285  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9733:10392  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9816:9837  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8086:8107   */\n      mstore\n        /* \"#utility.yul\":8143:8145   */\n      0x21\n        /* \"#utility.yul\":8123:8141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8116:8146   */\n      mstore\n        /* \"#utility.yul\":8182:8216   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8162:8180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8155:8217   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8233:8251   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8226:8257   */\n      mstore\n        /* \"#utility.yul\":8274:8293   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":7902:8299   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9946:9968  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9980  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10007:10031  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8506:8508   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8545:8547   */\n      0x22\n        /* \"#utility.yul\":8525:8543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8518:8548   */\n      mstore\n        /* \"#utility.yul\":8584:8618   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8564:8582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8557:8619   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8635:8653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8628:8660   */\n      mstore\n        /* \"#utility.yul\":8677:8696   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_202\n        /* \"#utility.yul\":8304:8702   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10113  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10125:10148  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10148  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10241:10253  _totalSupply */\n      0x35\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10241:10263  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      swap2\n      swap3\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1620:1750  function _checkOwner() internal view virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1683:1706  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8909:8911   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8891:8912   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8928:8946   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8921:8951   */\n      mstore\n        /* \"#utility.yul\":8987:9021   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8967:8985   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8960:9022   */\n      mstore\n        /* \"#utility.yul\":9039:9057   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_202\n        /* \"#utility.yul\":8707:9063   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      0x65\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2760:2776  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2750:2874  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11560  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11573:11578  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11580:11587  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11572  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11588  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11618  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11639  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11598:11841  if (currentAllowance != type(uint256).max) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11683:11689  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11679  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11689  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9270:9272   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9252:9273   */\n      mstore\n        /* \"#utility.yul\":9309:9311   */\n      0x1d\n        /* \"#utility.yul\":9289:9307   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9282:9312   */\n      mstore\n        /* \"#utility.yul\":9348:9379   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9328:9346   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9321:9380   */\n      mstore\n        /* \"#utility.yul\":9397:9415   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_202\n        /* \"#utility.yul\":9068:9421   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11779  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11781:11788  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11815  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11806  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11815  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11773  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11526:11847  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2139:2286  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2279  __ERC20_init_unchained(name_, symbol_) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2264:2269  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2271:2278  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2263  __ERC20_init_unchained */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2279  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":615:680  function __ERC20Burnable_init() internal onlyInitializing {... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2384:2665  function __WithSupervisedTransfers_init(... */\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n    tag_370:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2566  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2532  _grantRole */\n      tag_197\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2566  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_373:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2576:2613  _grantRole(MINTER_ROLE, _msgSender()) */\n      tag_375\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2587:2598  MINTER_ROLE */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2532  _grantRole */\n      tag_197\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2566  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2576:2613  _grantRole(MINTER_ROLE, _msgSender()) */\n    tag_375:\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2623:2658  _grantRole(BURN_ROLE, _msgSender()) */\n      tag_204\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2634:2643  BURN_ROLE */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2532  _grantRole */\n      tag_197\n        /* \"contracts/utils/WithSupervisedTransfersAvax.sol\":2522:2566  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1024:1119  function __Ownable_init() internal onlyInitializing {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1110  __Ownable_init_unchained */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7814:8602  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7910:7928  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10040:10042   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10022:10043   */\n      mstore\n        /* \"#utility.yul\":10079:10081   */\n      0x25\n        /* \"#utility.yul\":10059:10077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10052:10082   */\n      mstore\n        /* \"#utility.yul\":10118:10152   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10098:10116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10091:10153   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10169:10187   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10162:10197   */\n      mstore\n        /* \"#utility.yul\":10214:10233   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":9838:10239   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7988:8004  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10446:10448   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10428:10449   */\n      mstore\n        /* \"#utility.yul\":10485:10487   */\n      0x23\n        /* \"#utility.yul\":10465:10483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10458:10488   */\n      mstore\n        /* \"#utility.yul\":10524:10558   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":10504:10522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10497:10559   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10575:10593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10568:10601   */\n      mstore\n        /* \"#utility.yul\":10618:10637   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":10244:10643   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_389:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8104:8123  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8135  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8159:8180  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_393\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10850:10852   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10832:10853   */\n      mstore\n        /* \"#utility.yul\":10889:10891   */\n      0x26\n        /* \"#utility.yul\":10869:10887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10862:10892   */\n      mstore\n        /* \"#utility.yul\":10928:10962   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":10908:10926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10901:10963   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":10979:10997   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10972:11008   */\n      mstore\n        /* \"#utility.yul\":11025:11044   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_202\n        /* \"#utility.yul\":10648:11050   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8295  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8295  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8485  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8495  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_396\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8289:8295  amount */\n      dup7\n        /* \"#utility.yul\":1549:1574   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1522:1540   */\n      add\n      swap1\n        /* \"#utility.yul\":1403:1580   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8558:8595  _afterTokenTransfer(from, to, amount) */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4173:4674  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4269:4273  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4275:4282  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4268  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4256:4668  if (!hasRole(role, account)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4475:4482  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4474  StringsUpgradeable.toHexString */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_403\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4593:4597  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4600:4602  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4584  StringsUpgradeable.toHexString */\n      tag_404\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4351:4625  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_405\n      swap3\n      swap2\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4299:4657  revert(... */\n      dup3\n      mstore\n      tag_202\n      swap2\n      0x04\n      add\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2451  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2409  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2417  _name = name_ */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2412:2417  name_ */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2409  _name */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2417  _name = name_ */\n      tag_415\n      jump\t// in\n    tag_414:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2434  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2444  _symbol = symbol_ */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2437:2444  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2434  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2444  _symbol = symbol_ */\n      tag_415\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1125:1236  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_361\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1215  _transferOwnership */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_160\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_428\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_211\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_430\n      jumpi\n      tag_430\n      tag_431\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_432\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_432:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_434\n      jumpi\n      tag_434\n      tag_435\n      jump\t// in\n    tag_434:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_437\n      jumpi\n      tag_437\n      tag_435\n      jump\t// in\n    tag_437:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_441\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_427\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_442\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_211\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_439\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_444\n      jumpi\n      tag_444\n      tag_435\n      jump\t// in\n    tag_444:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_446\n      jumpi\n      tag_446\n      tag_435\n      jump\t// in\n    tag_446:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      tag_447\n      dup2\n      tag_448\n      jump\t// in\n    tag_447:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_438)\n    tag_439:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14776:14778   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14758:14779   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14795:14813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14788:14818   */\n      mstore\n        /* \"#utility.yul\":14854:14888   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":14834:14852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14827:14889   */\n      mstore\n        /* \"#utility.yul\":14906:14924   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_202\n        /* \"#utility.yul\":14574:14930   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_43:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_460:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:915   */\n    tag_50:\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup3\n        /* \"#utility.yul\":672:685   */\n      mload\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":705:714   */\n      dup5\n        /* \"#utility.yul\":701:719   */\n      add\n        /* \"#utility.yul\":694:728   */\n      mstore\n        /* \"#utility.yul\":780:786   */\n      dup1\n        /* \"#utility.yul\":775:777   */\n      0x20\n        /* \"#utility.yul\":767:773   */\n      dup6\n        /* \"#utility.yul\":763:778   */\n      add\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":737:787   */\n      mcopy\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":822:828   */\n      dup3\n        /* \"#utility.yul\":811:820   */\n      dup6\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":803:834   */\n      add\n        /* \"#utility.yul\":796:838   */\n      mstore\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":899:901   */\n      0x1f\n        /* \"#utility.yul\":895:902   */\n      not\n        /* \"#utility.yul\":890:892   */\n      0x1f\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:903   */\n      and\n        /* \"#utility.yul\":863:872   */\n      dup5\n        /* \"#utility.yul\":859:904   */\n      add\n        /* \"#utility.yul\":855:909   */\n      add\n        /* \"#utility.yul\":847:909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":497:915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1093   */\n    tag_452:\n        /* \"#utility.yul\":988:1008   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1037:1068   */\n      dup2\n      and\n        /* \"#utility.yul\":1027:1069   */\n      dup2\n      eq\n        /* \"#utility.yul\":1017:1087   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1073:1085   */\n      revert\n        /* \"#utility.yul\":1017:1087   */\n    tag_465:\n        /* \"#utility.yul\":920:1093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1398   */\n    tag_53:\n        /* \"#utility.yul\":1166:1172   */\n      0x00\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1227:1229   */\n      0x40\n        /* \"#utility.yul\":1215:1224   */\n      dup4\n        /* \"#utility.yul\":1206:1213   */\n      dup6\n        /* \"#utility.yul\":1202:1225   */\n      sub\n        /* \"#utility.yul\":1198:1230   */\n      slt\n        /* \"#utility.yul\":1195:1247   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1243:1244   */\n      0x00\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1245   */\n      revert\n        /* \"#utility.yul\":1195:1247   */\n    tag_467:\n        /* \"#utility.yul\":1266:1295   */\n      tag_468\n        /* \"#utility.yul\":1285:1294   */\n      dup4\n        /* \"#utility.yul\":1266:1295   */\n      tag_452\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1256:1295   */\n      swap5\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1349:1367   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1336:1368   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1398   */\n      jump\t// out\n        /* \"#utility.yul\":1585:1959   */\n    tag_62:\n        /* \"#utility.yul\":1662:1668   */\n      0x00\n        /* \"#utility.yul\":1670:1676   */\n      0x00\n        /* \"#utility.yul\":1678:1684   */\n      0x00\n        /* \"#utility.yul\":1731:1733   */\n      0x60\n        /* \"#utility.yul\":1719:1728   */\n      dup5\n        /* \"#utility.yul\":1710:1717   */\n      dup7\n        /* \"#utility.yul\":1706:1729   */\n      sub\n        /* \"#utility.yul\":1702:1734   */\n      slt\n        /* \"#utility.yul\":1699:1751   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1737:1749   */\n      revert\n        /* \"#utility.yul\":1699:1751   */\n    tag_471:\n        /* \"#utility.yul\":1770:1799   */\n      tag_472\n        /* \"#utility.yul\":1789:1798   */\n      dup5\n        /* \"#utility.yul\":1770:1799   */\n      tag_452\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":1760:1799   */\n      swap3\n      pop\n        /* \"#utility.yul\":1818:1856   */\n      tag_473\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"#utility.yul\":1841:1850   */\n      dup6\n        /* \"#utility.yul\":1837:1855   */\n      add\n        /* \"#utility.yul\":1818:1856   */\n      tag_452\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1585:1959   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1808:1856   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1910:1928   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1897:1929   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1585:1959   */\n      jump\t// out\n        /* \"#utility.yul\":1964:2190   */\n    tag_67:\n        /* \"#utility.yul\":2023:2029   */\n      0x00\n        /* \"#utility.yul\":2076:2078   */\n      0x20\n        /* \"#utility.yul\":2064:2073   */\n      dup3\n        /* \"#utility.yul\":2055:2062   */\n      dup5\n        /* \"#utility.yul\":2051:2074   */\n      sub\n        /* \"#utility.yul\":2047:2079   */\n      slt\n        /* \"#utility.yul\":2044:2096   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":2092:2093   */\n      0x00\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2082:2094   */\n      revert\n        /* \"#utility.yul\":2044:2096   */\n    tag_475:\n      pop\n        /* \"#utility.yul\":2137:2160   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1964:2190   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2677   */\n    tag_73:\n        /* \"#utility.yul\":2445:2451   */\n      0x00\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_478:\n        /* \"#utility.yul\":2567:2590   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2633:2671   */\n      tag_479\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      dup5\n      add\n        /* \"#utility.yul\":2633:2671   */\n      tag_452\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2623:2671   */\n      swap1\n      pop\n        /* \"#utility.yul\":2377:2677   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3102:3288   */\n    tag_98:\n        /* \"#utility.yul\":3161:3167   */\n      0x00\n        /* \"#utility.yul\":3214:3216   */\n      0x20\n        /* \"#utility.yul\":3202:3211   */\n      dup3\n        /* \"#utility.yul\":3193:3200   */\n      dup5\n        /* \"#utility.yul\":3189:3212   */\n      sub\n        /* \"#utility.yul\":3185:3217   */\n      slt\n        /* \"#utility.yul\":3182:3234   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":3230:3231   */\n      0x00\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3220:3232   */\n      revert\n        /* \"#utility.yul\":3182:3234   */\n    tag_484:\n        /* \"#utility.yul\":3253:3282   */\n      tag_449\n        /* \"#utility.yul\":3272:3281   */\n      dup3\n        /* \"#utility.yul\":3253:3282   */\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":3698:3958   */\n    tag_148:\n        /* \"#utility.yul\":3766:3772   */\n      0x00\n        /* \"#utility.yul\":3774:3780   */\n      0x00\n        /* \"#utility.yul\":3827:3829   */\n      0x40\n        /* \"#utility.yul\":3815:3824   */\n      dup4\n        /* \"#utility.yul\":3806:3813   */\n      dup6\n        /* \"#utility.yul\":3802:3825   */\n      sub\n        /* \"#utility.yul\":3798:3830   */\n      slt\n        /* \"#utility.yul\":3795:3847   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      0x00\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3795:3847   */\n    tag_489:\n        /* \"#utility.yul\":3866:3895   */\n      tag_490\n        /* \"#utility.yul\":3885:3894   */\n      dup4\n        /* \"#utility.yul\":3866:3895   */\n      tag_452\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3856:3895   */\n      swap2\n      pop\n        /* \"#utility.yul\":3914:3952   */\n      tag_479\n        /* \"#utility.yul\":3948:3950   */\n      0x20\n        /* \"#utility.yul\":3937:3946   */\n      dup5\n        /* \"#utility.yul\":3933:3951   */\n      add\n        /* \"#utility.yul\":3914:3952   */\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":3963:4239   */\n    tag_153:\n        /* \"#utility.yul\":4021:4027   */\n      0x00\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4062:4071   */\n      dup3\n        /* \"#utility.yul\":4053:4060   */\n      dup5\n        /* \"#utility.yul\":4049:4072   */\n      sub\n        /* \"#utility.yul\":4045:4077   */\n      slt\n        /* \"#utility.yul\":4042:4094   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4087:4088   */\n      0x00\n        /* \"#utility.yul\":4080:4092   */\n      revert\n        /* \"#utility.yul\":4042:4094   */\n    tag_493:\n        /* \"#utility.yul\":4129:4138   */\n      dup2\n        /* \"#utility.yul\":4116:4139   */\n      calldataload\n        /* \"#utility.yul\":4179:4189   */\n      0xffffffff\n        /* \"#utility.yul\":4172:4177   */\n      dup2\n        /* \"#utility.yul\":4168:4190   */\n      and\n        /* \"#utility.yul\":4161:4166   */\n      dup2\n        /* \"#utility.yul\":4158:4191   */\n      eq\n        /* \"#utility.yul\":4148:4209   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4205:4206   */\n      0x00\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4195:4207   */\n      revert\n        /* \"#utility.yul\":4244:4624   */\n    tag_164:\n        /* \"#utility.yul\":4323:4324   */\n      0x01\n        /* \"#utility.yul\":4319:4331   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4366:4378   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4387:4448   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":4441:4445   */\n      0x7f\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4429:4446   */\n      and\n        /* \"#utility.yul\":4419:4446   */\n      swap2\n      pop\n        /* \"#utility.yul\":4387:4448   */\n    tag_496:\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4486:4492   */\n      dup3\n        /* \"#utility.yul\":4483:4497   */\n      lt\n        /* \"#utility.yul\":4463:4481   */\n      dup2\n        /* \"#utility.yul\":4460:4498   */\n      sub\n        /* \"#utility.yul\":4457:4618   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":4540:4550   */\n      0x4e487b71\n        /* \"#utility.yul\":4535:4538   */\n      0xe0\n        /* \"#utility.yul\":4531:4551   */\n      shl\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4521:4552   */\n      mstore\n        /* \"#utility.yul\":4575:4579   */\n      0x22\n        /* \"#utility.yul\":4572:4573   */\n      0x04\n        /* \"#utility.yul\":4565:4580   */\n      mstore\n        /* \"#utility.yul\":4603:4607   */\n      0x24\n        /* \"#utility.yul\":4600:4601   */\n      0x00\n        /* \"#utility.yul\":4593:4608   */\n      revert\n        /* \"#utility.yul\":4457:4618   */\n    tag_497:\n      pop\n        /* \"#utility.yul\":4244:4624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5045:5172   */\n    tag_453:\n        /* \"#utility.yul\":5106:5116   */\n      0x4e487b71\n        /* \"#utility.yul\":5101:5104   */\n      0xe0\n        /* \"#utility.yul\":5097:5117   */\n      shl\n        /* \"#utility.yul\":5094:5095   */\n      0x00\n        /* \"#utility.yul\":5087:5118   */\n      mstore\n        /* \"#utility.yul\":5137:5141   */\n      0x11\n        /* \"#utility.yul\":5134:5135   */\n      0x04\n        /* \"#utility.yul\":5127:5142   */\n      mstore\n        /* \"#utility.yul\":5161:5165   */\n      0x24\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5151:5166   */\n      revert\n        /* \"#utility.yul\":5177:5302   */\n    tag_211:\n        /* \"#utility.yul\":5242:5251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5263:5273   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5260:5296   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":5276:5294   */\n      tag_160\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":9426:9833   */\n    tag_361:\n        /* \"#utility.yul\":9628:9630   */\n      0x20\n        /* \"#utility.yul\":9610:9631   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9667:9669   */\n      0x2b\n        /* \"#utility.yul\":9647:9665   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9640:9670   */\n      mstore\n        /* \"#utility.yul\":9706:9740   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":9701:9703   */\n      0x40\n        /* \"#utility.yul\":9686:9704   */\n      dup3\n      add\n        /* \"#utility.yul\":9679:9741   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":9772:9774   */\n      0x60\n        /* \"#utility.yul\":9757:9775   */\n      dup3\n      add\n        /* \"#utility.yul\":9750:9791   */\n      mstore\n        /* \"#utility.yul\":9823:9826   */\n      0x80\n        /* \"#utility.yul\":9808:9827   */\n      add\n      swap1\n        /* \"#utility.yul\":9426:9833   */\n      jump\t// out\n        /* \"#utility.yul\":11055:11267   */\n    tag_454:\n        /* \"#utility.yul\":11097:11100   */\n      0x00\n        /* \"#utility.yul\":11135:11140   */\n      dup2\n        /* \"#utility.yul\":11129:11141   */\n      mload\n        /* \"#utility.yul\":11179:11185   */\n      dup1\n        /* \"#utility.yul\":11172:11176   */\n      0x20\n        /* \"#utility.yul\":11165:11170   */\n      dup5\n        /* \"#utility.yul\":11161:11177   */\n      add\n        /* \"#utility.yul\":11156:11159   */\n      dup6\n        /* \"#utility.yul\":11150:11186   */\n      mcopy\n        /* \"#utility.yul\":11241:11242   */\n      0x00\n        /* \"#utility.yul\":11205:11221   */\n      swap4\n      add\n        /* \"#utility.yul\":11230:11243   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":11205:11221   */\n      swap1\n      swap2\n        /* \"#utility.yul\":11055:11267   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11272:11867   */\n    tag_406:\n        /* \"#utility.yul\":11683:11708   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":11678:11681   */\n      dup2\n        /* \"#utility.yul\":11671:11709   */\n      mstore\n        /* \"#utility.yul\":11653:11656   */\n      0x00\n        /* \"#utility.yul\":11728:11767   */\n      tag_520\n        /* \"#utility.yul\":11763:11765   */\n      0x17\n        /* \"#utility.yul\":11758:11761   */\n      dup4\n        /* \"#utility.yul\":11754:11766   */\n      add\n        /* \"#utility.yul\":11746:11752   */\n      dup6\n        /* \"#utility.yul\":11728:11767   */\n      tag_454\n      jump\t// in\n    tag_520:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":11783:11785   */\n      dup2\n        /* \"#utility.yul\":11776:11807   */\n      mstore\n        /* \"#utility.yul\":11823:11861   */\n      tag_521\n        /* \"#utility.yul\":11857:11859   */\n      0x11\n        /* \"#utility.yul\":11853:11855   */\n      dup3\n        /* \"#utility.yul\":11849:11860   */\n      add\n        /* \"#utility.yul\":11841:11847   */\n      dup6\n        /* \"#utility.yul\":11823:11861   */\n      tag_454\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11816:11861   */\n      swap6\n        /* \"#utility.yul\":11272:11867   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11872:11999   */\n    tag_431:\n        /* \"#utility.yul\":11933:11943   */\n      0x4e487b71\n        /* \"#utility.yul\":11928:11931   */\n      0xe0\n        /* \"#utility.yul\":11924:11944   */\n      shl\n        /* \"#utility.yul\":11921:11922   */\n      0x00\n        /* \"#utility.yul\":11914:11945   */\n      mstore\n        /* \"#utility.yul\":11964:11968   */\n      0x41\n        /* \"#utility.yul\":11961:11962   */\n      0x04\n        /* \"#utility.yul\":11954:11969   */\n      mstore\n        /* \"#utility.yul\":11988:11992   */\n      0x24\n        /* \"#utility.yul\":11985:11986   */\n      0x00\n        /* \"#utility.yul\":11978:11993   */\n      revert\n        /* \"#utility.yul\":12130:12648   */\n    tag_456:\n        /* \"#utility.yul\":12232:12234   */\n      0x1f\n        /* \"#utility.yul\":12227:12230   */\n      dup3\n        /* \"#utility.yul\":12224:12235   */\n      gt\n        /* \"#utility.yul\":12221:12642   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":12268:12273   */\n      dup1\n        /* \"#utility.yul\":12265:12266   */\n      0x00\n        /* \"#utility.yul\":12258:12274   */\n      mstore\n        /* \"#utility.yul\":12312:12316   */\n      0x20\n        /* \"#utility.yul\":12309:12310   */\n      0x00\n        /* \"#utility.yul\":12299:12317   */\n      keccak256\n        /* \"#utility.yul\":12382:12384   */\n      0x1f\n        /* \"#utility.yul\":12370:12380   */\n      dup5\n        /* \"#utility.yul\":12366:12385   */\n      add\n        /* \"#utility.yul\":12363:12364   */\n      0x05\n        /* \"#utility.yul\":12359:12386   */\n      shr\n        /* \"#utility.yul\":12353:12357   */\n      dup2\n        /* \"#utility.yul\":12349:12387   */\n      add\n        /* \"#utility.yul\":12418:12422   */\n      0x20\n        /* \"#utility.yul\":12406:12416   */\n      dup6\n        /* \"#utility.yul\":12403:12423   */\n      lt\n        /* \"#utility.yul\":12400:12447   */\n      iszero\n      tag_526\n      jumpi\n      pop\n        /* \"#utility.yul\":12441:12445   */\n      dup1\n        /* \"#utility.yul\":12400:12447   */\n    tag_526:\n        /* \"#utility.yul\":12496:12498   */\n      0x1f\n        /* \"#utility.yul\":12491:12494   */\n      dup5\n        /* \"#utility.yul\":12487:12499   */\n      add\n        /* \"#utility.yul\":12484:12485   */\n      0x05\n        /* \"#utility.yul\":12480:12500   */\n      shr\n        /* \"#utility.yul\":12474:12478   */\n      dup3\n        /* \"#utility.yul\":12470:12501   */\n      add\n        /* \"#utility.yul\":12460:12501   */\n      swap2\n      pop\n        /* \"#utility.yul\":12551:12632   */\n    tag_527:\n        /* \"#utility.yul\":12569:12571   */\n      dup2\n        /* \"#utility.yul\":12562:12567   */\n      dup2\n        /* \"#utility.yul\":12559:12572   */\n      lt\n        /* \"#utility.yul\":12551:12632   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":12628:12629   */\n      0x00\n        /* \"#utility.yul\":12614:12630   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12595:12596   */\n      0x01\n        /* \"#utility.yul\":12584:12597   */\n      add\n        /* \"#utility.yul\":12551:12632   */\n      jump(tag_527)\n    tag_529:\n        /* \"#utility.yul\":12555:12558   */\n      pop\n      pop\n        /* \"#utility.yul\":12130:12648   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12824:14123   */\n    tag_415:\n        /* \"#utility.yul\":12950:12953   */\n      dup2\n        /* \"#utility.yul\":12944:12954   */\n      mload\n        /* \"#utility.yul\":12977:12995   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12969:12975   */\n      dup2\n        /* \"#utility.yul\":12966:12996   */\n      gt\n        /* \"#utility.yul\":12963:13019   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":12999:13017   */\n      tag_533\n      tag_431\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13028:13125   */\n      tag_534\n        /* \"#utility.yul\":13118:13124   */\n      dup2\n        /* \"#utility.yul\":13078:13116   */\n      tag_535\n        /* \"#utility.yul\":13110:13114   */\n      dup5\n        /* \"#utility.yul\":13104:13115   */\n      sload\n        /* \"#utility.yul\":13078:13116   */\n      tag_164\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13072:13076   */\n      dup5\n        /* \"#utility.yul\":13028:13125   */\n      tag_456\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13174:13178   */\n      0x20\n        /* \"#utility.yul\":13205:13207   */\n      0x1f\n        /* \"#utility.yul\":13194:13208   */\n      dup3\n      gt\n        /* \"#utility.yul\":13222:13223   */\n      0x01\n        /* \"#utility.yul\":13217:13866   */\n      dup2\n      eq\n      tag_537\n      jumpi\n        /* \"#utility.yul\":13910:13911   */\n      0x00\n        /* \"#utility.yul\":13927:13933   */\n      dup4\n        /* \"#utility.yul\":13924:14013   */\n      iszero\n      tag_538\n      jumpi\n      pop\n        /* \"#utility.yul\":13979:13998   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":13973:13999   */\n      mload\n        /* \"#utility.yul\":13924:14013   */\n    tag_538:\n      not(0x00)\n        /* \"#utility.yul\":12781:12782   */\n      0x03\n        /* \"#utility.yul\":12777:12788   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12773:12797   */\n      shr\n        /* \"#utility.yul\":12769:12798   */\n      not\n        /* \"#utility.yul\":12759:12799   */\n      and\n        /* \"#utility.yul\":12805:12806   */\n      0x01\n        /* \"#utility.yul\":12801:12812   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":12756:12813   */\n      or\n        /* \"#utility.yul\":14026:14107   */\n      dup5\n      sstore\n        /* \"#utility.yul\":13187:14117   */\n      jump(tag_529)\n        /* \"#utility.yul\":13217:13866   */\n    tag_537:\n        /* \"#utility.yul\":12077:12078   */\n      0x00\n        /* \"#utility.yul\":12070:12084   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":12114:12118   */\n      0x20\n        /* \"#utility.yul\":12101:12119   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":13253:13273   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":13371:13593   */\n    tag_541:\n        /* \"#utility.yul\":13385:13392   */\n      dup3\n        /* \"#utility.yul\":13382:13383   */\n      dup2\n        /* \"#utility.yul\":13379:13393   */\n      lt\n        /* \"#utility.yul\":13371:13593   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":13467:13486   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":13461:13487   */\n      mload\n        /* \"#utility.yul\":13446:13488   */\n      dup3\n      sstore\n        /* \"#utility.yul\":13574:13578   */\n      0x20\n        /* \"#utility.yul\":13559:13579   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":13527:13528   */\n      0x01\n        /* \"#utility.yul\":13515:13529   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":13401:13413   */\n      add\n        /* \"#utility.yul\":13371:13593   */\n      jump(tag_541)\n    tag_543:\n        /* \"#utility.yul\":13375:13378   */\n      pop\n        /* \"#utility.yul\":13621:13627   */\n      dup5\n        /* \"#utility.yul\":13612:13619   */\n      dup3\n        /* \"#utility.yul\":13609:13628   */\n      lt\n        /* \"#utility.yul\":13606:13807   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13682:13701   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":13676:13702   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13765:13766   */\n      0x03\n        /* \"#utility.yul\":13761:13775   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":13777:13780   */\n      0xf8\n        /* \"#utility.yul\":13757:13781   */\n      and\n        /* \"#utility.yul\":13753:13790   */\n      shr\n        /* \"#utility.yul\":13749:13791   */\n      not\n        /* \"#utility.yul\":13734:13792   */\n      and\n        /* \"#utility.yul\":13719:13793   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13606:13807   */\n    tag_544:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13853:13854   */\n      0x01\n        /* \"#utility.yul\":13837:13851   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13833:13855   */\n      add\n        /* \"#utility.yul\":13820:13856   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12824:14123   */\n      jump\t// out\n        /* \"#utility.yul\":14128:14296   */\n    tag_427:\n        /* \"#utility.yul\":14201:14210   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":14232:14241   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14249:14264   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":14243:14265   */\n      dup5\n      eq\n        /* \"#utility.yul\":14229:14266   */\n      or\n        /* \"#utility.yul\":14219:14290   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":14270:14288   */\n      tag_160\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":14301:14428   */\n    tag_435:\n        /* \"#utility.yul\":14362:14372   */\n      0x4e487b71\n        /* \"#utility.yul\":14357:14360   */\n      0xe0\n        /* \"#utility.yul\":14353:14373   */\n      shl\n        /* \"#utility.yul\":14350:14351   */\n      0x00\n        /* \"#utility.yul\":14343:14374   */\n      mstore\n        /* \"#utility.yul\":14393:14397   */\n      0x32\n        /* \"#utility.yul\":14390:14391   */\n      0x04\n        /* \"#utility.yul\":14383:14398   */\n      mstore\n        /* \"#utility.yul\":14417:14421   */\n      0x24\n        /* \"#utility.yul\":14414:14415   */\n      0x00\n        /* \"#utility.yul\":14407:14422   */\n      revert\n        /* \"#utility.yul\":14433:14569   */\n    tag_448:\n        /* \"#utility.yul\":14472:14475   */\n      0x00\n        /* \"#utility.yul\":14500:14505   */\n      dup2\n        /* \"#utility.yul\":14490:14529   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":14509:14527   */\n      tag_551\n      tag_453\n      jump\t// in\n    tag_551:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":14545:14563   */\n      add\n      swap1\n        /* \"#utility.yul\":14433:14569   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122068d1b88710002b7679e654ee9c3c4ada6117129ea101befa5817c74403718dc864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506119c38061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106101dc575f3560e01c806379cc679011610109578063a9059cbb1161009e578063d547741f1161006e578063d547741f14610443578063dd62ed3e14610456578063e90cdd1c14610469578063f2fde38b1461047c575f5ffd5b8063a9059cbb146103bc578063b930908f146103cf578063bd39a2a8146103f6578063d53913931461041c575f5ffd5b806395d89b41116100d957806395d89b41146103875780639dc29fac1461038f578063a217fddf146103a2578063a457c2d7146103a9575f5ffd5b806379cc67901461033e5780638129fc1c146103515780638da5cb5b1461035957806391d1485414610374575f5ffd5b8063313ce5671161017f57806342966c681161014f57806342966c68146102d45780634e695cca146102e757806370a082311461030e578063715018a614610336575f5ffd5b8063313ce5671461028c57806336568abe1461029b57806339509351146102ae57806340c10f19146102c1575f5ffd5b806318160ddd116101ba57806318160ddd1461023057806323b872dd14610242578063248a9ca3146102555780632f2ff15d14610277575f5ffd5b806301ffc9a7146101e057806306fdde0314610208578063095ea7b31461021d575b5f5ffd5b6101f36101ee366004611596565b61048f565b60405190151581526020015b60405180910390f35b6102106104c5565b6040516101ff91906115bd565b6101f361022b36600461160d565b610555565b6035545b6040519081526020016101ff565b6101f3610250366004611635565b61056c565b61023461026336600461166f565b5f90815260fb602052604090206001015490565b61028a610285366004611686565b610632565b005b604051601281526020016101ff565b61028a6102a9366004611686565b61065b565b6101f36102bc36600461160d565b6106de565b61028a6102cf36600461160d565b6106ff565b61028a6102e236600461166f565b610733565b6102347f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b081565b61023461031c3660046116b0565b6001600160a01b03165f9081526033602052604090205490565b61028a610740565b61028a61034c36600461160d565b610753565b61028a610768565b6065546040516001600160a01b0390911681526020016101ff565b6101f3610382366004611686565b610908565b610210610932565b61028a61039d36600461160d565b610941565b6102345f81565b6101f36103b736600461160d565b610975565b6101f36103ca36600461160d565b6109fa565b6102347fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa2281565b61012d546104079063ffffffff1681565b60405163ffffffff90911681526020016101ff565b6102347f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61028a610451366004611686565b610a07565b6102346104643660046116c9565b610a2b565b61028a6104773660046116f1565b610a55565b61028a61048a3660046116b0565b610af5565b5f6001600160e01b03198216637965db0b60e01b14806104bf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060603680546104d490611714565b80601f016020809104026020016040519081016040528092919081815260200182805461050090611714565b801561054b5780601f106105225761010080835404028352916020019161054b565b820191905f5260205f20905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b5f33610562818585610b6b565b5060019392505050565b61012d545f9084908490839063ffffffff161580610592575061012d5463ffffffff1642105b9050801561061c575f6105a58185610908565b806105b557506105b55f84610908565b806105c557506105c55f33610908565b9050801580156105fc57506105fa7f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b084610908565b155b1561061a5760405163afae8e9760e01b815260040160405180910390fd5b505b610627878787610c8e565b979650505050505050565b5f82815260fb602052604090206001015461064c81610ca6565b6106568383610cb0565b505050565b6001600160a01b03811633146106d05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106da8282610d35565b5050565b5f336105628185856106f08383610a2b565b6106fa9190611760565b610b6b565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661072981610ca6565b6106568383610d9b565b61073d3382610e5a565b50565b610748610f8c565b6107515f610fe6565b565b61075e823383611037565b6106da8282610e5a565b5f54610100900460ff161580801561078657505f54600160ff909116105b8061079f5750303b15801561079f57505f5460ff166001145b6108025760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106c7565b5f805460ff191660011790558015610823575f805461ff0019166101001790555b61086760405180604001604052806006815260200165416c7661726160d01b81525060405180604001604052806004815260200163414c564160e01b8152506110af565b61086f6110df565b6108b97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22611105565b6108c1611149565b801561073d575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b5f91825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060603780546104d490611714565b7fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa2261096b81610ca6565b6106568383610e5a565b5f33816109828286610a2b565b9050838110156109e25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106c7565b6109ef8286868403610b6b565b506001949350505050565b5f33610562818585611177565b5f82815260fb6020526040902060010154610a2181610ca6565b6106568383610d35565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b5f610a5f81610ca6565b61012d5463ffffffff1615801590610a80575061012d5463ffffffff164210155b15610a9e57604051636f555ee160e11b815260040160405180910390fd5b60405163ffffffff831681527f0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d69060200160405180910390a15061012d805463ffffffff191663ffffffff92909216919091179055565b610afd610f8c565b6001600160a01b038116610b625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106c7565b61073d81610fe6565b6001600160a01b038316610bcd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106c7565b6001600160a01b038216610c2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106c7565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f33610c9b858285611037565b6109ef858585611177565b61073d8133611320565b610cba8282610908565b6106da575f82815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610cf13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610d3f8282610908565b156106da575f82815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216610df15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106c7565b8060355f828254610e029190611760565b90915550506001600160a01b0382165f818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610eba5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106c7565b6001600160a01b0382165f9081526033602052604090205481811015610f2d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106c7565b6001600160a01b0383165f8181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6065546001600160a01b031633146107515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c7565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6110428484610a2b565b90505f1981146110a9578181101561109c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106c7565b6110a98484848403610b6b565b50505050565b5f54610100900460ff166110d55760405162461bcd60e51b81526004016106c790611773565b6106da8282611379565b5f54610100900460ff166107515760405162461bcd60e51b81526004016106c790611773565b5f54610100900460ff1661112b5760405162461bcd60e51b81526004016106c790611773565b6111355f33610cb0565b61113f8233610cb0565b6106da8133610cb0565b5f54610100900460ff1661116f5760405162461bcd60e51b81526004016106c790611773565b6107516113b8565b6001600160a01b0383166111db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106c7565b6001600160a01b03821661123d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106c7565b6001600160a01b0383165f90815260336020526040902054818110156112b45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106c7565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113139086815260200190565b60405180910390a36110a9565b61132a8282610908565b6106da57611337816113e7565b6113428360206113f9565b6040516020016113539291906117d5565b60408051601f198184030181529082905262461bcd60e51b82526106c7916004016115bd565b5f54610100900460ff1661139f5760405162461bcd60e51b81526004016106c790611773565b60366113ab8382611892565b5060376106568282611892565b5f54610100900460ff166113de5760405162461bcd60e51b81526004016106c790611773565b61075133610fe6565b60606104bf6001600160a01b03831660145b60605f61140783600261194d565b611412906002611760565b67ffffffffffffffff81111561142a5761142a611833565b6040519080825280601f01601f191660200182016040528015611454576020820181803683370190505b509050600360fc1b815f8151811061146e5761146e611964565b60200101906001600160f81b03191690815f1a905350600f60fb1b8160018151811061149c5761149c611964565b60200101906001600160f81b03191690815f1a9053505f6114be84600261194d565b6114c9906001611760565b90505b6001811115611540576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114fd576114fd611964565b1a60f81b82828151811061151357611513611964565b60200101906001600160f81b03191690815f1a90535060049490941c9361153981611978565b90506114cc565b50831561158f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c7565b9392505050565b5f602082840312156115a6575f5ffd5b81356001600160e01b03198116811461158f575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611608575f5ffd5b919050565b5f5f6040838503121561161e575f5ffd5b611627836115f2565b946020939093013593505050565b5f5f5f60608486031215611647575f5ffd5b611650846115f2565b925061165e602085016115f2565b929592945050506040919091013590565b5f6020828403121561167f575f5ffd5b5035919050565b5f5f60408385031215611697575f5ffd5b823591506116a7602084016115f2565b90509250929050565b5f602082840312156116c0575f5ffd5b61158f826115f2565b5f5f604083850312156116da575f5ffd5b6116e3836115f2565b91506116a7602084016115f2565b5f60208284031215611701575f5ffd5b813563ffffffff8116811461158f575f5ffd5b600181811c9082168061172857607f821691505b60208210810361174657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104bf576104bf61174c565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f61180660178301856117be565b7001034b99036b4b9b9b4b733903937b6329607d1b815261182a60118201856117be565b95945050505050565b634e487b7160e01b5f52604160045260245ffd5b601f82111561065657805f5260205f20601f840160051c8101602085101561186c5750805b601f840160051c820191505b8181101561188b575f8155600101611878565b5050505050565b815167ffffffffffffffff8111156118ac576118ac611833565b6118c0816118ba8454611714565b84611847565b6020601f8211600181146118f2575f83156118db5750848201515b5f19600385901b1c1916600184901b17845561188b565b5f84815260208120601f198516915b828110156119215787850151825560209485019460019092019101611901565b508482101561193e57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b80820281158282048414176104bf576104bf61174c565b634e487b7160e01b5f52603260045260245ffd5b5f816119865761198661174c565b505f19019056fea264697066735822122068d1b88710002b7679e654ee9c3c4ada6117129ea101befa5817c74403718dc864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19C3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xE90CDD1C EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xB930908F EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xBD39A2A8 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x41C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x4E695CCA EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x277 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x166F JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH2 0x234 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x740 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x768 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x234 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x234 PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 DUP2 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH2 0x407 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x234 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x28A PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4BF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x1714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x500 SWAP1 PUSH2 0x1714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH0 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF AND ISZERO DUP1 PUSH2 0x592 JUMPI POP PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 PUSH2 0x5A5 DUP2 DUP6 PUSH2 0x908 JUMP JUMPDEST DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B5 PUSH0 DUP5 PUSH2 0x908 JUMP JUMPDEST DUP1 PUSH2 0x5C5 JUMPI POP PUSH2 0x5C5 PUSH0 CALLER PUSH2 0x908 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x5FC JUMPI POP PUSH2 0x5FA PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP5 PUSH2 0x908 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAFAE8E97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x627 DUP8 DUP8 DUP8 PUSH2 0xC8E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x64C DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xD35 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0x6F0 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x729 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x73D CALLER DUP3 PUSH2 0xE5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x748 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0x751 PUSH0 PUSH2 0xFE6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x75E DUP3 CALLER DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x786 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x79F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x823 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x867 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x416C76617261 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x414C5641 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x86F PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x8B9 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x1149 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 PUSH2 0x96B DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xE5A JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x982 DUP3 DUP7 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x9EF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA21 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA5F DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA80 JUMPI POP PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F555EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xE210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x12D DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAFD PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xC9B DUP6 DUP3 DUP6 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x9EF DUP6 DUP6 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x73D DUP2 CALLER PUSH2 0x1320 JUMP JUMPDEST PUSH2 0xCBA DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCF1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x6DA JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1042 DUP5 DUP5 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x10A9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x10A9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0x1379 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1135 PUSH0 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x113F DUP3 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x6DA DUP2 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1313 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x132A DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH2 0x1337 DUP2 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x1342 DUP4 PUSH1 0x20 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1353 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C7 SWAP2 PUSH1 0x4 ADD PUSH2 0x15BD JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x13AB DUP4 DUP3 PUSH2 0x1892 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x656 DUP3 DUP3 PUSH2 0x1892 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x751 CALLER PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1407 DUP4 PUSH1 0x2 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1412 SWAP1 PUSH1 0x2 PUSH2 0x1760 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1454 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x146E JUMPI PUSH2 0x146E PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x149C JUMPI PUSH2 0x149C PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x14BE DUP5 PUSH1 0x2 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x14C9 SWAP1 PUSH1 0x1 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1540 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0x1964 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1513 JUMPI PUSH2 0x1513 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1539 DUP2 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CC JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x158F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1608 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1627 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1650 DUP5 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH1 0x20 DUP6 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x16A7 PUSH1 0x20 DUP5 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x158F DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16E3 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A7 PUSH1 0x20 DUP5 ADD PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1701 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1728 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x174C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x1806 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x182A PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x656 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x186C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x188B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1878 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AC PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x18C0 DUP2 PUSH2 0x18BA DUP5 SLOAD PUSH2 0x1714 JUMP JUMPDEST DUP5 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x18F2 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x18DB JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x188B JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1901 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x193E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x174C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x1986 JUMPI PUSH2 0x1986 PUSH2 0x174C JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD1B88710002B7679E6 SLOAD RETURNCONTRACT 0x9C EXTCODECOPY BLOBBASEFEE 0xDA PUSH2 0x1712 SWAP15 LOG1 ADD 0xBE STATICCALL PC OR 0xC7 PREVRANDAO SUB PUSH18 0x8DC864736F6C634300081E00330000000000 ",
							"sourceMap": "479:942:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ALLOWED_TRANSFER_FROM_ROLE_3264": {
									"entryPoint": null,
									"id": 3264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BURN_ROLE_3158": {
									"entryPoint": null,
									"id": 3158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_3153": {
									"entryPoint": null,
									"id": 3153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Burnable_init_1421": {
									"entryPoint": 4319,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_759": {
									"entryPoint": 4271,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_777": {
									"entryPoint": 4985,
									"id": 777,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_437": {
									"entryPoint": 4425,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_448": {
									"entryPoint": 5048,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__WithSupervisedTransfers_init_3349": {
									"entryPoint": 4357,
									"id": 3349,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1318": {
									"entryPoint": null,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1253": {
									"entryPoint": 2923,
									"id": 1253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1208": {
									"entryPoint": 3674,
									"id": 1208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_479": {
									"entryPoint": 3980,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_108": {
									"entryPoint": 3238,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_147": {
									"entryPoint": 4896,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_299": {
									"entryPoint": 3248,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1136": {
									"entryPoint": 3483,
									"id": 1136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1850": {
									"entryPoint": null,
									"id": 1850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_330": {
									"entryPoint": 3381,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_1296": {
									"entryPoint": 4151,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_536": {
									"entryPoint": 4070,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1079": {
									"entryPoint": 4471,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_874": {
									"entryPoint": 2603,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_899": {
									"entryPoint": 1365,
									"id": 899,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1461": {
									"entryPoint": 1875,
									"id": 1461,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1440": {
									"entryPoint": 1843,
									"id": 1440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_3216": {
									"entryPoint": 2369,
									"id": 3216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1002": {
									"entryPoint": 2421,
									"id": 1002,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_182": {
									"entryPoint": 1586,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_95": {
									"entryPoint": 2312,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_961": {
									"entryPoint": 1758,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_3180": {
									"entryPoint": 1896,
									"id": 3180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_1510": {
									"entryPoint": null,
									"id": 1510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@listingTimestamp_3266": {
									"entryPoint": null,
									"id": 3266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_3198": {
									"entryPoint": 1791,
									"id": 3198,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_787": {
									"entryPoint": 1221,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_493": {
									"entryPoint": 1856,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_225": {
									"entryPoint": 1627,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_202": {
									"entryPoint": 2567,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setListingTimestamp_3380": {
									"entryPoint": 2645,
									"id": 3380,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_2141": {
									"entryPoint": null,
									"id": 2141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 1167,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_797": {
									"entryPoint": 2354,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_2056": {
									"entryPoint": 5113,
									"id": 2056,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_2076": {
									"entryPoint": 5095,
									"id": 2076,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_817": {
									"entryPoint": null,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3240": {
									"entryPoint": 1388,
									"id": 3240,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_932": {
									"entryPoint": 3214,
									"id": 932,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_516": {
									"entryPoint": 2805,
									"id": 516,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_856": {
									"entryPoint": 2554,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14932:17",
										"nodeType": "YulBlock",
										"src": "0:14932:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:17",
													"nodeType": "YulBlock",
													"src": "83:217:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:17",
																"nodeType": "YulBlock",
																"src": "129:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:17",
																					"nodeType": "YulLiteral",
																					"src": "138:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:17",
																					"nodeType": "YulLiteral",
																					"src": "141:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:17"
																			},
																			"nativeSrc": "131:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:17"
																		},
																		"nativeSrc": "131:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:17"
																		},
																		"nativeSrc": "100:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:17",
																		"nodeType": "YulLiteral",
																		"src": "125:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:17"
																},
																"nativeSrc": "96:32:17",
																"nodeType": "YulFunctionCall",
																"src": "96:32:17"
															},
															"nativeSrc": "93:52:17",
															"nodeType": "YulIf",
															"src": "93:52:17"
														},
														{
															"nativeSrc": "154:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:17"
																},
																"nativeSrc": "167:23:17",
																"nodeType": "YulFunctionCall",
																"src": "167:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:17",
																	"nodeType": "YulTypedName",
																	"src": "158:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:17",
																"nodeType": "YulBlock",
																"src": "254:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:17",
																					"nodeType": "YulLiteral",
																					"src": "263:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:17",
																					"nodeType": "YulLiteral",
																					"src": "266:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:17"
																			},
																			"nativeSrc": "256:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:17"
																		},
																		"nativeSrc": "256:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:17",
																								"nodeType": "YulLiteral",
																								"src": "234:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:17",
																								"nodeType": "YulLiteral",
																								"src": "239:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:17"
																						},
																						"nativeSrc": "230:20:17",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:17"
																				},
																				"nativeSrc": "219:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:17"
																		},
																		"nativeSrc": "209:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:17"
																},
																"nativeSrc": "202:51:17",
																"nodeType": "YulFunctionCall",
																"src": "202:51:17"
															},
															"nativeSrc": "199:71:17",
															"nodeType": "YulIf",
															"src": "199:71:17"
														},
														{
															"nativeSrc": "279:15:17",
															"nodeType": "YulAssignment",
															"src": "279:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:17",
																"nodeType": "YulIdentifier",
																"src": "289:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:17",
														"nodeType": "YulTypedName",
														"src": "49:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:17",
														"nodeType": "YulTypedName",
														"src": "60:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:17",
														"nodeType": "YulTypedName",
														"src": "72:6:17",
														"type": ""
													}
												],
												"src": "14:286:17"
											},
											{
												"body": {
													"nativeSrc": "400:92:17",
													"nodeType": "YulBlock",
													"src": "400:92:17",
													"statements": [
														{
															"nativeSrc": "410:26:17",
															"nodeType": "YulAssignment",
															"src": "410:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:17",
																		"nodeType": "YulLiteral",
																		"src": "433:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:17"
																},
																"nativeSrc": "418:18:17",
																"nodeType": "YulFunctionCall",
																"src": "418:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:17"
																				},
																				"nativeSrc": "470:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:17"
																		},
																		"nativeSrc": "463:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:17"
																},
																"nativeSrc": "445:41:17",
																"nodeType": "YulFunctionCall",
																"src": "445:41:17"
															},
															"nativeSrc": "445:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:17",
														"nodeType": "YulTypedName",
														"src": "369:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:17",
														"nodeType": "YulTypedName",
														"src": "380:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:17",
														"nodeType": "YulTypedName",
														"src": "391:4:17",
														"type": ""
													}
												],
												"src": "305:187:17"
											},
											{
												"body": {
													"nativeSrc": "618:297:17",
													"nodeType": "YulBlock",
													"src": "618:297:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "635:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "646:2:17",
																		"nodeType": "YulLiteral",
																		"src": "646:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:17"
																},
																"nativeSrc": "628:21:17",
																"nodeType": "YulFunctionCall",
																"src": "628:21:17"
															},
															"nativeSrc": "628:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "628:21:17"
														},
														{
															"nativeSrc": "658:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "658:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "678:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "672:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "672:5:17"
																},
																"nativeSrc": "672:13:17",
																"nodeType": "YulFunctionCall",
																"src": "672:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:17",
																	"nodeType": "YulTypedName",
																	"src": "662:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:17",
																				"nodeType": "YulLiteral",
																				"src": "716:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:17"
																		},
																		"nativeSrc": "701:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "721:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:17"
																},
																"nativeSrc": "694:34:17",
																"nodeType": "YulFunctionCall",
																"src": "694:34:17"
															},
															"nativeSrc": "694:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "694:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:17",
																				"nodeType": "YulLiteral",
																				"src": "758:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:17"
																		},
																		"nativeSrc": "743:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "767:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:2:17",
																				"nodeType": "YulLiteral",
																				"src": "775:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:17"
																		},
																		"nativeSrc": "763:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "763:15:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "780:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "737:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:17"
																},
																"nativeSrc": "737:50:17",
																"nodeType": "YulFunctionCall",
																"src": "737:50:17"
															},
															"nativeSrc": "737:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "737:50:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "811:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "811:9:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "822:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "822:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "807:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:17"
																				},
																				"nativeSrc": "807:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:17",
																				"nodeType": "YulLiteral",
																				"src": "831:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "803:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:17"
																		},
																		"nativeSrc": "803:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "803:31:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:1:17",
																		"nodeType": "YulLiteral",
																		"src": "836:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:17"
																},
																"nativeSrc": "796:42:17",
																"nodeType": "YulFunctionCall",
																"src": "796:42:17"
															},
															"nativeSrc": "796:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "796:42:17"
														},
														{
															"nativeSrc": "847:62:17",
															"nodeType": "YulAssignment",
															"src": "847:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "863:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "863:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "882:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "882:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "890:2:17",
																								"nodeType": "YulLiteral",
																								"src": "890:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "878:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:17"
																						},
																						"nativeSrc": "878:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "878:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:2:17",
																								"nodeType": "YulLiteral",
																								"src": "899:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "895:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:17"
																						},
																						"nativeSrc": "895:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "895:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "874:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:17"
																				},
																				"nativeSrc": "874:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "874:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:17"
																		},
																		"nativeSrc": "859:45:17",
																		"nodeType": "YulFunctionCall",
																		"src": "859:45:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:17",
																		"nodeType": "YulLiteral",
																		"src": "906:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "855:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:17"
																},
																"nativeSrc": "855:54:17",
																"nodeType": "YulFunctionCall",
																"src": "855:54:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "847:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "847:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "497:418:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "587:9:17",
														"nodeType": "YulTypedName",
														"src": "587:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "598:6:17",
														"nodeType": "YulTypedName",
														"src": "598:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "609:4:17",
														"nodeType": "YulTypedName",
														"src": "609:4:17",
														"type": ""
													}
												],
												"src": "497:418:17"
											},
											{
												"body": {
													"nativeSrc": "969:124:17",
													"nodeType": "YulBlock",
													"src": "969:124:17",
													"statements": [
														{
															"nativeSrc": "979:29:17",
															"nodeType": "YulAssignment",
															"src": "979:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1001:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "988:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:17"
																},
																"nativeSrc": "988:20:17",
																"nodeType": "YulFunctionCall",
																"src": "988:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1071:16:17",
																"nodeType": "YulBlock",
																"src": "1071:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1080:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1083:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1073:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:17"
																			},
																			"nativeSrc": "1073:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:17"
																		},
																		"nativeSrc": "1073:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1030:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1030:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1041:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1056:3:17",
																										"nodeType": "YulLiteral",
																										"src": "1056:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1061:1:17",
																										"nodeType": "YulLiteral",
																										"src": "1061:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1052:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1052:3:17"
																								},
																								"nativeSrc": "1052:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "1052:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1065:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1065:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1048:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1048:3:17"
																						},
																						"nativeSrc": "1048:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1048:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1037:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1037:3:17"
																				},
																				"nativeSrc": "1037:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1037:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1027:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1027:2:17"
																		},
																		"nativeSrc": "1027:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1020:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:17"
																},
																"nativeSrc": "1020:50:17",
																"nodeType": "YulFunctionCall",
																"src": "1020:50:17"
															},
															"nativeSrc": "1017:70:17",
															"nodeType": "YulIf",
															"src": "1017:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "920:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "948:6:17",
														"nodeType": "YulTypedName",
														"src": "948:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "959:5:17",
														"nodeType": "YulTypedName",
														"src": "959:5:17",
														"type": ""
													}
												],
												"src": "920:173:17"
											},
											{
												"body": {
													"nativeSrc": "1185:213:17",
													"nodeType": "YulBlock",
													"src": "1185:213:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1231:16:17",
																"nodeType": "YulBlock",
																"src": "1231:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1240:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1243:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1233:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:17"
																			},
																			"nativeSrc": "1233:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:17"
																		},
																		"nativeSrc": "1233:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1206:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1206:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1215:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1202:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:17"
																		},
																		"nativeSrc": "1202:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1198:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:17"
																},
																"nativeSrc": "1198:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1198:32:17"
															},
															"nativeSrc": "1195:52:17",
															"nodeType": "YulIf",
															"src": "1195:52:17"
														},
														{
															"nativeSrc": "1256:39:17",
															"nodeType": "YulAssignment",
															"src": "1256:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1285:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1266:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1266:18:17"
																},
																"nativeSrc": "1266:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1266:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																}
															]
														},
														{
															"nativeSrc": "1304:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1304:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1317:1:17",
																"nodeType": "YulLiteral",
																"src": "1317:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1308:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1308:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1327:41:17",
															"nodeType": "YulAssignment",
															"src": "1327:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1353:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1364:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1364:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1349:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:17"
																		},
																		"nativeSrc": "1349:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1336:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1336:12:17"
																},
																"nativeSrc": "1336:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1336:32:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1327:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1327:5:17"
																}
															]
														},
														{
															"nativeSrc": "1377:15:17",
															"nodeType": "YulAssignment",
															"src": "1377:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1387:5:17",
																"nodeType": "YulIdentifier",
																"src": "1387:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1377:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1098:300:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1143:9:17",
														"nodeType": "YulTypedName",
														"src": "1143:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1154:7:17",
														"nodeType": "YulTypedName",
														"src": "1154:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1166:6:17",
														"nodeType": "YulTypedName",
														"src": "1166:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1174:6:17",
														"nodeType": "YulTypedName",
														"src": "1174:6:17",
														"type": ""
													}
												],
												"src": "1098:300:17"
											},
											{
												"body": {
													"nativeSrc": "1504:76:17",
													"nodeType": "YulBlock",
													"src": "1504:76:17",
													"statements": [
														{
															"nativeSrc": "1514:26:17",
															"nodeType": "YulAssignment",
															"src": "1514:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1526:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1526:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1522:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:17"
																},
																"nativeSrc": "1522:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1522:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1514:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1514:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1556:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1556:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1567:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1549:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:17"
																},
																"nativeSrc": "1549:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1549:25:17"
															},
															"nativeSrc": "1549:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1549:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1403:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1473:9:17",
														"nodeType": "YulTypedName",
														"src": "1473:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1484:6:17",
														"nodeType": "YulTypedName",
														"src": "1484:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1495:4:17",
														"nodeType": "YulTypedName",
														"src": "1495:4:17",
														"type": ""
													}
												],
												"src": "1403:177:17"
											},
											{
												"body": {
													"nativeSrc": "1689:270:17",
													"nodeType": "YulBlock",
													"src": "1689:270:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1735:16:17",
																"nodeType": "YulBlock",
																"src": "1735:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1744:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1747:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1737:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:17"
																			},
																			"nativeSrc": "1737:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1737:12:17"
																		},
																		"nativeSrc": "1737:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1710:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1710:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1706:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1706:3:17"
																		},
																		"nativeSrc": "1706:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1706:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1731:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1731:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1702:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1702:3:17"
																},
																"nativeSrc": "1702:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:17"
															},
															"nativeSrc": "1699:52:17",
															"nodeType": "YulIf",
															"src": "1699:52:17"
														},
														{
															"nativeSrc": "1760:39:17",
															"nodeType": "YulAssignment",
															"src": "1760:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1789:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1789:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1770:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1770:18:17"
																},
																"nativeSrc": "1770:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1770:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1760:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:17"
																}
															]
														},
														{
															"nativeSrc": "1808:48:17",
															"nodeType": "YulAssignment",
															"src": "1808:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1841:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1841:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1852:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1852:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1837:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:17"
																		},
																		"nativeSrc": "1837:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1818:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1818:18:17"
																},
																"nativeSrc": "1818:38:17",
																"nodeType": "YulFunctionCall",
																"src": "1818:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1808:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:17"
																}
															]
														},
														{
															"nativeSrc": "1865:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1865:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1878:1:17",
																"nodeType": "YulLiteral",
																"src": "1878:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1869:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1869:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1888:41:17",
															"nodeType": "YulAssignment",
															"src": "1888:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1914:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1925:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1925:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:17"
																		},
																		"nativeSrc": "1910:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1897:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:17"
																},
																"nativeSrc": "1897:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1897:32:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1888:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:17"
																}
															]
														},
														{
															"nativeSrc": "1938:15:17",
															"nodeType": "YulAssignment",
															"src": "1938:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1948:5:17",
																"nodeType": "YulIdentifier",
																"src": "1948:5:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1938:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1585:374:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1639:9:17",
														"nodeType": "YulTypedName",
														"src": "1639:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1650:7:17",
														"nodeType": "YulTypedName",
														"src": "1650:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1662:6:17",
														"nodeType": "YulTypedName",
														"src": "1662:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1670:6:17",
														"nodeType": "YulTypedName",
														"src": "1670:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1678:6:17",
														"nodeType": "YulTypedName",
														"src": "1678:6:17",
														"type": ""
													}
												],
												"src": "1585:374:17"
											},
											{
												"body": {
													"nativeSrc": "2034:156:17",
													"nodeType": "YulBlock",
													"src": "2034:156:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2080:16:17",
																"nodeType": "YulBlock",
																"src": "2080:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2089:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2092:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2082:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:17"
																			},
																			"nativeSrc": "2082:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2082:12:17"
																		},
																		"nativeSrc": "2082:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2082:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2055:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2055:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2064:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2064:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2051:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:17"
																		},
																		"nativeSrc": "2051:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2076:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2076:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2047:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:17"
																},
																"nativeSrc": "2047:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2047:32:17"
															},
															"nativeSrc": "2044:52:17",
															"nodeType": "YulIf",
															"src": "2044:52:17"
														},
														{
															"nativeSrc": "2105:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2105:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2118:1:17",
																"nodeType": "YulLiteral",
																"src": "2118:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2109:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2109:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2128:32:17",
															"nodeType": "YulAssignment",
															"src": "2128:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2150:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2137:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2137:12:17"
																},
																"nativeSrc": "2137:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2137:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2128:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2128:5:17"
																}
															]
														},
														{
															"nativeSrc": "2169:15:17",
															"nodeType": "YulAssignment",
															"src": "2169:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2179:5:17",
																"nodeType": "YulIdentifier",
																"src": "2179:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2169:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1964:226:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2000:9:17",
														"nodeType": "YulTypedName",
														"src": "2000:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2011:7:17",
														"nodeType": "YulTypedName",
														"src": "2011:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2023:6:17",
														"nodeType": "YulTypedName",
														"src": "2023:6:17",
														"type": ""
													}
												],
												"src": "1964:226:17"
											},
											{
												"body": {
													"nativeSrc": "2296:76:17",
													"nodeType": "YulBlock",
													"src": "2296:76:17",
													"statements": [
														{
															"nativeSrc": "2306:26:17",
															"nodeType": "YulAssignment",
															"src": "2306:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2318:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2314:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:17"
																},
																"nativeSrc": "2314:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2314:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2359:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2341:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:17"
																},
																"nativeSrc": "2341:25:17",
																"nodeType": "YulFunctionCall",
																"src": "2341:25:17"
															},
															"nativeSrc": "2341:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "2341:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2195:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2265:9:17",
														"nodeType": "YulTypedName",
														"src": "2265:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2276:6:17",
														"nodeType": "YulTypedName",
														"src": "2276:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2287:4:17",
														"nodeType": "YulTypedName",
														"src": "2287:4:17",
														"type": ""
													}
												],
												"src": "2195:177:17"
											},
											{
												"body": {
													"nativeSrc": "2464:213:17",
													"nodeType": "YulBlock",
													"src": "2464:213:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:16:17",
																"nodeType": "YulBlock",
																"src": "2510:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2519:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2522:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2512:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:17"
																			},
																			"nativeSrc": "2512:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:17"
																		},
																		"nativeSrc": "2512:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:17"
																		},
																		"nativeSrc": "2481:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:17"
																},
																"nativeSrc": "2477:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:17"
															},
															"nativeSrc": "2474:52:17",
															"nodeType": "YulIf",
															"src": "2474:52:17"
														},
														{
															"nativeSrc": "2535:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2535:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2548:1:17",
																"nodeType": "YulLiteral",
																"src": "2548:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2539:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2539:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2558:32:17",
															"nodeType": "YulAssignment",
															"src": "2558:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2580:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2580:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2567:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2567:12:17"
																},
																"nativeSrc": "2567:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2567:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2558:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2558:5:17"
																}
															]
														},
														{
															"nativeSrc": "2599:15:17",
															"nodeType": "YulAssignment",
															"src": "2599:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2609:5:17",
																"nodeType": "YulIdentifier",
																"src": "2609:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2599:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:17"
																}
															]
														},
														{
															"nativeSrc": "2623:48:17",
															"nodeType": "YulAssignment",
															"src": "2623:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:17"
																		},
																		"nativeSrc": "2652:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2633:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2633:18:17"
																},
																"nativeSrc": "2633:38:17",
																"nodeType": "YulFunctionCall",
																"src": "2633:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2623:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2377:300:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2422:9:17",
														"nodeType": "YulTypedName",
														"src": "2422:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2433:7:17",
														"nodeType": "YulTypedName",
														"src": "2433:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2445:6:17",
														"nodeType": "YulTypedName",
														"src": "2445:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2453:6:17",
														"nodeType": "YulTypedName",
														"src": "2453:6:17",
														"type": ""
													}
												],
												"src": "2377:300:17"
											},
											{
												"body": {
													"nativeSrc": "2779:87:17",
													"nodeType": "YulBlock",
													"src": "2779:87:17",
													"statements": [
														{
															"nativeSrc": "2789:26:17",
															"nodeType": "YulAssignment",
															"src": "2789:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2801:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2801:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2812:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2812:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2797:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2797:3:17"
																},
																"nativeSrc": "2797:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2797:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2789:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2789:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2831:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2846:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2846:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2854:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2854:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2842:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:17"
																		},
																		"nativeSrc": "2842:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2842:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2824:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:17"
																},
																"nativeSrc": "2824:36:17",
																"nodeType": "YulFunctionCall",
																"src": "2824:36:17"
															},
															"nativeSrc": "2824:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "2824:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2682:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2748:9:17",
														"nodeType": "YulTypedName",
														"src": "2748:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2759:6:17",
														"nodeType": "YulTypedName",
														"src": "2759:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2770:4:17",
														"nodeType": "YulTypedName",
														"src": "2770:4:17",
														"type": ""
													}
												],
												"src": "2682:184:17"
											},
											{
												"body": {
													"nativeSrc": "2941:156:17",
													"nodeType": "YulBlock",
													"src": "2941:156:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2987:16:17",
																"nodeType": "YulBlock",
																"src": "2987:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2996:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2996:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2999:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2989:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:17"
																			},
																			"nativeSrc": "2989:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2989:12:17"
																		},
																		"nativeSrc": "2989:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2989:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2962:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2962:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2971:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2971:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2958:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:17"
																		},
																		"nativeSrc": "2958:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2983:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2983:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2954:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:17"
																},
																"nativeSrc": "2954:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2954:32:17"
															},
															"nativeSrc": "2951:52:17",
															"nodeType": "YulIf",
															"src": "2951:52:17"
														},
														{
															"nativeSrc": "3012:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3012:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3025:1:17",
																"nodeType": "YulLiteral",
																"src": "3025:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3016:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3016:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3035:32:17",
															"nodeType": "YulAssignment",
															"src": "3035:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3057:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3057:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3044:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3044:12:17"
																},
																"nativeSrc": "3044:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3044:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3035:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3035:5:17"
																}
															]
														},
														{
															"nativeSrc": "3076:15:17",
															"nodeType": "YulAssignment",
															"src": "3076:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "3086:5:17",
																"nodeType": "YulIdentifier",
																"src": "3086:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3076:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2871:226:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2907:9:17",
														"nodeType": "YulTypedName",
														"src": "2907:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2918:7:17",
														"nodeType": "YulTypedName",
														"src": "2918:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2930:6:17",
														"nodeType": "YulTypedName",
														"src": "2930:6:17",
														"type": ""
													}
												],
												"src": "2871:226:17"
											},
											{
												"body": {
													"nativeSrc": "3172:116:17",
													"nodeType": "YulBlock",
													"src": "3172:116:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3218:16:17",
																"nodeType": "YulBlock",
																"src": "3218:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3227:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3227:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3230:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3220:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3220:6:17"
																			},
																			"nativeSrc": "3220:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3220:12:17"
																		},
																		"nativeSrc": "3220:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3220:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3193:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3193:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3202:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3189:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:17"
																		},
																		"nativeSrc": "3189:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3214:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3214:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3185:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:17"
																},
																"nativeSrc": "3185:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3185:32:17"
															},
															"nativeSrc": "3182:52:17",
															"nodeType": "YulIf",
															"src": "3182:52:17"
														},
														{
															"nativeSrc": "3243:39:17",
															"nodeType": "YulAssignment",
															"src": "3243:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3272:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3272:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3253:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3253:18:17"
																},
																"nativeSrc": "3253:29:17",
																"nodeType": "YulFunctionCall",
																"src": "3253:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3243:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3102:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3138:9:17",
														"nodeType": "YulTypedName",
														"src": "3138:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3149:7:17",
														"nodeType": "YulTypedName",
														"src": "3149:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3161:6:17",
														"nodeType": "YulTypedName",
														"src": "3161:6:17",
														"type": ""
													}
												],
												"src": "3102:186:17"
											},
											{
												"body": {
													"nativeSrc": "3394:102:17",
													"nodeType": "YulBlock",
													"src": "3394:102:17",
													"statements": [
														{
															"nativeSrc": "3404:26:17",
															"nodeType": "YulAssignment",
															"src": "3404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:17"
																},
																"nativeSrc": "3412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3446:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3461:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3461:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3477:3:17",
																								"nodeType": "YulLiteral",
																								"src": "3477:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3482:1:17",
																								"nodeType": "YulLiteral",
																								"src": "3482:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3473:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3473:3:17"
																						},
																						"nativeSrc": "3473:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3473:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3486:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3486:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3469:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3469:3:17"
																				},
																				"nativeSrc": "3469:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3469:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3457:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3457:3:17"
																		},
																		"nativeSrc": "3457:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3457:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3439:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:17"
																},
																"nativeSrc": "3439:51:17",
																"nodeType": "YulFunctionCall",
																"src": "3439:51:17"
															},
															"nativeSrc": "3439:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "3439:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3293:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3363:9:17",
														"nodeType": "YulTypedName",
														"src": "3363:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3374:6:17",
														"nodeType": "YulTypedName",
														"src": "3374:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3385:4:17",
														"nodeType": "YulTypedName",
														"src": "3385:4:17",
														"type": ""
													}
												],
												"src": "3293:203:17"
											},
											{
												"body": {
													"nativeSrc": "3600:93:17",
													"nodeType": "YulBlock",
													"src": "3600:93:17",
													"statements": [
														{
															"nativeSrc": "3610:26:17",
															"nodeType": "YulAssignment",
															"src": "3610:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3622:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3622:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3633:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3618:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:17"
																},
																"nativeSrc": "3618:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3618:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3610:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3610:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3652:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3652:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3667:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3667:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:10:17",
																				"nodeType": "YulLiteral",
																				"src": "3675:10:17",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3663:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3663:3:17"
																		},
																		"nativeSrc": "3663:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3663:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3645:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3645:6:17"
																},
																"nativeSrc": "3645:42:17",
																"nodeType": "YulFunctionCall",
																"src": "3645:42:17"
															},
															"nativeSrc": "3645:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "3645:42:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "3501:192:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3569:9:17",
														"nodeType": "YulTypedName",
														"src": "3569:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3580:6:17",
														"nodeType": "YulTypedName",
														"src": "3580:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3591:4:17",
														"nodeType": "YulTypedName",
														"src": "3591:4:17",
														"type": ""
													}
												],
												"src": "3501:192:17"
											},
											{
												"body": {
													"nativeSrc": "3785:173:17",
													"nodeType": "YulBlock",
													"src": "3785:173:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3831:16:17",
																"nodeType": "YulBlock",
																"src": "3831:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3840:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3843:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3833:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:17"
																			},
																			"nativeSrc": "3833:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:17"
																		},
																		"nativeSrc": "3833:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3806:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3806:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3815:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3815:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3802:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:17"
																		},
																		"nativeSrc": "3802:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3802:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3827:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3798:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3798:3:17"
																},
																"nativeSrc": "3798:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3798:32:17"
															},
															"nativeSrc": "3795:52:17",
															"nodeType": "YulIf",
															"src": "3795:52:17"
														},
														{
															"nativeSrc": "3856:39:17",
															"nodeType": "YulAssignment",
															"src": "3856:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3885:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3885:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3866:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3866:18:17"
																},
																"nativeSrc": "3866:29:17",
																"nodeType": "YulFunctionCall",
																"src": "3866:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3856:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:17"
																}
															]
														},
														{
															"nativeSrc": "3904:48:17",
															"nodeType": "YulAssignment",
															"src": "3904:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3937:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3948:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3948:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3933:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:17"
																		},
																		"nativeSrc": "3933:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3914:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3914:18:17"
																},
																"nativeSrc": "3914:38:17",
																"nodeType": "YulFunctionCall",
																"src": "3914:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3904:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3904:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3698:260:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3743:9:17",
														"nodeType": "YulTypedName",
														"src": "3743:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3754:7:17",
														"nodeType": "YulTypedName",
														"src": "3754:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3766:6:17",
														"nodeType": "YulTypedName",
														"src": "3766:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3774:6:17",
														"nodeType": "YulTypedName",
														"src": "3774:6:17",
														"type": ""
													}
												],
												"src": "3698:260:17"
											},
											{
												"body": {
													"nativeSrc": "4032:207:17",
													"nodeType": "YulBlock",
													"src": "4032:207:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4078:16:17",
																"nodeType": "YulBlock",
																"src": "4078:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4087:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4087:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4090:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4080:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4080:6:17"
																			},
																			"nativeSrc": "4080:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4080:12:17"
																		},
																		"nativeSrc": "4080:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4080:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4053:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4053:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4062:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4062:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4049:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:17"
																		},
																		"nativeSrc": "4049:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4074:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4045:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4045:3:17"
																},
																"nativeSrc": "4045:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4045:32:17"
															},
															"nativeSrc": "4042:52:17",
															"nodeType": "YulIf",
															"src": "4042:52:17"
														},
														{
															"nativeSrc": "4103:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4103:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4129:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4129:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4116:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4116:12:17"
																},
																"nativeSrc": "4116:23:17",
																"nodeType": "YulFunctionCall",
																"src": "4116:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4107:5:17",
																	"nodeType": "YulTypedName",
																	"src": "4107:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4193:16:17",
																"nodeType": "YulBlock",
																"src": "4193:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4202:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4202:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4205:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4205:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4195:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4195:6:17"
																			},
																			"nativeSrc": "4195:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4195:12:17"
																		},
																		"nativeSrc": "4195:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4195:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4161:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4161:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4172:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4172:5:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4179:10:17",
																						"nodeType": "YulLiteral",
																						"src": "4179:10:17",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4168:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4168:3:17"
																				},
																				"nativeSrc": "4168:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4168:22:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4158:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4158:2:17"
																		},
																		"nativeSrc": "4158:33:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:33:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4151:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:17"
																},
																"nativeSrc": "4151:41:17",
																"nodeType": "YulFunctionCall",
																"src": "4151:41:17"
															},
															"nativeSrc": "4148:61:17",
															"nodeType": "YulIf",
															"src": "4148:61:17"
														},
														{
															"nativeSrc": "4218:15:17",
															"nodeType": "YulAssignment",
															"src": "4218:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "4228:5:17",
																"nodeType": "YulIdentifier",
																"src": "4228:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4218:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4218:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "3963:276:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3998:9:17",
														"nodeType": "YulTypedName",
														"src": "3998:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4009:7:17",
														"nodeType": "YulTypedName",
														"src": "4009:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4021:6:17",
														"nodeType": "YulTypedName",
														"src": "4021:6:17",
														"type": ""
													}
												],
												"src": "3963:276:17"
											},
											{
												"body": {
													"nativeSrc": "4299:325:17",
													"nodeType": "YulBlock",
													"src": "4299:325:17",
													"statements": [
														{
															"nativeSrc": "4309:22:17",
															"nodeType": "YulAssignment",
															"src": "4309:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4323:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4326:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4326:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4319:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4319:3:17"
																},
																"nativeSrc": "4319:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4319:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4309:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:17"
																}
															]
														},
														{
															"nativeSrc": "4340:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4340:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4370:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4370:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4376:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4366:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:17"
																},
																"nativeSrc": "4366:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4366:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4344:18:17",
																	"nodeType": "YulTypedName",
																	"src": "4344:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4417:31:17",
																"nodeType": "YulBlock",
																"src": "4417:31:17",
																"statements": [
																	{
																		"nativeSrc": "4419:27:17",
																		"nodeType": "YulAssignment",
																		"src": "4419:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4433:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:4:17",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4429:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4429:3:17"
																			},
																			"nativeSrc": "4429:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4419:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4397:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4397:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4390:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:17"
																},
																"nativeSrc": "4390:26:17",
																"nodeType": "YulFunctionCall",
																"src": "4390:26:17"
															},
															"nativeSrc": "4387:61:17",
															"nodeType": "YulIf",
															"src": "4387:61:17"
														},
														{
															"body": {
																"nativeSrc": "4507:111:17",
																"nodeType": "YulBlock",
																"src": "4507:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4528:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4528:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4535:3:17",
																							"nodeType": "YulLiteral",
																							"src": "4535:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4540:10:17",
																							"nodeType": "YulLiteral",
																							"src": "4540:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4531:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "4531:3:17"
																					},
																					"nativeSrc": "4531:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4531:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4521:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4521:6:17"
																			},
																			"nativeSrc": "4521:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4521:31:17"
																		},
																		"nativeSrc": "4521:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4521:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4572:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4572:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4575:4:17",
																					"nodeType": "YulLiteral",
																					"src": "4575:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4565:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4565:6:17"
																			},
																			"nativeSrc": "4565:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4565:15:17"
																		},
																		"nativeSrc": "4565:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4565:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4600:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4600:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4603:4:17",
																					"nodeType": "YulLiteral",
																					"src": "4603:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4593:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4593:6:17"
																			},
																			"nativeSrc": "4593:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4593:15:17"
																		},
																		"nativeSrc": "4593:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4593:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4463:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4463:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4486:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4486:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4494:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4494:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4483:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4483:2:17"
																		},
																		"nativeSrc": "4483:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4460:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4460:2:17"
																},
																"nativeSrc": "4460:38:17",
																"nodeType": "YulFunctionCall",
																"src": "4460:38:17"
															},
															"nativeSrc": "4457:161:17",
															"nodeType": "YulIf",
															"src": "4457:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4244:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4279:4:17",
														"nodeType": "YulTypedName",
														"src": "4279:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4288:6:17",
														"nodeType": "YulTypedName",
														"src": "4288:6:17",
														"type": ""
													}
												],
												"src": "4244:380:17"
											},
											{
												"body": {
													"nativeSrc": "4803:237:17",
													"nodeType": "YulBlock",
													"src": "4803:237:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4820:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4831:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4813:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:17"
																},
																"nativeSrc": "4813:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4813:21:17"
															},
															"nativeSrc": "4813:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4813:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4854:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4865:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4865:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:17"
																		},
																		"nativeSrc": "4850:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4870:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4870:2:17",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:17"
																},
																"nativeSrc": "4843:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4843:30:17"
															},
															"nativeSrc": "4843:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4843:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4893:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4904:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4904:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4889:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:17"
																		},
																		"nativeSrc": "4889:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4889:18:17"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "4909:34:17",
																		"nodeType": "YulLiteral",
																		"src": "4909:34:17",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4882:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:17"
																},
																"nativeSrc": "4882:62:17",
																"nodeType": "YulFunctionCall",
																"src": "4882:62:17"
															},
															"nativeSrc": "4882:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "4882:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4964:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4964:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4975:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4975:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4960:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:17"
																		},
																		"nativeSrc": "4960:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:18:17"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "4980:17:17",
																		"nodeType": "YulLiteral",
																		"src": "4980:17:17",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4953:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:17"
																},
																"nativeSrc": "4953:45:17",
																"nodeType": "YulFunctionCall",
																"src": "4953:45:17"
															},
															"nativeSrc": "4953:45:17",
															"nodeType": "YulExpressionStatement",
															"src": "4953:45:17"
														},
														{
															"nativeSrc": "5007:27:17",
															"nodeType": "YulAssignment",
															"src": "5007:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5019:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5030:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5015:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:17"
																},
																"nativeSrc": "5015:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5015:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5007:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5007:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4629:411:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4780:9:17",
														"nodeType": "YulTypedName",
														"src": "4780:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4794:4:17",
														"nodeType": "YulTypedName",
														"src": "4794:4:17",
														"type": ""
													}
												],
												"src": "4629:411:17"
											},
											{
												"body": {
													"nativeSrc": "5077:95:17",
													"nodeType": "YulBlock",
													"src": "5077:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5094:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5101:3:17",
																				"nodeType": "YulLiteral",
																				"src": "5101:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5106:10:17",
																				"nodeType": "YulLiteral",
																				"src": "5106:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5097:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5097:3:17"
																		},
																		"nativeSrc": "5097:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5087:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:17"
																},
																"nativeSrc": "5087:31:17",
																"nodeType": "YulFunctionCall",
																"src": "5087:31:17"
															},
															"nativeSrc": "5087:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "5087:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5134:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5134:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5137:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5137:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5127:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:17"
																},
																"nativeSrc": "5127:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5127:15:17"
															},
															"nativeSrc": "5127:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5127:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5158:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5151:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:17"
																},
																"nativeSrc": "5151:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5151:15:17"
															},
															"nativeSrc": "5151:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5151:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5045:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5045:127:17"
											},
											{
												"body": {
													"nativeSrc": "5225:77:17",
													"nodeType": "YulBlock",
													"src": "5225:77:17",
													"statements": [
														{
															"nativeSrc": "5235:16:17",
															"nodeType": "YulAssignment",
															"src": "5235:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5246:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5246:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5249:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5249:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5242:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5242:3:17"
																},
																"nativeSrc": "5242:9:17",
																"nodeType": "YulFunctionCall",
																"src": "5242:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5235:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5274:22:17",
																"nodeType": "YulBlock",
																"src": "5274:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5276:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "5276:16:17"
																			},
																			"nativeSrc": "5276:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5276:18:17"
																		},
																		"nativeSrc": "5276:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5266:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5266:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5269:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5269:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5263:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5263:2:17"
																},
																"nativeSrc": "5263:10:17",
																"nodeType": "YulFunctionCall",
																"src": "5263:10:17"
															},
															"nativeSrc": "5260:36:17",
															"nodeType": "YulIf",
															"src": "5260:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5177:125:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5208:1:17",
														"nodeType": "YulTypedName",
														"src": "5208:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5211:1:17",
														"nodeType": "YulTypedName",
														"src": "5211:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5217:3:17",
														"nodeType": "YulTypedName",
														"src": "5217:3:17",
														"type": ""
													}
												],
												"src": "5177:125:17"
											},
											{
												"body": {
													"nativeSrc": "5481:236:17",
													"nodeType": "YulBlock",
													"src": "5481:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5498:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5498:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5509:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:17"
																},
																"nativeSrc": "5491:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5491:21:17"
															},
															"nativeSrc": "5491:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "5491:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5532:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5543:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5543:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5528:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:17"
																		},
																		"nativeSrc": "5528:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5521:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:17"
																},
																"nativeSrc": "5521:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5521:30:17"
															},
															"nativeSrc": "5521:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "5521:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5571:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5571:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5582:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5582:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5567:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5567:3:17"
																		},
																		"nativeSrc": "5567:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5567:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "5587:34:17",
																		"nodeType": "YulLiteral",
																		"src": "5587:34:17",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5560:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:17"
																},
																"nativeSrc": "5560:62:17",
																"nodeType": "YulFunctionCall",
																"src": "5560:62:17"
															},
															"nativeSrc": "5560:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "5560:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5642:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5642:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5653:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5653:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5638:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5638:3:17"
																		},
																		"nativeSrc": "5638:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5638:18:17"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5658:16:17",
																		"nodeType": "YulLiteral",
																		"src": "5658:16:17",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5631:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5631:6:17"
																},
																"nativeSrc": "5631:44:17",
																"nodeType": "YulFunctionCall",
																"src": "5631:44:17"
															},
															"nativeSrc": "5631:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "5631:44:17"
														},
														{
															"nativeSrc": "5684:27:17",
															"nodeType": "YulAssignment",
															"src": "5684:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5696:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5696:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5707:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5707:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5692:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:17"
																},
																"nativeSrc": "5692:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5692:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5684:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5684:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5307:410:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5458:9:17",
														"nodeType": "YulTypedName",
														"src": "5458:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5472:4:17",
														"nodeType": "YulTypedName",
														"src": "5472:4:17",
														"type": ""
													}
												],
												"src": "5307:410:17"
											},
											{
												"body": {
													"nativeSrc": "5829:87:17",
													"nodeType": "YulBlock",
													"src": "5829:87:17",
													"statements": [
														{
															"nativeSrc": "5839:26:17",
															"nodeType": "YulAssignment",
															"src": "5839:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5851:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5851:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5862:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5862:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5847:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5847:3:17"
																},
																"nativeSrc": "5847:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5847:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5839:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5839:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5881:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5881:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5896:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5896:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5904:4:17",
																				"nodeType": "YulLiteral",
																				"src": "5904:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5892:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:17"
																		},
																		"nativeSrc": "5892:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5892:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5874:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:17"
																},
																"nativeSrc": "5874:36:17",
																"nodeType": "YulFunctionCall",
																"src": "5874:36:17"
															},
															"nativeSrc": "5874:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "5874:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5722:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5798:9:17",
														"nodeType": "YulTypedName",
														"src": "5798:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5809:6:17",
														"nodeType": "YulTypedName",
														"src": "5809:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5820:4:17",
														"nodeType": "YulTypedName",
														"src": "5820:4:17",
														"type": ""
													}
												],
												"src": "5722:194:17"
											},
											{
												"body": {
													"nativeSrc": "6095:227:17",
													"nodeType": "YulBlock",
													"src": "6095:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6112:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6112:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6123:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6123:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6105:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6105:6:17"
																},
																"nativeSrc": "6105:21:17",
																"nodeType": "YulFunctionCall",
																"src": "6105:21:17"
															},
															"nativeSrc": "6105:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "6105:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6146:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6157:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6157:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6142:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:17"
																		},
																		"nativeSrc": "6142:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6142:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6162:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6162:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6135:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6135:6:17"
																},
																"nativeSrc": "6135:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6135:30:17"
															},
															"nativeSrc": "6135:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6135:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6185:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6185:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6196:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6196:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6181:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6181:3:17"
																		},
																		"nativeSrc": "6181:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6181:18:17"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "6201:34:17",
																		"nodeType": "YulLiteral",
																		"src": "6201:34:17",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:17"
																},
																"nativeSrc": "6174:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6174:62:17"
															},
															"nativeSrc": "6174:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "6174:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6256:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6256:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6267:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6267:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:17"
																		},
																		"nativeSrc": "6252:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:18:17"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "6272:7:17",
																		"nodeType": "YulLiteral",
																		"src": "6272:7:17",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6245:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:17"
																},
																"nativeSrc": "6245:35:17",
																"nodeType": "YulFunctionCall",
																"src": "6245:35:17"
															},
															"nativeSrc": "6245:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "6245:35:17"
														},
														{
															"nativeSrc": "6289:27:17",
															"nodeType": "YulAssignment",
															"src": "6289:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6301:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6301:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6312:3:17",
																		"nodeType": "YulLiteral",
																		"src": "6312:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6297:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6297:3:17"
																},
																"nativeSrc": "6297:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6297:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6289:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6289:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5921:401:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6072:9:17",
														"nodeType": "YulTypedName",
														"src": "6072:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6086:4:17",
														"nodeType": "YulTypedName",
														"src": "6086:4:17",
														"type": ""
													}
												],
												"src": "5921:401:17"
											},
											{
												"body": {
													"nativeSrc": "6501:228:17",
													"nodeType": "YulBlock",
													"src": "6501:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6518:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6518:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6529:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6529:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6511:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:17"
																},
																"nativeSrc": "6511:21:17",
																"nodeType": "YulFunctionCall",
																"src": "6511:21:17"
															},
															"nativeSrc": "6511:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "6511:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6552:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6552:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6563:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6563:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6548:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6548:3:17"
																		},
																		"nativeSrc": "6548:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6568:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6541:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6541:6:17"
																},
																"nativeSrc": "6541:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6541:30:17"
															},
															"nativeSrc": "6541:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6541:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6591:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6591:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6602:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6602:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6587:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:17"
																		},
																		"nativeSrc": "6587:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6587:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "6607:34:17",
																		"nodeType": "YulLiteral",
																		"src": "6607:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6580:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:17"
																},
																"nativeSrc": "6580:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6580:62:17"
															},
															"nativeSrc": "6580:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "6580:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6662:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6662:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6673:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6673:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6658:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6658:3:17"
																		},
																		"nativeSrc": "6658:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6658:18:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "6678:8:17",
																		"nodeType": "YulLiteral",
																		"src": "6678:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6651:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6651:6:17"
																},
																"nativeSrc": "6651:36:17",
																"nodeType": "YulFunctionCall",
																"src": "6651:36:17"
															},
															"nativeSrc": "6651:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "6651:36:17"
														},
														{
															"nativeSrc": "6696:27:17",
															"nodeType": "YulAssignment",
															"src": "6696:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:3:17",
																		"nodeType": "YulLiteral",
																		"src": "6719:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:17"
																},
																"nativeSrc": "6704:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6704:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6327:402:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6478:9:17",
														"nodeType": "YulTypedName",
														"src": "6478:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6492:4:17",
														"nodeType": "YulTypedName",
														"src": "6492:4:17",
														"type": ""
													}
												],
												"src": "6327:402:17"
											},
											{
												"body": {
													"nativeSrc": "6908:226:17",
													"nodeType": "YulBlock",
													"src": "6908:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6925:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6925:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6936:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6936:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6918:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:17"
																},
																"nativeSrc": "6918:21:17",
																"nodeType": "YulFunctionCall",
																"src": "6918:21:17"
															},
															"nativeSrc": "6918:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "6918:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6959:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6959:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6970:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6970:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6955:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:17"
																		},
																		"nativeSrc": "6955:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6975:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6948:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:17"
																},
																"nativeSrc": "6948:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6948:30:17"
															},
															"nativeSrc": "6948:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6948:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6998:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7009:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7009:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6994:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:17"
																		},
																		"nativeSrc": "6994:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6994:18:17"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7014:34:17",
																		"nodeType": "YulLiteral",
																		"src": "7014:34:17",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6987:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:17"
																},
																"nativeSrc": "6987:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6987:62:17"
															},
															"nativeSrc": "6987:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "6987:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7069:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7069:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7080:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7080:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7065:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7065:3:17"
																		},
																		"nativeSrc": "7065:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7065:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7085:6:17",
																		"nodeType": "YulLiteral",
																		"src": "7085:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7058:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7058:6:17"
																},
																"nativeSrc": "7058:34:17",
																"nodeType": "YulFunctionCall",
																"src": "7058:34:17"
															},
															"nativeSrc": "7058:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "7058:34:17"
														},
														{
															"nativeSrc": "7101:27:17",
															"nodeType": "YulAssignment",
															"src": "7101:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7113:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7113:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:3:17",
																		"nodeType": "YulLiteral",
																		"src": "7124:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7109:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7109:3:17"
																},
																"nativeSrc": "7109:19:17",
																"nodeType": "YulFunctionCall",
																"src": "7109:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7101:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7101:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6734:400:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6885:9:17",
														"nodeType": "YulTypedName",
														"src": "6885:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6899:4:17",
														"nodeType": "YulTypedName",
														"src": "6899:4:17",
														"type": ""
													}
												],
												"src": "6734:400:17"
											},
											{
												"body": {
													"nativeSrc": "7313:224:17",
													"nodeType": "YulBlock",
													"src": "7313:224:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7330:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7330:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7341:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7341:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7323:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:17"
																},
																"nativeSrc": "7323:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7323:21:17"
															},
															"nativeSrc": "7323:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7323:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7364:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7364:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7375:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7375:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7360:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7360:3:17"
																		},
																		"nativeSrc": "7360:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7360:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7380:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7380:2:17",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7353:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:17"
																},
																"nativeSrc": "7353:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7353:30:17"
															},
															"nativeSrc": "7353:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "7353:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7403:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7403:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7414:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7414:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7399:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7399:3:17"
																		},
																		"nativeSrc": "7399:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7399:18:17"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "7419:34:17",
																		"nodeType": "YulLiteral",
																		"src": "7419:34:17",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7392:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:17"
																},
																"nativeSrc": "7392:62:17",
																"nodeType": "YulFunctionCall",
																"src": "7392:62:17"
															},
															"nativeSrc": "7392:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "7392:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7485:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7485:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7470:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7470:3:17"
																		},
																		"nativeSrc": "7470:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7470:18:17"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "7490:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7490:4:17",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7463:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:17"
																},
																"nativeSrc": "7463:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7463:32:17"
															},
															"nativeSrc": "7463:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "7463:32:17"
														},
														{
															"nativeSrc": "7504:27:17",
															"nodeType": "YulAssignment",
															"src": "7504:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7516:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7516:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7527:3:17",
																		"nodeType": "YulLiteral",
																		"src": "7527:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7512:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:17"
																},
																"nativeSrc": "7512:19:17",
																"nodeType": "YulFunctionCall",
																"src": "7512:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7504:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7504:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7139:398:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7290:9:17",
														"nodeType": "YulTypedName",
														"src": "7290:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7304:4:17",
														"nodeType": "YulTypedName",
														"src": "7304:4:17",
														"type": ""
													}
												],
												"src": "7139:398:17"
											},
											{
												"body": {
													"nativeSrc": "7716:181:17",
													"nodeType": "YulBlock",
													"src": "7716:181:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7733:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:17"
																},
																"nativeSrc": "7726:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7726:21:17"
															},
															"nativeSrc": "7726:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7726:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7767:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7778:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7778:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7763:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7763:3:17"
																		},
																		"nativeSrc": "7763:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7763:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7783:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7783:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7756:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:17"
																},
																"nativeSrc": "7756:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7756:30:17"
															},
															"nativeSrc": "7756:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "7756:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7806:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7806:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7817:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7817:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7802:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7802:3:17"
																		},
																		"nativeSrc": "7802:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7802:18:17"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7822:33:17",
																		"nodeType": "YulLiteral",
																		"src": "7822:33:17",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7795:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:17"
																},
																"nativeSrc": "7795:61:17",
																"nodeType": "YulFunctionCall",
																"src": "7795:61:17"
															},
															"nativeSrc": "7795:61:17",
															"nodeType": "YulExpressionStatement",
															"src": "7795:61:17"
														},
														{
															"nativeSrc": "7865:26:17",
															"nodeType": "YulAssignment",
															"src": "7865:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7877:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7877:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7888:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7888:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7873:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7873:3:17"
																},
																"nativeSrc": "7873:18:17",
																"nodeType": "YulFunctionCall",
																"src": "7873:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7865:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7865:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7542:355:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7693:9:17",
														"nodeType": "YulTypedName",
														"src": "7693:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7707:4:17",
														"nodeType": "YulTypedName",
														"src": "7707:4:17",
														"type": ""
													}
												],
												"src": "7542:355:17"
											},
											{
												"body": {
													"nativeSrc": "8076:223:17",
													"nodeType": "YulBlock",
													"src": "8076:223:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8093:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8093:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8104:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8104:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8086:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:17"
																},
																"nativeSrc": "8086:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8086:21:17"
															},
															"nativeSrc": "8086:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8086:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8127:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8127:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8138:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8138:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8123:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:17"
																		},
																		"nativeSrc": "8123:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8143:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8143:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8116:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:17"
																},
																"nativeSrc": "8116:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8116:30:17"
															},
															"nativeSrc": "8116:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8116:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8166:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8166:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8177:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8177:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8162:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:17"
																		},
																		"nativeSrc": "8162:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:18:17"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "8182:34:17",
																		"nodeType": "YulLiteral",
																		"src": "8182:34:17",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8155:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:17"
																},
																"nativeSrc": "8155:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8155:62:17"
															},
															"nativeSrc": "8155:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "8155:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8237:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8237:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8248:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8248:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8233:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8233:3:17"
																		},
																		"nativeSrc": "8233:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8233:18:17"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "8253:3:17",
																		"nodeType": "YulLiteral",
																		"src": "8253:3:17",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8226:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:17"
																},
																"nativeSrc": "8226:31:17",
																"nodeType": "YulFunctionCall",
																"src": "8226:31:17"
															},
															"nativeSrc": "8226:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "8226:31:17"
														},
														{
															"nativeSrc": "8266:27:17",
															"nodeType": "YulAssignment",
															"src": "8266:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8278:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8278:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:3:17",
																		"nodeType": "YulLiteral",
																		"src": "8289:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8274:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8274:3:17"
																},
																"nativeSrc": "8274:19:17",
																"nodeType": "YulFunctionCall",
																"src": "8274:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8266:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8266:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7902:397:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8053:9:17",
														"nodeType": "YulTypedName",
														"src": "8053:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8067:4:17",
														"nodeType": "YulTypedName",
														"src": "8067:4:17",
														"type": ""
													}
												],
												"src": "7902:397:17"
											},
											{
												"body": {
													"nativeSrc": "8478:224:17",
													"nodeType": "YulBlock",
													"src": "8478:224:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8495:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8495:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8506:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8506:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8488:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:17"
																},
																"nativeSrc": "8488:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8488:21:17"
															},
															"nativeSrc": "8488:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8529:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8540:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8540:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8525:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8525:3:17"
																		},
																		"nativeSrc": "8525:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8525:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8545:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8545:2:17",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8518:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:17"
																},
																"nativeSrc": "8518:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8518:30:17"
															},
															"nativeSrc": "8518:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8518:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8568:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8568:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8579:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8579:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8564:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:17"
																		},
																		"nativeSrc": "8564:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:18:17"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "8584:34:17",
																		"nodeType": "YulLiteral",
																		"src": "8584:34:17",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8557:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8557:6:17"
																},
																"nativeSrc": "8557:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8557:62:17"
															},
															"nativeSrc": "8557:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "8557:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8639:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8639:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8650:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8635:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:17"
																		},
																		"nativeSrc": "8635:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:18:17"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "8655:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8655:4:17",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8628:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:17"
																},
																"nativeSrc": "8628:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8628:32:17"
															},
															"nativeSrc": "8628:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "8628:32:17"
														},
														{
															"nativeSrc": "8669:27:17",
															"nodeType": "YulAssignment",
															"src": "8669:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8681:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8681:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:3:17",
																		"nodeType": "YulLiteral",
																		"src": "8692:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8677:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8677:3:17"
																},
																"nativeSrc": "8677:19:17",
																"nodeType": "YulFunctionCall",
																"src": "8677:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8669:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8669:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8304:398:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8455:9:17",
														"nodeType": "YulTypedName",
														"src": "8455:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8469:4:17",
														"nodeType": "YulTypedName",
														"src": "8469:4:17",
														"type": ""
													}
												],
												"src": "8304:398:17"
											},
											{
												"body": {
													"nativeSrc": "8881:182:17",
													"nodeType": "YulBlock",
													"src": "8881:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8898:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8898:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8909:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8909:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8891:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8891:6:17"
																},
																"nativeSrc": "8891:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8891:21:17"
															},
															"nativeSrc": "8891:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8891:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8932:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8932:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8943:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8943:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8928:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8928:3:17"
																		},
																		"nativeSrc": "8928:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8928:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8948:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8948:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8921:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:17"
																},
																"nativeSrc": "8921:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8921:30:17"
															},
															"nativeSrc": "8921:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8921:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8971:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8971:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8982:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8982:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8967:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8967:3:17"
																		},
																		"nativeSrc": "8967:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8967:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8987:34:17",
																		"nodeType": "YulLiteral",
																		"src": "8987:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8960:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8960:6:17"
																},
																"nativeSrc": "8960:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8960:62:17"
															},
															"nativeSrc": "8960:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "8960:62:17"
														},
														{
															"nativeSrc": "9031:26:17",
															"nodeType": "YulAssignment",
															"src": "9031:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9043:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9043:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9054:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9054:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9039:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9039:3:17"
																},
																"nativeSrc": "9039:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9039:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9031:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9031:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8707:356:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8858:9:17",
														"nodeType": "YulTypedName",
														"src": "8858:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8872:4:17",
														"nodeType": "YulTypedName",
														"src": "8872:4:17",
														"type": ""
													}
												],
												"src": "8707:356:17"
											},
											{
												"body": {
													"nativeSrc": "9242:179:17",
													"nodeType": "YulBlock",
													"src": "9242:179:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9259:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9259:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9270:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9270:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9252:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:17"
																},
																"nativeSrc": "9252:21:17",
																"nodeType": "YulFunctionCall",
																"src": "9252:21:17"
															},
															"nativeSrc": "9252:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "9252:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9293:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9293:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9304:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9304:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9289:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9289:3:17"
																		},
																		"nativeSrc": "9289:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9289:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9309:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9309:2:17",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9282:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:17"
																},
																"nativeSrc": "9282:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9282:30:17"
															},
															"nativeSrc": "9282:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9282:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9332:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9332:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9343:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9343:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9328:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9328:3:17"
																		},
																		"nativeSrc": "9328:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9328:18:17"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9348:31:17",
																		"nodeType": "YulLiteral",
																		"src": "9348:31:17",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9321:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9321:6:17"
																},
																"nativeSrc": "9321:59:17",
																"nodeType": "YulFunctionCall",
																"src": "9321:59:17"
															},
															"nativeSrc": "9321:59:17",
															"nodeType": "YulExpressionStatement",
															"src": "9321:59:17"
														},
														{
															"nativeSrc": "9389:26:17",
															"nodeType": "YulAssignment",
															"src": "9389:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9401:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9401:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9412:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9412:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9397:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9397:3:17"
																},
																"nativeSrc": "9397:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9397:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9389:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9389:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9068:353:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9219:9:17",
														"nodeType": "YulTypedName",
														"src": "9219:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9233:4:17",
														"nodeType": "YulTypedName",
														"src": "9233:4:17",
														"type": ""
													}
												],
												"src": "9068:353:17"
											},
											{
												"body": {
													"nativeSrc": "9600:233:17",
													"nodeType": "YulBlock",
													"src": "9600:233:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9617:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9617:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9628:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9628:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9610:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:17"
																},
																"nativeSrc": "9610:21:17",
																"nodeType": "YulFunctionCall",
																"src": "9610:21:17"
															},
															"nativeSrc": "9610:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "9610:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9651:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9651:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9662:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9662:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9647:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9647:3:17"
																		},
																		"nativeSrc": "9647:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9647:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9667:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9667:2:17",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9640:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9640:6:17"
																},
																"nativeSrc": "9640:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9640:30:17"
															},
															"nativeSrc": "9640:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9640:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9690:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9690:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9701:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9701:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9686:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9686:3:17"
																		},
																		"nativeSrc": "9686:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9686:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "9706:34:17",
																		"nodeType": "YulLiteral",
																		"src": "9706:34:17",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9679:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9679:6:17"
																},
																"nativeSrc": "9679:62:17",
																"nodeType": "YulFunctionCall",
																"src": "9679:62:17"
															},
															"nativeSrc": "9679:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "9679:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9761:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9761:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9772:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9772:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9757:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:17"
																		},
																		"nativeSrc": "9757:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:18:17"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "9777:13:17",
																		"nodeType": "YulLiteral",
																		"src": "9777:13:17",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9750:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9750:6:17"
																},
																"nativeSrc": "9750:41:17",
																"nodeType": "YulFunctionCall",
																"src": "9750:41:17"
															},
															"nativeSrc": "9750:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "9750:41:17"
														},
														{
															"nativeSrc": "9800:27:17",
															"nodeType": "YulAssignment",
															"src": "9800:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9812:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9812:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9823:3:17",
																		"nodeType": "YulLiteral",
																		"src": "9823:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9808:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:17"
																},
																"nativeSrc": "9808:19:17",
																"nodeType": "YulFunctionCall",
																"src": "9808:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9800:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9800:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9426:407:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9577:9:17",
														"nodeType": "YulTypedName",
														"src": "9577:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9591:4:17",
														"nodeType": "YulTypedName",
														"src": "9591:4:17",
														"type": ""
													}
												],
												"src": "9426:407:17"
											},
											{
												"body": {
													"nativeSrc": "10012:227:17",
													"nodeType": "YulBlock",
													"src": "10012:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10029:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10029:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10040:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10022:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:17"
																},
																"nativeSrc": "10022:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10022:21:17"
															},
															"nativeSrc": "10022:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10022:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10063:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10063:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10074:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10074:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10059:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10059:3:17"
																		},
																		"nativeSrc": "10059:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10059:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10079:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10079:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10052:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:17"
																},
																"nativeSrc": "10052:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10052:30:17"
															},
															"nativeSrc": "10052:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10052:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10102:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10102:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10113:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10113:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10098:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10098:3:17"
																		},
																		"nativeSrc": "10098:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10098:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "10118:34:17",
																		"nodeType": "YulLiteral",
																		"src": "10118:34:17",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10091:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10091:6:17"
																},
																"nativeSrc": "10091:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10091:62:17"
															},
															"nativeSrc": "10091:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "10091:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10173:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10173:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10184:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10184:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10169:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10169:3:17"
																		},
																		"nativeSrc": "10169:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:18:17"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "10189:7:17",
																		"nodeType": "YulLiteral",
																		"src": "10189:7:17",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10162:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10162:6:17"
																},
																"nativeSrc": "10162:35:17",
																"nodeType": "YulFunctionCall",
																"src": "10162:35:17"
															},
															"nativeSrc": "10162:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "10162:35:17"
														},
														{
															"nativeSrc": "10206:27:17",
															"nodeType": "YulAssignment",
															"src": "10206:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10218:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10218:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10229:3:17",
																		"nodeType": "YulLiteral",
																		"src": "10229:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10214:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10214:3:17"
																},
																"nativeSrc": "10214:19:17",
																"nodeType": "YulFunctionCall",
																"src": "10214:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10206:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10206:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9838:401:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9989:9:17",
														"nodeType": "YulTypedName",
														"src": "9989:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10003:4:17",
														"nodeType": "YulTypedName",
														"src": "10003:4:17",
														"type": ""
													}
												],
												"src": "9838:401:17"
											},
											{
												"body": {
													"nativeSrc": "10418:225:17",
													"nodeType": "YulBlock",
													"src": "10418:225:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10435:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10435:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10446:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10446:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10428:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:17"
																},
																"nativeSrc": "10428:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10428:21:17"
															},
															"nativeSrc": "10428:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10428:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10469:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10480:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10480:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10465:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10465:3:17"
																		},
																		"nativeSrc": "10465:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10465:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10485:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10485:2:17",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10458:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10458:6:17"
																},
																"nativeSrc": "10458:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10458:30:17"
															},
															"nativeSrc": "10458:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10458:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10508:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10508:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10519:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10519:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10504:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10504:3:17"
																		},
																		"nativeSrc": "10504:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10504:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "10524:34:17",
																		"nodeType": "YulLiteral",
																		"src": "10524:34:17",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10497:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10497:6:17"
																},
																"nativeSrc": "10497:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10497:62:17"
															},
															"nativeSrc": "10497:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "10497:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10579:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10590:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10590:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10575:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:17"
																		},
																		"nativeSrc": "10575:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:18:17"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "10595:5:17",
																		"nodeType": "YulLiteral",
																		"src": "10595:5:17",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10568:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:17"
																},
																"nativeSrc": "10568:33:17",
																"nodeType": "YulFunctionCall",
																"src": "10568:33:17"
															},
															"nativeSrc": "10568:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "10568:33:17"
														},
														{
															"nativeSrc": "10610:27:17",
															"nodeType": "YulAssignment",
															"src": "10610:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10622:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:3:17",
																		"nodeType": "YulLiteral",
																		"src": "10633:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10618:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:17"
																},
																"nativeSrc": "10618:19:17",
																"nodeType": "YulFunctionCall",
																"src": "10618:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10610:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10610:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10244:399:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10395:9:17",
														"nodeType": "YulTypedName",
														"src": "10395:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10409:4:17",
														"nodeType": "YulTypedName",
														"src": "10409:4:17",
														"type": ""
													}
												],
												"src": "10244:399:17"
											},
											{
												"body": {
													"nativeSrc": "10822:228:17",
													"nodeType": "YulBlock",
													"src": "10822:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10839:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10839:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10850:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10832:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:17"
																},
																"nativeSrc": "10832:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10832:21:17"
															},
															"nativeSrc": "10832:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10832:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10873:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10873:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10884:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10884:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10869:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10869:3:17"
																		},
																		"nativeSrc": "10869:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10869:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10889:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10889:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10862:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10862:6:17"
																},
																"nativeSrc": "10862:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10862:30:17"
															},
															"nativeSrc": "10862:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10862:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10912:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10912:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10923:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10923:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10908:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10908:3:17"
																		},
																		"nativeSrc": "10908:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10908:18:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "10928:34:17",
																		"nodeType": "YulLiteral",
																		"src": "10928:34:17",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10901:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:17"
																},
																"nativeSrc": "10901:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10901:62:17"
															},
															"nativeSrc": "10901:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "10901:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10983:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10983:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10994:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10994:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10979:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:17"
																		},
																		"nativeSrc": "10979:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:18:17"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10999:8:17",
																		"nodeType": "YulLiteral",
																		"src": "10999:8:17",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10972:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10972:6:17"
																},
																"nativeSrc": "10972:36:17",
																"nodeType": "YulFunctionCall",
																"src": "10972:36:17"
															},
															"nativeSrc": "10972:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "10972:36:17"
														},
														{
															"nativeSrc": "11017:27:17",
															"nodeType": "YulAssignment",
															"src": "11017:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11029:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11029:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11040:3:17",
																		"nodeType": "YulLiteral",
																		"src": "11040:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11025:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11025:3:17"
																},
																"nativeSrc": "11025:19:17",
																"nodeType": "YulFunctionCall",
																"src": "11025:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11017:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11017:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10648:402:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10799:9:17",
														"nodeType": "YulTypedName",
														"src": "10799:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10813:4:17",
														"nodeType": "YulTypedName",
														"src": "10813:4:17",
														"type": ""
													}
												],
												"src": "10648:402:17"
											},
											{
												"body": {
													"nativeSrc": "11105:162:17",
													"nodeType": "YulBlock",
													"src": "11105:162:17",
													"statements": [
														{
															"nativeSrc": "11115:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11115:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11135:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11135:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11129:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11129:5:17"
																},
																"nativeSrc": "11129:12:17",
																"nodeType": "YulFunctionCall",
																"src": "11129:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11119:6:17",
																	"nodeType": "YulTypedName",
																	"src": "11119:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11156:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11156:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11165:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "11165:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11172:4:17",
																				"nodeType": "YulLiteral",
																				"src": "11172:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11161:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11161:3:17"
																		},
																		"nativeSrc": "11161:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11161:16:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11179:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11179:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11150:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11150:5:17"
																},
																"nativeSrc": "11150:36:17",
																"nodeType": "YulFunctionCall",
																"src": "11150:36:17"
															},
															"nativeSrc": "11150:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "11150:36:17"
														},
														{
															"nativeSrc": "11195:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11195:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11209:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11209:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11214:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11214:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11205:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11205:3:17"
																},
																"nativeSrc": "11205:16:17",
																"nodeType": "YulFunctionCall",
																"src": "11205:16:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11199:2:17",
																	"nodeType": "YulTypedName",
																	"src": "11199:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11237:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "11237:2:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11241:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11241:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11230:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11230:6:17"
																},
																"nativeSrc": "11230:13:17",
																"nodeType": "YulFunctionCall",
																"src": "11230:13:17"
															},
															"nativeSrc": "11230:13:17",
															"nodeType": "YulExpressionStatement",
															"src": "11230:13:17"
														},
														{
															"nativeSrc": "11252:9:17",
															"nodeType": "YulAssignment",
															"src": "11252:9:17",
															"value": {
																"name": "_1",
																"nativeSrc": "11259:2:17",
																"nodeType": "YulIdentifier",
																"src": "11259:2:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11252:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11252:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "11055:212:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11082:5:17",
														"nodeType": "YulTypedName",
														"src": "11082:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11089:3:17",
														"nodeType": "YulTypedName",
														"src": "11089:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11097:3:17",
														"nodeType": "YulTypedName",
														"src": "11097:3:17",
														"type": ""
													}
												],
												"src": "11055:212:17"
											},
											{
												"body": {
													"nativeSrc": "11661:206:17",
													"nodeType": "YulBlock",
													"src": "11661:206:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11678:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11678:3:17"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "11683:25:17",
																		"nodeType": "YulLiteral",
																		"src": "11683:25:17",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11671:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11671:6:17"
																},
																"nativeSrc": "11671:38:17",
																"nodeType": "YulFunctionCall",
																"src": "11671:38:17"
															},
															"nativeSrc": "11671:38:17",
															"nodeType": "YulExpressionStatement",
															"src": "11671:38:17"
														},
														{
															"nativeSrc": "11718:49:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11718:49:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11746:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11746:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11758:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11758:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11763:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11763:2:17",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11754:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11754:3:17"
																		},
																		"nativeSrc": "11754:12:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11754:12:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11728:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "11728:17:17"
																},
																"nativeSrc": "11728:39:17",
																"nodeType": "YulFunctionCall",
																"src": "11728:39:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11722:2:17",
																	"nodeType": "YulTypedName",
																	"src": "11722:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11783:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "11783:2:17"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "11787:19:17",
																		"nodeType": "YulLiteral",
																		"src": "11787:19:17",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:17"
																},
																"nativeSrc": "11776:31:17",
																"nodeType": "YulFunctionCall",
																"src": "11776:31:17"
															},
															"nativeSrc": "11776:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "11776:31:17"
														},
														{
															"nativeSrc": "11816:45:17",
															"nodeType": "YulAssignment",
															"src": "11816:45:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11841:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11841:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "11853:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11853:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11857:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11857:2:17",
																				"type": "",
																				"value": "17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11849:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11849:3:17"
																		},
																		"nativeSrc": "11849:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11849:11:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11823:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "11823:17:17"
																},
																"nativeSrc": "11823:38:17",
																"nodeType": "YulFunctionCall",
																"src": "11823:38:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11816:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11816:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11272:595:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11629:3:17",
														"nodeType": "YulTypedName",
														"src": "11629:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11634:6:17",
														"nodeType": "YulTypedName",
														"src": "11634:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11642:6:17",
														"nodeType": "YulTypedName",
														"src": "11642:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11653:3:17",
														"nodeType": "YulTypedName",
														"src": "11653:3:17",
														"type": ""
													}
												],
												"src": "11272:595:17"
											},
											{
												"body": {
													"nativeSrc": "11904:95:17",
													"nodeType": "YulBlock",
													"src": "11904:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11921:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11921:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11928:3:17",
																				"nodeType": "YulLiteral",
																				"src": "11928:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11933:10:17",
																				"nodeType": "YulLiteral",
																				"src": "11933:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11924:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:17"
																		},
																		"nativeSrc": "11924:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11924:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11914:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11914:6:17"
																},
																"nativeSrc": "11914:31:17",
																"nodeType": "YulFunctionCall",
																"src": "11914:31:17"
															},
															"nativeSrc": "11914:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "11914:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11961:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11961:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11964:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11964:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11954:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11954:6:17"
																},
																"nativeSrc": "11954:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11954:15:17"
															},
															"nativeSrc": "11954:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11954:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11985:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11985:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11988:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11988:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11978:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11978:6:17"
																},
																"nativeSrc": "11978:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11978:15:17"
															},
															"nativeSrc": "11978:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11978:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11872:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "11872:127:17"
											},
											{
												"body": {
													"nativeSrc": "12060:65:17",
													"nodeType": "YulBlock",
													"src": "12060:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12077:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12077:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "12080:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12080:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12070:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12070:6:17"
																},
																"nativeSrc": "12070:14:17",
																"nodeType": "YulFunctionCall",
																"src": "12070:14:17"
															},
															"nativeSrc": "12070:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "12070:14:17"
														},
														{
															"nativeSrc": "12093:26:17",
															"nodeType": "YulAssignment",
															"src": "12093:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12111:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12111:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12114:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12114:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "12101:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "12101:9:17"
																},
																"nativeSrc": "12101:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12101:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12093:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12093:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "12004:121:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12043:3:17",
														"nodeType": "YulTypedName",
														"src": "12043:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12051:4:17",
														"nodeType": "YulTypedName",
														"src": "12051:4:17",
														"type": ""
													}
												],
												"src": "12004:121:17"
											},
											{
												"body": {
													"nativeSrc": "12211:437:17",
													"nodeType": "YulBlock",
													"src": "12211:437:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12244:398:17",
																"nodeType": "YulBlock",
																"src": "12244:398:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12265:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12265:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "12268:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "12268:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12258:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12258:6:17"
																			},
																			"nativeSrc": "12258:16:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12258:16:17"
																		},
																		"nativeSrc": "12258:16:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12258:16:17"
																	},
																	{
																		"nativeSrc": "12287:30:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12287:30:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12309:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12309:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12312:4:17",
																					"nodeType": "YulLiteral",
																					"src": "12312:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "12299:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12299:9:17"
																			},
																			"nativeSrc": "12299:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12299:18:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "12291:4:17",
																				"nodeType": "YulTypedName",
																				"src": "12291:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12330:57:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12330:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12353:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "12353:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12363:1:17",
																							"nodeType": "YulLiteral",
																							"src": "12363:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "12370:10:17",
																									"nodeType": "YulIdentifier",
																									"src": "12370:10:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12382:2:17",
																									"nodeType": "YulLiteral",
																									"src": "12382:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12366:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "12366:3:17"
																							},
																							"nativeSrc": "12366:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "12366:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12359:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "12359:3:17"
																					},
																					"nativeSrc": "12359:27:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12359:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12349:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12349:3:17"
																			},
																			"nativeSrc": "12349:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12349:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12334:11:17",
																				"nodeType": "YulTypedName",
																				"src": "12334:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12424:23:17",
																			"nodeType": "YulBlock",
																			"src": "12424:23:17",
																			"statements": [
																				{
																					"nativeSrc": "12426:19:17",
																					"nodeType": "YulAssignment",
																					"src": "12426:19:17",
																					"value": {
																						"name": "data",
																						"nativeSrc": "12441:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "12441:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12426:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "12426:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12406:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "12406:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12418:4:17",
																					"nodeType": "YulLiteral",
																					"src": "12418:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12403:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "12403:2:17"
																			},
																			"nativeSrc": "12403:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12403:20:17"
																		},
																		"nativeSrc": "12400:47:17",
																		"nodeType": "YulIf",
																		"src": "12400:47:17"
																	},
																	{
																		"nativeSrc": "12460:41:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12460:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12474:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "12474:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12484:1:17",
																							"nodeType": "YulLiteral",
																							"src": "12484:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12491:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12491:3:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12496:2:17",
																									"nodeType": "YulLiteral",
																									"src": "12496:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12487:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "12487:3:17"
																							},
																							"nativeSrc": "12487:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "12487:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12480:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "12480:3:17"
																					},
																					"nativeSrc": "12480:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12480:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12470:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12470:3:17"
																			},
																			"nativeSrc": "12470:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12470:31:17"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "12464:2:17",
																				"nodeType": "YulTypedName",
																				"src": "12464:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12514:24:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12514:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "12527:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "12527:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "12518:5:17",
																				"nodeType": "YulTypedName",
																				"src": "12518:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12612:20:17",
																			"nodeType": "YulBlock",
																			"src": "12612:20:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12621:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "12621:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12628:1:17",
																								"nodeType": "YulLiteral",
																								"src": "12628:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12614:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "12614:6:17"
																						},
																						"nativeSrc": "12614:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12614:16:17"
																					},
																					"nativeSrc": "12614:16:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "12614:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12562:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "12562:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "12569:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "12569:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12559:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "12559:2:17"
																			},
																			"nativeSrc": "12559:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12559:13:17"
																		},
																		"nativeSrc": "12551:81:17",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "12573:26:17",
																			"nodeType": "YulBlock",
																			"src": "12573:26:17",
																			"statements": [
																				{
																					"nativeSrc": "12575:22:17",
																					"nodeType": "YulAssignment",
																					"src": "12575:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12588:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "12588:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12595:1:17",
																								"nodeType": "YulLiteral",
																								"src": "12595:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12584:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12584:3:17"
																						},
																						"nativeSrc": "12584:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12584:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "12575:5:17",
																							"nodeType": "YulIdentifier",
																							"src": "12575:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "12555:3:17",
																			"nodeType": "YulBlock",
																			"src": "12555:3:17",
																			"statements": []
																		},
																		"src": "12551:81:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12227:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12227:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12232:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12232:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12224:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12224:2:17"
																},
																"nativeSrc": "12224:11:17",
																"nodeType": "YulFunctionCall",
																"src": "12224:11:17"
															},
															"nativeSrc": "12221:421:17",
															"nodeType": "YulIf",
															"src": "12221:421:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "12130:518:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12183:5:17",
														"nodeType": "YulTypedName",
														"src": "12183:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12190:3:17",
														"nodeType": "YulTypedName",
														"src": "12190:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12195:10:17",
														"nodeType": "YulTypedName",
														"src": "12195:10:17",
														"type": ""
													}
												],
												"src": "12130:518:17"
											},
											{
												"body": {
													"nativeSrc": "12738:81:17",
													"nodeType": "YulBlock",
													"src": "12738:81:17",
													"statements": [
														{
															"nativeSrc": "12748:65:17",
															"nodeType": "YulAssignment",
															"src": "12748:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12763:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "12763:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12781:1:17",
																										"nodeType": "YulLiteral",
																										"src": "12781:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12784:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "12784:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12777:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12777:3:17"
																								},
																								"nativeSrc": "12777:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12777:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12794:1:17",
																										"nodeType": "YulLiteral",
																										"src": "12794:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12790:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12790:3:17"
																								},
																								"nativeSrc": "12790:6:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12790:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12773:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12773:3:17"
																						},
																						"nativeSrc": "12773:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12773:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12769:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12769:3:17"
																				},
																				"nativeSrc": "12769:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12769:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12759:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12759:3:17"
																		},
																		"nativeSrc": "12759:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12759:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12805:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12805:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12808:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12808:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12801:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12801:3:17"
																		},
																		"nativeSrc": "12801:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12801:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12756:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12756:2:17"
																},
																"nativeSrc": "12756:57:17",
																"nodeType": "YulFunctionCall",
																"src": "12756:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12748:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12748:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12653:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12715:4:17",
														"nodeType": "YulTypedName",
														"src": "12715:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12721:3:17",
														"nodeType": "YulTypedName",
														"src": "12721:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12729:4:17",
														"nodeType": "YulTypedName",
														"src": "12729:4:17",
														"type": ""
													}
												],
												"src": "12653:166:17"
											},
											{
												"body": {
													"nativeSrc": "12920:1203:17",
													"nodeType": "YulBlock",
													"src": "12920:1203:17",
													"statements": [
														{
															"nativeSrc": "12930:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12930:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12950:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12950:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12944:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12944:5:17"
																},
																"nativeSrc": "12944:10:17",
																"nodeType": "YulFunctionCall",
																"src": "12944:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12934:6:17",
																	"nodeType": "YulTypedName",
																	"src": "12934:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12997:22:17",
																"nodeType": "YulBlock",
																"src": "12997:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12999:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "12999:16:17"
																			},
																			"nativeSrc": "12999:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12999:18:17"
																		},
																		"nativeSrc": "12999:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12999:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12969:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12969:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12977:18:17",
																		"nodeType": "YulLiteral",
																		"src": "12977:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12966:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12966:2:17"
																},
																"nativeSrc": "12966:30:17",
																"nodeType": "YulFunctionCall",
																"src": "12966:30:17"
															},
															"nativeSrc": "12963:56:17",
															"nodeType": "YulIf",
															"src": "12963:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13072:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13072:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13110:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "13110:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13104:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "13104:5:17"
																				},
																				"nativeSrc": "13104:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13104:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "13078:25:17",
																			"nodeType": "YulIdentifier",
																			"src": "13078:25:17"
																		},
																		"nativeSrc": "13078:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13078:38:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13118:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13118:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "13028:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "13028:43:17"
																},
																"nativeSrc": "13028:97:17",
																"nodeType": "YulFunctionCall",
																"src": "13028:97:17"
															},
															"nativeSrc": "13028:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "13028:97:17"
														},
														{
															"nativeSrc": "13134:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13134:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "13151:1:17",
																"nodeType": "YulLiteral",
																"src": "13151:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13138:9:17",
																	"nodeType": "YulTypedName",
																	"src": "13138:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13161:17:17",
															"nodeType": "YulAssignment",
															"src": "13161:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "13174:4:17",
																"nodeType": "YulLiteral",
																"src": "13174:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13161:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "13161:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13224:642:17",
																		"nodeType": "YulBlock",
																		"src": "13224:642:17",
																		"statements": [
																			{
																				"nativeSrc": "13238:35:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13238:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13257:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "13257:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13269:2:17",
																									"nodeType": "YulLiteral",
																									"src": "13269:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13265:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "13265:3:17"
																							},
																							"nativeSrc": "13265:7:17",
																							"nodeType": "YulFunctionCall",
																							"src": "13265:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13253:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "13253:3:17"
																					},
																					"nativeSrc": "13253:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13253:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13242:7:17",
																						"nodeType": "YulTypedName",
																						"src": "13242:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13286:49:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13286:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13330:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "13330:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "13300:29:17",
																						"nodeType": "YulIdentifier",
																						"src": "13300:29:17"
																					},
																					"nativeSrc": "13300:35:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13300:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13290:6:17",
																						"nodeType": "YulTypedName",
																						"src": "13290:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13348:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13348:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13357:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13357:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13352:1:17",
																						"nodeType": "YulTypedName",
																						"src": "13352:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13428:165:17",
																					"nodeType": "YulBlock",
																					"src": "13428:165:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13453:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "13453:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13471:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "13471:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13476:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "13476:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13467:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "13467:3:17"
																												},
																												"nativeSrc": "13467:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "13467:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13461:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "13461:5:17"
																										},
																										"nativeSrc": "13461:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "13461:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13446:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "13446:6:17"
																								},
																								"nativeSrc": "13446:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13446:42:17"
																							},
																							"nativeSrc": "13446:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "13446:42:17"
																						},
																						{
																							"nativeSrc": "13505:24:17",
																							"nodeType": "YulAssignment",
																							"src": "13505:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13519:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "13519:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13527:1:17",
																										"nodeType": "YulLiteral",
																										"src": "13527:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13515:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "13515:3:17"
																								},
																								"nativeSrc": "13515:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13515:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13505:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "13505:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13546:33:17",
																							"nodeType": "YulAssignment",
																							"src": "13546:33:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13563:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "13563:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13574:4:17",
																										"nodeType": "YulLiteral",
																										"src": "13574:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13559:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "13559:3:17"
																								},
																								"nativeSrc": "13559:20:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13559:20:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13546:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "13546:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13382:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "13382:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13385:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "13385:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13379:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "13379:2:17"
																					},
																					"nativeSrc": "13379:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13379:14:17"
																				},
																				"nativeSrc": "13371:222:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13394:21:17",
																					"nodeType": "YulBlock",
																					"src": "13394:21:17",
																					"statements": [
																						{
																							"nativeSrc": "13396:17:17",
																							"nodeType": "YulAssignment",
																							"src": "13396:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13405:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "13405:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13408:4:17",
																										"nodeType": "YulLiteral",
																										"src": "13408:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13401:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "13401:3:17"
																								},
																								"nativeSrc": "13401:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13401:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13396:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "13396:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13375:3:17",
																					"nodeType": "YulBlock",
																					"src": "13375:3:17",
																					"statements": []
																				},
																				"src": "13371:222:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "13641:166:17",
																					"nodeType": "YulBlock",
																					"src": "13641:166:17",
																					"statements": [
																						{
																							"nativeSrc": "13659:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13659:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13686:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "13686:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13691:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "13691:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13682:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "13682:3:17"
																										},
																										"nativeSrc": "13682:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "13682:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13676:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "13676:5:17"
																								},
																								"nativeSrc": "13676:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13676:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13663:9:17",
																									"nodeType": "YulTypedName",
																									"src": "13663:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13726:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "13726:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13738:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "13738:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13765:1:17",
																																				"nodeType": "YulLiteral",
																																				"src": "13765:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13768:6:17",
																																				"nodeType": "YulIdentifier",
																																				"src": "13768:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13761:3:17",
																																			"nodeType": "YulIdentifier",
																																			"src": "13761:3:17"
																																		},
																																		"nativeSrc": "13761:14:17",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13761:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13777:3:17",
																																		"nodeType": "YulLiteral",
																																		"src": "13777:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13757:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "13757:3:17"
																																},
																																"nativeSrc": "13757:24:17",
																																"nodeType": "YulFunctionCall",
																																"src": "13757:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13787:1:17",
																																		"nodeType": "YulLiteral",
																																		"src": "13787:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13783:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "13783:3:17"
																																},
																																"nativeSrc": "13783:6:17",
																																"nodeType": "YulFunctionCall",
																																"src": "13783:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13753:3:17",
																															"nodeType": "YulIdentifier",
																															"src": "13753:3:17"
																														},
																														"nativeSrc": "13753:37:17",
																														"nodeType": "YulFunctionCall",
																														"src": "13753:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13749:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "13749:3:17"
																												},
																												"nativeSrc": "13749:42:17",
																												"nodeType": "YulFunctionCall",
																												"src": "13749:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13734:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "13734:3:17"
																										},
																										"nativeSrc": "13734:58:17",
																										"nodeType": "YulFunctionCall",
																										"src": "13734:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13719:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "13719:6:17"
																								},
																								"nativeSrc": "13719:74:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13719:74:17"
																							},
																							"nativeSrc": "13719:74:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "13719:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13612:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "13612:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13621:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "13621:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13609:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "13609:2:17"
																					},
																					"nativeSrc": "13609:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13609:19:17"
																				},
																				"nativeSrc": "13606:201:17",
																				"nodeType": "YulIf",
																				"src": "13606:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13827:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "13827:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13841:1:17",
																											"nodeType": "YulLiteral",
																											"src": "13841:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13844:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "13844:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13837:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "13837:3:17"
																									},
																									"nativeSrc": "13837:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "13837:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13853:1:17",
																									"nodeType": "YulLiteral",
																									"src": "13853:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13833:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "13833:3:17"
																							},
																							"nativeSrc": "13833:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "13833:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13820:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13820:6:17"
																					},
																					"nativeSrc": "13820:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13820:36:17"
																				},
																				"nativeSrc": "13820:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "13820:36:17"
																			}
																		]
																	},
																	"nativeSrc": "13217:649:17",
																	"nodeType": "YulCase",
																	"src": "13217:649:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13222:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13222:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13883:234:17",
																		"nodeType": "YulBlock",
																		"src": "13883:234:17",
																		"statements": [
																			{
																				"nativeSrc": "13897:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13897:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13910:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13910:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13901:5:17",
																						"nodeType": "YulTypedName",
																						"src": "13901:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13946:67:17",
																					"nodeType": "YulBlock",
																					"src": "13946:67:17",
																					"statements": [
																						{
																							"nativeSrc": "13964:35:17",
																							"nodeType": "YulAssignment",
																							"src": "13964:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13983:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "13983:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13988:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "13988:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13979:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "13979:3:17"
																										},
																										"nativeSrc": "13979:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "13979:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13973:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "13973:5:17"
																								},
																								"nativeSrc": "13973:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "13973:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13964:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "13964:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13927:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "13927:6:17"
																				},
																				"nativeSrc": "13924:89:17",
																				"nodeType": "YulIf",
																				"src": "13924:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14033:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "14033:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14092:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "14092:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14099:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "14099:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14039:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "14039:52:17"
																							},
																							"nativeSrc": "14039:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "14039:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14026:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "14026:6:17"
																					},
																					"nativeSrc": "14026:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "14026:81:17"
																				},
																				"nativeSrc": "14026:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "14026:81:17"
																			}
																		]
																	},
																	"nativeSrc": "13875:242:17",
																	"nodeType": "YulCase",
																	"src": "13875:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13197:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13197:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13205:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13194:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13194:2:17"
																},
																"nativeSrc": "13194:14:17",
																"nodeType": "YulFunctionCall",
																"src": "13194:14:17"
															},
															"nativeSrc": "13187:930:17",
															"nodeType": "YulSwitch",
															"src": "13187:930:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12824:1299:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12905:4:17",
														"nodeType": "YulTypedName",
														"src": "12905:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12911:3:17",
														"nodeType": "YulTypedName",
														"src": "12911:3:17",
														"type": ""
													}
												],
												"src": "12824:1299:17"
											},
											{
												"body": {
													"nativeSrc": "14180:116:17",
													"nodeType": "YulBlock",
													"src": "14180:116:17",
													"statements": [
														{
															"nativeSrc": "14190:20:17",
															"nodeType": "YulAssignment",
															"src": "14190:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14205:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14205:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14208:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14208:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14201:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14201:3:17"
																},
																"nativeSrc": "14201:9:17",
																"nodeType": "YulFunctionCall",
																"src": "14201:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14190:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "14190:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14268:22:17",
																"nodeType": "YulBlock",
																"src": "14268:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14270:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "14270:16:17"
																			},
																			"nativeSrc": "14270:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14270:18:17"
																		},
																		"nativeSrc": "14270:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14270:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14239:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "14239:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14232:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "14232:6:17"
																				},
																				"nativeSrc": "14232:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14232:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14246:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "14246:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14253:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "14253:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14262:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "14262:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14249:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "14249:3:17"
																						},
																						"nativeSrc": "14249:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "14249:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14243:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "14243:2:17"
																				},
																				"nativeSrc": "14243:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14243:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14229:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "14229:2:17"
																		},
																		"nativeSrc": "14229:37:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14222:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:17"
																},
																"nativeSrc": "14222:45:17",
																"nodeType": "YulFunctionCall",
																"src": "14222:45:17"
															},
															"nativeSrc": "14219:71:17",
															"nodeType": "YulIf",
															"src": "14219:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14128:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14159:1:17",
														"nodeType": "YulTypedName",
														"src": "14159:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14162:1:17",
														"nodeType": "YulTypedName",
														"src": "14162:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14168:7:17",
														"nodeType": "YulTypedName",
														"src": "14168:7:17",
														"type": ""
													}
												],
												"src": "14128:168:17"
											},
											{
												"body": {
													"nativeSrc": "14333:95:17",
													"nodeType": "YulBlock",
													"src": "14333:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14350:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14350:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14357:3:17",
																				"nodeType": "YulLiteral",
																				"src": "14357:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14362:10:17",
																				"nodeType": "YulLiteral",
																				"src": "14362:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14353:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:17"
																		},
																		"nativeSrc": "14353:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14353:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14343:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14343:6:17"
																},
																"nativeSrc": "14343:31:17",
																"nodeType": "YulFunctionCall",
																"src": "14343:31:17"
															},
															"nativeSrc": "14343:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "14343:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14390:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14390:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14393:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14393:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14383:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14383:6:17"
																},
																"nativeSrc": "14383:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14383:15:17"
															},
															"nativeSrc": "14383:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14383:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14414:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14414:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14417:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14417:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14407:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14407:6:17"
																},
																"nativeSrc": "14407:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14407:15:17"
															},
															"nativeSrc": "14407:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14407:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14301:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "14301:127:17"
											},
											{
												"body": {
													"nativeSrc": "14480:89:17",
													"nodeType": "YulBlock",
													"src": "14480:89:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14507:22:17",
																"nodeType": "YulBlock",
																"src": "14507:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14509:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "14509:16:17"
																			},
																			"nativeSrc": "14509:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14509:18:17"
																		},
																		"nativeSrc": "14509:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14509:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14500:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14500:5:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14493:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14493:6:17"
																},
																"nativeSrc": "14493:13:17",
																"nodeType": "YulFunctionCall",
																"src": "14493:13:17"
															},
															"nativeSrc": "14490:39:17",
															"nodeType": "YulIf",
															"src": "14490:39:17"
														},
														{
															"nativeSrc": "14538:25:17",
															"nodeType": "YulAssignment",
															"src": "14538:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14549:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14549:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14560:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14560:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14556:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14556:3:17"
																		},
																		"nativeSrc": "14556:6:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14556:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14545:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14545:3:17"
																},
																"nativeSrc": "14545:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14545:18:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14538:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14538:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "14433:136:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14462:5:17",
														"nodeType": "YulTypedName",
														"src": "14462:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14472:3:17",
														"nodeType": "YulTypedName",
														"src": "14472:3:17",
														"type": ""
													}
												],
												"src": "14433:136:17"
											},
											{
												"body": {
													"nativeSrc": "14748:182:17",
													"nodeType": "YulBlock",
													"src": "14748:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14765:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14765:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14776:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14776:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14758:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14758:6:17"
																},
																"nativeSrc": "14758:21:17",
																"nodeType": "YulFunctionCall",
																"src": "14758:21:17"
															},
															"nativeSrc": "14758:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "14758:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14799:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14799:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14810:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14810:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14795:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14795:3:17"
																		},
																		"nativeSrc": "14795:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14795:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14815:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14815:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14788:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14788:6:17"
																},
																"nativeSrc": "14788:30:17",
																"nodeType": "YulFunctionCall",
																"src": "14788:30:17"
															},
															"nativeSrc": "14788:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "14788:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14838:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14838:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14849:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14849:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14834:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14834:3:17"
																		},
																		"nativeSrc": "14834:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14834:18:17"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "14854:34:17",
																		"nodeType": "YulLiteral",
																		"src": "14854:34:17",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14827:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14827:6:17"
																},
																"nativeSrc": "14827:62:17",
																"nodeType": "YulFunctionCall",
																"src": "14827:62:17"
															},
															"nativeSrc": "14827:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "14827:62:17"
														},
														{
															"nativeSrc": "14898:26:17",
															"nodeType": "YulAssignment",
															"src": "14898:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14910:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14910:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14921:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14921:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14906:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14906:3:17"
																},
																"nativeSrc": "14906:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14906:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14898:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14898:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14574:356:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14725:9:17",
														"nodeType": "YulTypedName",
														"src": "14725:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14739:4:17",
														"nodeType": "YulTypedName",
														"src": "14739:4:17",
														"type": ""
													}
												],
												"src": "14574:356:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let _1 := abi_encode_string(value0, add(pos, 23))\n        mstore(_1, \" is missing role \")\n        end := abi_encode_string(value1, add(_1, 17))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101dc575f3560e01c806379cc679011610109578063a9059cbb1161009e578063d547741f1161006e578063d547741f14610443578063dd62ed3e14610456578063e90cdd1c14610469578063f2fde38b1461047c575f5ffd5b8063a9059cbb146103bc578063b930908f146103cf578063bd39a2a8146103f6578063d53913931461041c575f5ffd5b806395d89b41116100d957806395d89b41146103875780639dc29fac1461038f578063a217fddf146103a2578063a457c2d7146103a9575f5ffd5b806379cc67901461033e5780638129fc1c146103515780638da5cb5b1461035957806391d1485414610374575f5ffd5b8063313ce5671161017f57806342966c681161014f57806342966c68146102d45780634e695cca146102e757806370a082311461030e578063715018a614610336575f5ffd5b8063313ce5671461028c57806336568abe1461029b57806339509351146102ae57806340c10f19146102c1575f5ffd5b806318160ddd116101ba57806318160ddd1461023057806323b872dd14610242578063248a9ca3146102555780632f2ff15d14610277575f5ffd5b806301ffc9a7146101e057806306fdde0314610208578063095ea7b31461021d575b5f5ffd5b6101f36101ee366004611596565b61048f565b60405190151581526020015b60405180910390f35b6102106104c5565b6040516101ff91906115bd565b6101f361022b36600461160d565b610555565b6035545b6040519081526020016101ff565b6101f3610250366004611635565b61056c565b61023461026336600461166f565b5f90815260fb602052604090206001015490565b61028a610285366004611686565b610632565b005b604051601281526020016101ff565b61028a6102a9366004611686565b61065b565b6101f36102bc36600461160d565b6106de565b61028a6102cf36600461160d565b6106ff565b61028a6102e236600461166f565b610733565b6102347f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b081565b61023461031c3660046116b0565b6001600160a01b03165f9081526033602052604090205490565b61028a610740565b61028a61034c36600461160d565b610753565b61028a610768565b6065546040516001600160a01b0390911681526020016101ff565b6101f3610382366004611686565b610908565b610210610932565b61028a61039d36600461160d565b610941565b6102345f81565b6101f36103b736600461160d565b610975565b6101f36103ca36600461160d565b6109fa565b6102347fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa2281565b61012d546104079063ffffffff1681565b60405163ffffffff90911681526020016101ff565b6102347f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61028a610451366004611686565b610a07565b6102346104643660046116c9565b610a2b565b61028a6104773660046116f1565b610a55565b61028a61048a3660046116b0565b610af5565b5f6001600160e01b03198216637965db0b60e01b14806104bf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060603680546104d490611714565b80601f016020809104026020016040519081016040528092919081815260200182805461050090611714565b801561054b5780601f106105225761010080835404028352916020019161054b565b820191905f5260205f20905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b5f33610562818585610b6b565b5060019392505050565b61012d545f9084908490839063ffffffff161580610592575061012d5463ffffffff1642105b9050801561061c575f6105a58185610908565b806105b557506105b55f84610908565b806105c557506105c55f33610908565b9050801580156105fc57506105fa7f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b084610908565b155b1561061a5760405163afae8e9760e01b815260040160405180910390fd5b505b610627878787610c8e565b979650505050505050565b5f82815260fb602052604090206001015461064c81610ca6565b6106568383610cb0565b505050565b6001600160a01b03811633146106d05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106da8282610d35565b5050565b5f336105628185856106f08383610a2b565b6106fa9190611760565b610b6b565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661072981610ca6565b6106568383610d9b565b61073d3382610e5a565b50565b610748610f8c565b6107515f610fe6565b565b61075e823383611037565b6106da8282610e5a565b5f54610100900460ff161580801561078657505f54600160ff909116105b8061079f5750303b15801561079f57505f5460ff166001145b6108025760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106c7565b5f805460ff191660011790558015610823575f805461ff0019166101001790555b61086760405180604001604052806006815260200165416c7661726160d01b81525060405180604001604052806004815260200163414c564160e01b8152506110af565b61086f6110df565b6108b97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22611105565b6108c1611149565b801561073d575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b5f91825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060603780546104d490611714565b7fe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa2261096b81610ca6565b6106568383610e5a565b5f33816109828286610a2b565b9050838110156109e25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106c7565b6109ef8286868403610b6b565b506001949350505050565b5f33610562818585611177565b5f82815260fb6020526040902060010154610a2181610ca6565b6106568383610d35565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b5f610a5f81610ca6565b61012d5463ffffffff1615801590610a80575061012d5463ffffffff164210155b15610a9e57604051636f555ee160e11b815260040160405180910390fd5b60405163ffffffff831681527f0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d69060200160405180910390a15061012d805463ffffffff191663ffffffff92909216919091179055565b610afd610f8c565b6001600160a01b038116610b625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106c7565b61073d81610fe6565b6001600160a01b038316610bcd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106c7565b6001600160a01b038216610c2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106c7565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f33610c9b858285611037565b6109ef858585611177565b61073d8133611320565b610cba8282610908565b6106da575f82815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610cf13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610d3f8282610908565b156106da575f82815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216610df15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106c7565b8060355f828254610e029190611760565b90915550506001600160a01b0382165f818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610eba5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106c7565b6001600160a01b0382165f9081526033602052604090205481811015610f2d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106c7565b6001600160a01b0383165f8181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6065546001600160a01b031633146107515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c7565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6110428484610a2b565b90505f1981146110a9578181101561109c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106c7565b6110a98484848403610b6b565b50505050565b5f54610100900460ff166110d55760405162461bcd60e51b81526004016106c790611773565b6106da8282611379565b5f54610100900460ff166107515760405162461bcd60e51b81526004016106c790611773565b5f54610100900460ff1661112b5760405162461bcd60e51b81526004016106c790611773565b6111355f33610cb0565b61113f8233610cb0565b6106da8133610cb0565b5f54610100900460ff1661116f5760405162461bcd60e51b81526004016106c790611773565b6107516113b8565b6001600160a01b0383166111db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106c7565b6001600160a01b03821661123d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106c7565b6001600160a01b0383165f90815260336020526040902054818110156112b45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106c7565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113139086815260200190565b60405180910390a36110a9565b61132a8282610908565b6106da57611337816113e7565b6113428360206113f9565b6040516020016113539291906117d5565b60408051601f198184030181529082905262461bcd60e51b82526106c7916004016115bd565b5f54610100900460ff1661139f5760405162461bcd60e51b81526004016106c790611773565b60366113ab8382611892565b5060376106568282611892565b5f54610100900460ff166113de5760405162461bcd60e51b81526004016106c790611773565b61075133610fe6565b60606104bf6001600160a01b03831660145b60605f61140783600261194d565b611412906002611760565b67ffffffffffffffff81111561142a5761142a611833565b6040519080825280601f01601f191660200182016040528015611454576020820181803683370190505b509050600360fc1b815f8151811061146e5761146e611964565b60200101906001600160f81b03191690815f1a905350600f60fb1b8160018151811061149c5761149c611964565b60200101906001600160f81b03191690815f1a9053505f6114be84600261194d565b6114c9906001611760565b90505b6001811115611540576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114fd576114fd611964565b1a60f81b82828151811061151357611513611964565b60200101906001600160f81b03191690815f1a90535060049490941c9361153981611978565b90506114cc565b50831561158f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c7565b9392505050565b5f602082840312156115a6575f5ffd5b81356001600160e01b03198116811461158f575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611608575f5ffd5b919050565b5f5f6040838503121561161e575f5ffd5b611627836115f2565b946020939093013593505050565b5f5f5f60608486031215611647575f5ffd5b611650846115f2565b925061165e602085016115f2565b929592945050506040919091013590565b5f6020828403121561167f575f5ffd5b5035919050565b5f5f60408385031215611697575f5ffd5b823591506116a7602084016115f2565b90509250929050565b5f602082840312156116c0575f5ffd5b61158f826115f2565b5f5f604083850312156116da575f5ffd5b6116e3836115f2565b91506116a7602084016115f2565b5f60208284031215611701575f5ffd5b813563ffffffff8116811461158f575f5ffd5b600181811c9082168061172857607f821691505b60208210810361174657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104bf576104bf61174c565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f61180660178301856117be565b7001034b99036b4b9b9b4b733903937b6329607d1b815261182a60118201856117be565b95945050505050565b634e487b7160e01b5f52604160045260245ffd5b601f82111561065657805f5260205f20601f840160051c8101602085101561186c5750805b601f840160051c820191505b8181101561188b575f8155600101611878565b5050505050565b815167ffffffffffffffff8111156118ac576118ac611833565b6118c0816118ba8454611714565b84611847565b6020601f8211600181146118f2575f83156118db5750848201515b5f19600385901b1c1916600184901b17845561188b565b5f84815260208120601f198516915b828110156119215787850151825560209485019460019092019101611901565b508482101561193e57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b80820281158282048414176104bf576104bf61174c565b634e487b7160e01b5f52603260045260245ffd5b5f816119865761198661174c565b505f19019056fea264697066735822122068d1b88710002b7679e654ee9c3c4ada6117129ea101befa5817c74403718dc864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xE90CDD1C EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xB930908F EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xBD39A2A8 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x41C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x4E695CCA EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x277 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x166F JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH2 0x234 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x740 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x768 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x234 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x234 PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 DUP2 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH2 0x407 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x234 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x28A PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4BF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x1714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x500 SWAP1 PUSH2 0x1714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH0 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF AND ISZERO DUP1 PUSH2 0x592 JUMPI POP PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 PUSH2 0x5A5 DUP2 DUP6 PUSH2 0x908 JUMP JUMPDEST DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B5 PUSH0 DUP5 PUSH2 0x908 JUMP JUMPDEST DUP1 PUSH2 0x5C5 JUMPI POP PUSH2 0x5C5 PUSH0 CALLER PUSH2 0x908 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x5FC JUMPI POP PUSH2 0x5FA PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP5 PUSH2 0x908 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAFAE8E97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x627 DUP8 DUP8 DUP8 PUSH2 0xC8E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x64C DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xD35 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0x6F0 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x729 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x73D CALLER DUP3 PUSH2 0xE5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x748 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0x751 PUSH0 PUSH2 0xFE6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x75E DUP3 CALLER DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x786 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x79F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x823 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x867 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x416C76617261 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x414C5641 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x86F PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x8B9 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x1149 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH32 0xE97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22 PUSH2 0x96B DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xE5A JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x982 DUP3 DUP7 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x9EF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x562 DUP2 DUP6 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA21 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA5F DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA80 JUMPI POP PUSH2 0x12D SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F555EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xE210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x12D DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAFD PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xC9B DUP6 DUP3 DUP6 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x9EF DUP6 DUP6 DUP6 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x73D DUP2 CALLER PUSH2 0x1320 JUMP JUMPDEST PUSH2 0xCBA DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCF1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x6DA JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xFB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1042 DUP5 DUP5 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x10A9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x10A9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0x1379 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1135 PUSH0 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x113F DUP3 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x6DA DUP2 CALLER PUSH2 0xCB0 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1313 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x132A DUP3 DUP3 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH2 0x1337 DUP2 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x1342 DUP4 PUSH1 0x20 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1353 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C7 SWAP2 PUSH1 0x4 ADD PUSH2 0x15BD JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x13AB DUP4 DUP3 PUSH2 0x1892 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x656 DUP3 DUP3 PUSH2 0x1892 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x751 CALLER PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1407 DUP4 PUSH1 0x2 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1412 SWAP1 PUSH1 0x2 PUSH2 0x1760 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1454 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x146E JUMPI PUSH2 0x146E PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x149C JUMPI PUSH2 0x149C PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x14BE DUP5 PUSH1 0x2 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x14C9 SWAP1 PUSH1 0x1 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1540 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0x1964 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1513 JUMPI PUSH2 0x1513 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1539 DUP2 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CC JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x158F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1608 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1627 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1650 DUP5 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH1 0x20 DUP6 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x16A7 PUSH1 0x20 DUP5 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x158F DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16E3 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A7 PUSH1 0x20 DUP5 ADD PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1701 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1728 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x174C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x1806 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x182A PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x656 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x186C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x188B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1878 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AC PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x18C0 DUP2 PUSH2 0x18BA DUP5 SLOAD PUSH2 0x1714 JUMP JUMPDEST DUP5 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x18F2 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x18DB JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x188B JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1901 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x193E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x174C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x1986 JUMPI PUSH2 0x1986 PUSH2 0x174C JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD1B88710002B7679E6 SLOAD RETURNCONTRACT 0x9C EXTCODECOPY BLOBBASEFEE 0xDA PUSH2 0x1712 SWAP15 LOG1 ADD 0xBE STATICCALL PC OR 0xC7 PREVRANDAO SUB PUSH18 0x8DC864736F6C634300081E00330000000000 ",
							"sourceMap": "479:942:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:213:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:17;;463:22;445:41;;433:2;418:18;3050:213:0;;;;;;;;2516:98:4;;;:::i;:::-;;;;;;;:::i;4802:197::-;;;;;;:::i;:::-;;:::i;3613:106::-;3700:12;;3613:106;;;1549:25:17;;;1537:2;1522:18;3613:106:4;1403:177:17;1201:218:15;;;;;;:::i;:::-;;:::i;4855:129:0:-;;;;;;:::i;:::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;;4855:129;5280:145;;;;;;:::i;:::-;;:::i;:::-;;3462:91:4;;;3544:2;2824:36:17;;2812:2;2797:18;3462:91:4;2682:184:17;6389:214:0;;;;;;:::i;:::-;;:::i;6212:234:4:-;;;;;;:::i;:::-;;:::i;965:111:15:-;;;;;;:::i;:::-;;:::i;869:89:6:-;;;;;;:::i;:::-;;:::i;1258:100:16:-;;1319:39;1258:100;;3777:125:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3877:18:4;3851:7;3877:18;;;:9;:18;;;;;;;3777:125;2085:101:2;;;:::i;1264:161:6:-;;;;;;:::i;:::-;;:::i;749:210:15:-;;;:::i;1462:85:2:-;1534:6;;1462:85;;-1:-1:-1;;;;;1534:6:2;;;3439:51:17;;3427:2;3412:18;1462:85:2;3293:203:17;3350:145:0;;;;;;:::i;:::-;;:::i;2727:102:4:-;;;:::i;1082:113:15:-;;;;;;:::i;:::-;;:::i;2320:49:0:-;;2365:4;2320:49;;6933:427:4;;;;;;:::i;:::-;;:::i;4098:189::-;;;;;;:::i;:::-;;:::i;684:58:15:-;;720:22;684:58;;1364:30:16;;;;;;;;;;;;3675:10:17;3663:23;;;3645:42;;3633:2;3618:18;1364:30:16;3501:192:17;616:62:15;;654:24;616:62;;5705:147:0;;;;;;:::i;:::-;;:::i;4345:149:4:-;;;;;;:::i;:::-;;:::i;2922:355:16:-;;;;;;:::i;:::-;;:::i;2335:198:2:-;;;;;;:::i;:::-;;:::i;3050:213:0:-;3135:4;-1:-1:-1;;;;;;3158:58:0;;-1:-1:-1;;;3158:58:0;;:98;;-1:-1:-1;;;;;;;;;;1189:51:11;;;3220:36:0;3151:105;3050:213;-1:-1:-1;;3050:213:0:o;2516:98:4:-;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;965:10:9;4939:32:4;965:10:9;4955:7:4;4964:6;4939:8;:32::i;:::-;-1:-1:-1;4988:4:4;;4802:197;-1:-1:-1;;;4802:197:4:o;1201:218:15:-;1774:16:16;;1353:4:15;;1334;;1340:2;;1353:4;;1774:16:16;;:21;;:71;;-1:-1:-1;1829:16:16;;;;1811:15;:34;1774:71;1741:104;;1859:25;1855:430;;;1900:29;1932:33;1900:29;1960:4;1932:7;:33::i;:::-;:84;;;-1:-1:-1;1985:31:16;2365:4:0;2013:2:16;1985:7;:31::i;:::-;1932:145;;;-1:-1:-1;2036:41:16;2365:4:0;965:10:9;3350:145:0;:::i;2036:41:16:-;1900:177;;2113:24;2112:25;:85;;;;;2158:39;1319;2194:2;2158:7;:39::i;:::-;2157:40;2112:85;2091:184;;;2237:23;;-1:-1:-1;;;2237:23:16;;;;;;;;;;;2091:184;1886:399;1855:430;1376:36:15::1;1395:4;1401:2;1405:6;1376:18;:36::i;:::-;1369:43:::0;1201:218;-1:-1:-1;;;;;;;1201:218:15:o;5280:145:0:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;-1:-1:-1;;;;;6484:23:0;;965:10:9;6484:23:0;6476:83;;;;-1:-1:-1;;;6476:83:0;;4831:2:17;6476:83:0;;;4813:21:17;4870:2;4850:18;;;4843:30;4909:34;4889:18;;;4882:62;-1:-1:-1;;;4960:18:17;;;4953:45;5015:19;;6476:83:0;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;6212:234:4:-;6300:4;965:10:9;6354:64:4;965:10:9;6370:7:4;6407:10;6379:25;965:10:9;6370:7:4;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;965:111:15:-;654:24;2798:16:0;2809:4;2798:10;:16::i;:::-;1046:23:15::1;1058:2;1062:6;1046:11;:23::i;869:89:6:-:0;924:27;965:10:9;944:6:6;924:5;:27::i;:::-;869:89;:::o;2085:101:2:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;1264:161:6:-;1340:46;1356:7;965:10:9;1379:6:6;1340:15;:46::i;:::-;1396:22;1402:7;1411:6;1396:5;:22::i;749:210:15:-;3279:19:3;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:3;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:3;1713:19:8;:23;;;3387:66:3;;-1:-1:-1;3436:12:3;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:3;;5509:2:17;3325:201:3;;;5491:21:17;5548:2;5528:18;;;5521:30;5587:34;5567:18;;;5560:62;-1:-1:-1;;;5638:18:17;;;5631:44;5692:19;;3325:201:3;5307:410:17;3325:201:3;3536:12;:16;;-1:-1:-1;;3536:16:3;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:3;;;;;3562:65;800:30:15::1;;;;;;;;;;;;;;-1:-1:-1::0;;;800:30:15::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;800:30:15::1;;::::0;:12:::1;:30::i;:::-;840:22;:20;:22::i;:::-;872:54;654:24;720:22;872:30;:54::i;:::-;936:16;:14;:16::i;:::-;3651:14:3::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:3;;;3721:14;;-1:-1:-1;2824:36:17;;3721:14:3;;2812:2:17;2797:18;3721:14:3;;;;;;;3269:483;749:210:15:o;3350:145:0:-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:0;;;;;;;;;;;;;;;3350:145::o;2727:102:4:-;2783:13;2815:7;2808:14;;;;;:::i;1082:113:15:-;720:22;2798:16:0;2809:4;2798:10;:16::i;:::-;1163:25:15::1;1175:4;1181:6;1163:11;:25::i;6933:427:4:-:0;7026:4;965:10:9;7026:4:4;7107:25;965:10:9;7124:7:4;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;-1:-1:-1;;;7142:85:4;;6123:2:17;7142:85:4;;;6105:21:17;6162:2;6142:18;;;6135:30;6201:34;6181:18;;;6174:62;-1:-1:-1;;;6252:18:17;;;6245:35;6297:19;;7142:85:4;5921:401:17;7142:85:4;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;:::-;-1:-1:-1;7349:4:4;;6933:427;-1:-1:-1;;;;6933:427:4:o;4098:189::-;4177:4;965:10:9;4231:28:4;965:10:9;4248:2:4;4252:6;4231:9;:28::i;5705:147:0:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;4345:149:4:-:0;-1:-1:-1;;;;;4460:18:4;;;4434:7;4460:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4345:149::o;2922:355:16:-;2365:4:0;2798:16;2365:4;2798:10;:16::i;:::-;3051::16::1;::::0;::::1;;:20:::0;;;;:59:::1;;-1:-1:-1::0;3094:16:16::1;::::0;::::1;;3075:15;:35;;3051:59;3047:117;;;3133:20;;-1:-1:-1::0;;;3133:20:16::1;;;;;;;;;;;3047:117;3178:44;::::0;3675:10:17;3663:23;;3645:42;;3178:44:16::1;::::0;3633:2:17;3618:18;3178:44:16::1;;;;;;;-1:-1:-1::0;3232:16:16::1;:38:::0;;-1:-1:-1;;3232:38:16::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2922:355::o;2335:198:2:-;1355:13;:11;:13::i;:::-;-1:-1:-1;;;;;2423:22:2;::::1;2415:73;;;::::0;-1:-1:-1;;;2415:73:2;;6529:2:17;2415:73:2::1;::::0;::::1;6511:21:17::0;6568:2;6548:18;;;6541:30;6607:34;6587:18;;;6580:62;-1:-1:-1;;;6658:18:17;;;6651:36;6704:19;;2415:73:2::1;6327:402:17::0;2415:73:2::1;2498:28;2517:8;2498:18;:28::i;10815:340:4:-:0;-1:-1:-1;;;;;10916:19:4;;10908:68;;;;-1:-1:-1;;;10908:68:4;;6936:2:17;10908:68:4;;;6918:21:17;6975:2;6955:18;;;6948:30;7014:34;6994:18;;;6987:62;-1:-1:-1;;;7065:18:17;;;7058:34;7109:19;;10908:68:4;6734:400:17;10908:68:4;-1:-1:-1;;;;;10994:21:4;;10986:68;;;;-1:-1:-1;;;10986:68:4;;7341:2:17;10986:68:4;;;7323:21:17;7380:2;7360:18;;;7353:30;7419:34;7399:18;;;7392:62;-1:-1:-1;;;7470:18:17;;;7463:32;7512:19;;10986:68:4;7139:398:17;10986:68:4;-1:-1:-1;;;;;11065:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11116:32;;1549:25:17;;;11116:32:4;;1522:18:17;11116:32:4;;;;;;;10815:340;;;:::o;5561:256::-;5658:4;965:10:9;5714:38:4;5730:4;965:10:9;5745:6:4;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;3789:103:0:-;3855:30;3866:4;965:10:9;3855::0;:30::i;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:0;;;;;;;;;:36;;-1:-1:-1;;8059:36:0;8091:4;8059:36;;;8141:12;965:10:9;;886:96;8141:12:0;-1:-1:-1;;;;;8114:40:0;8132:7;-1:-1:-1;;;;;8114:40:0;8126:4;8114:40;;;;;;;;;;7938:233;;:::o;8342:234::-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8463:29:0;;;;;;;;;;:37;;-1:-1:-1;;8463:37:0;;;8519:40;965:10:9;;8463:12:0;;8519:40;;8495:5;8519:40;8342:234;;:::o;8878:535:4:-;-1:-1:-1;;;;;8961:21:4;;8953:65;;;;-1:-1:-1;;;8953:65:4;;7744:2:17;8953:65:4;;;7726:21:17;7783:2;7763:18;;;7756:30;7822:33;7802:18;;;7795:61;7873:18;;8953:65:4;7542:355:17;8953:65:4;9105:6;9089:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9257:18:4;;;;;;:9;:18;;;;;;;;:28;;;;;;9310:37;1549:25:17;;;9310:37:4;;1522:18:17;9310:37:4;;;;;;;6389:214:0;;:::o;9733:659:4:-;-1:-1:-1;;;;;9816:21:4;;9808:67;;;;-1:-1:-1;;;9808:67:4;;8104:2:17;9808:67:4;;;8086:21:17;8143:2;8123:18;;;8116:30;8182:34;8162:18;;;8155:62;-1:-1:-1;;;8233:18:17;;;8226:31;8274:19;;9808:67:4;7902:397:17;9808:67:4;-1:-1:-1;;;;;9971:18:4;;9946:22;9971:18;;;:9;:18;;;;;;10007:24;;;;9999:71;;;;-1:-1:-1;;;9999:71:4;;8506:2:17;9999:71:4;;;8488:21:17;8545:2;8525:18;;;8518:30;8584:34;8564:18;;;8557:62;-1:-1:-1;;;8635:18:17;;;8628:32;8677:19;;9999:71:4;8304:398:17;9999:71:4;-1:-1:-1;;;;;10104:18:4;;;;;;:9;:18;;;;;;;;10125:23;;;10104:44;;10241:12;:22;;;;;;;10289:37;1549:25:17;;;10104:18:4;;;10289:37;;1522:18:17;10289:37:4;;;;;;;5280:145:0;;;:::o;1620:130:2:-;1534:6;;-1:-1:-1;;;;;1534:6:2;965:10:9;1683:23:2;1675:68;;;;-1:-1:-1;;;1675:68:2;;8909:2:17;1675:68:2;;;8891:21:17;;;8928:18;;;8921:30;8987:34;8967:18;;;8960:62;9039:18;;1675:68:2;8707:356:17;2687:187:2;2779:6;;;-1:-1:-1;;;;;2795:17:2;;;-1:-1:-1;;;;;;2795:17:2;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;11436:411:4:-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;-1:-1:-1;;11602:16:4;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;-1:-1:-1;;;11655:68:4;;9270:2:17;11655:68:4;;;9252:21:17;9309:2;9289:18;;;9282:30;9348:31;9328:18;;;9321:59;9397:18;;11655:68:4;9068:353:17;11655:68:4;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11526:321;11436:411;;;:::o;2139:147::-;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;:::-;2241:38:4::1;2264:5;2271:7;2241:22;:38::i;615:65:6:-:0;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;2384:281:16:-;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;:::-;2522:44:16::1;2365:4:0;965:10:9::0;2522::16::1;:44::i;:::-;2576:37;2587:11:::0;965:10:9;2522::16::1;:44::i;2576:37::-;2623:35;2634:9:::0;965:10:9;2522::16::1;:44::i;1024:95:2:-:0;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;:::-;1086:26:2::1;:24;:26::i;7814:788:4:-:0;-1:-1:-1;;;;;7910:18:4;;7902:68;;;;-1:-1:-1;;;7902:68:4;;10040:2:17;7902:68:4;;;10022:21:17;10079:2;10059:18;;;10052:30;10118:34;10098:18;;;10091:62;-1:-1:-1;;;10169:18:17;;;10162:35;10214:19;;7902:68:4;9838:401:17;7902:68:4;-1:-1:-1;;;;;7988:16:4;;7980:64;;;;-1:-1:-1;;;7980:64:4;;10446:2:17;7980:64:4;;;10428:21:17;10485:2;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;-1:-1:-1;;;10575:18:17;;;10568:33;10618:19;;7980:64:4;10244:399:17;7980:64:4;-1:-1:-1;;;;;8126:15:4;;8104:19;8126:15;;;:9;:15;;;;;;8159:21;;;;8151:72;;;;-1:-1:-1;;;8151:72:4;;10850:2:17;8151:72:4;;;10832:21:17;10889:2;10869:18;;;10862:30;10928:34;10908:18;;;10901:62;-1:-1:-1;;;10979:18:17;;;10972:36;11025:19;;8151:72:4;10648:402:17;8151:72:4;-1:-1:-1;;;;;8257:15:4;;;;;;;:9;:15;;;;;;8275:20;;;8257:38;;8472:13;;;;;;;;;;:23;;;;;;8521:26;;;;;;8289:6;1549:25:17;;1537:2;1522:18;;1403:177;8521:26:4;;;;;;;;8558:37;5280:145:0;4173:501;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4351:274:0;;;;;;;;;;-1:-1:-1;;;4299:358:0;;;;;;;:::i;2292:159:4:-;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;:::-;2404:5:4::1;:13;2412:5:::0;2404;:13:::1;:::i;:::-;-1:-1:-1::0;2427:7:4::1;:17;2437:7:::0;2427;:17:::1;:::i;1125:111:2:-:0;5374:13:3;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:3;;;;;;;:::i;:::-;1197:32:2::1;965:10:9::0;1197:18:2::1;:32::i;2473:149:10:-:0;2531:13;2563:52;-1:-1:-1;;;;;2575:22:10;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:10;;1984:47;;-1:-1:-1;;;2041:6:10;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:10;;;;;;;;;-1:-1:-1;;;2066:6:10;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:10;;;;;;;;-1:-1:-1;2096:9:10;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:10;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:10;;;;;;;;-1:-1:-1;2207:1:10;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:10;;2228:55;;;;-1:-1:-1;;;2228:55:10;;14776:2:17;2228:55:10;;;14758:21:17;;;14795:18;;;14788:30;14854:34;14834:18;;;14827:62;14906:18;;2228:55:10;14574:356:17;2228:55:10;2307:6;1884:437;-1:-1:-1;;;1884:437:10:o;14:286:17:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:17;;209:43;;199:71;;266:1;263;256:12;497:418;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;780:6;775:2;767:6;763:15;758:2;747:9;743:18;737:50;836:1;831:2;822:6;811:9;807:22;803:31;796:42;906:2;899;895:7;890:2;882:6;878:15;874:29;863:9;859:45;855:54;847:62;;;497:418;;;;:::o;920:173::-;988:20;;-1:-1:-1;;;;;1037:31:17;;1027:42;;1017:70;;1083:1;1080;1073:12;1017:70;920:173;;;:::o;1098:300::-;1166:6;1174;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;:::-;1256:39;1364:2;1349:18;;;;1336:32;;-1:-1:-1;;;1098:300:17:o;1585:374::-;1662:6;1670;1678;1731:2;1719:9;1710:7;1706:23;1702:32;1699:52;;;1747:1;1744;1737:12;1699:52;1770:29;1789:9;1770:29;:::i;:::-;1760:39;;1818:38;1852:2;1841:9;1837:18;1818:38;:::i;:::-;1585:374;;1808:48;;-1:-1:-1;;;1925:2:17;1910:18;;;;1897:32;;1585:374::o;1964:226::-;2023:6;2076:2;2064:9;2055:7;2051:23;2047:32;2044:52;;;2092:1;2089;2082:12;2044:52;-1:-1:-1;2137:23:17;;1964:226;-1:-1:-1;1964:226:17:o;2377:300::-;2445:6;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2567:23;;;-1:-1:-1;2633:38:17;2667:2;2652:18;;2633:38;:::i;:::-;2623:48;;2377:300;;;;;:::o;3102:186::-;3161:6;3214:2;3202:9;3193:7;3189:23;3185:32;3182:52;;;3230:1;3227;3220:12;3182:52;3253:29;3272:9;3253:29;:::i;3698:260::-;3766:6;3774;3827:2;3815:9;3806:7;3802:23;3798:32;3795:52;;;3843:1;3840;3833:12;3795:52;3866:29;3885:9;3866:29;:::i;:::-;3856:39;;3914:38;3948:2;3937:9;3933:18;3914:38;:::i;3963:276::-;4021:6;4074:2;4062:9;4053:7;4049:23;4045:32;4042:52;;;4090:1;4087;4080:12;4042:52;4129:9;4116:23;4179:10;4172:5;4168:22;4161:5;4158:33;4148:61;;4205:1;4202;4195:12;4244:380;4323:1;4319:12;;;;4366;;;4387:61;;4441:4;4433:6;4429:17;4419:27;;4387:61;4494:2;4486:6;4483:14;4463:18;4460:38;4457:161;;4540:10;4535:3;4531:20;4528:1;4521:31;4575:4;4572:1;4565:15;4603:4;4600:1;4593:15;4457:161;;4244:380;;;:::o;5045:127::-;5106:10;5101:3;5097:20;5094:1;5087:31;5137:4;5134:1;5127:15;5161:4;5158:1;5151:15;5177:125;5242:9;;;5263:10;;;5260:36;;;5276:18;;:::i;9426:407::-;9628:2;9610:21;;;9667:2;9647:18;;;9640:30;9706:34;9701:2;9686:18;;9679:62;-1:-1:-1;;;9772:2:17;9757:18;;9750:41;9823:3;9808:19;;9426:407::o;11055:212::-;11097:3;11135:5;11129:12;11179:6;11172:4;11165:5;11161:16;11156:3;11150:36;11241:1;11205:16;;11230:13;;;-1:-1:-1;11205:16:17;;11055:212;-1:-1:-1;11055:212:17:o;11272:595::-;11683:25;11678:3;11671:38;11653:3;11728:39;11763:2;11758:3;11754:12;11746:6;11728:39;:::i;:::-;-1:-1:-1;;;11783:2:17;11776:31;11823:38;11857:2;11853;11849:11;11841:6;11823:38;:::i;:::-;11816:45;11272:595;-1:-1:-1;;;;;11272:595:17:o;11872:127::-;11933:10;11928:3;11924:20;11921:1;11914:31;11964:4;11961:1;11954:15;11988:4;11985:1;11978:15;12130:518;12232:2;12227:3;12224:11;12221:421;;;12268:5;12265:1;12258:16;12312:4;12309:1;12299:18;12382:2;12370:10;12366:19;12363:1;12359:27;12353:4;12349:38;12418:4;12406:10;12403:20;12400:47;;;-1:-1:-1;12441:4:17;12400:47;12496:2;12491:3;12487:12;12484:1;12480:20;12474:4;12470:31;12460:41;;12551:81;12569:2;12562:5;12559:13;12551:81;;;12628:1;12614:16;;12595:1;12584:13;12551:81;;;12555:3;;12130:518;;;:::o;12824:1299::-;12950:3;12944:10;12977:18;12969:6;12966:30;12963:56;;;12999:18;;:::i;:::-;13028:97;13118:6;13078:38;13110:4;13104:11;13078:38;:::i;:::-;13072:4;13028:97;:::i;:::-;13174:4;13205:2;13194:14;;13222:1;13217:649;;;;13910:1;13927:6;13924:89;;;-1:-1:-1;13979:19:17;;;13973:26;13924:89;-1:-1:-1;;12781:1:17;12777:11;;;12773:24;12769:29;12759:40;12805:1;12801:11;;;12756:57;14026:81;;13187:930;;13217:649;12077:1;12070:14;;;12114:4;12101:18;;-1:-1:-1;;13253:20:17;;;13371:222;13385:7;13382:1;13379:14;13371:222;;;13467:19;;;13461:26;13446:42;;13574:4;13559:20;;;;13527:1;13515:14;;;;13401:12;13371:222;;;13375:3;13621:6;13612:7;13609:19;13606:201;;;13682:19;;;13676:26;-1:-1:-1;;13765:1:17;13761:14;;;13777:3;13757:24;13753:37;13749:42;13734:58;13719:74;;13606:201;-1:-1:-1;;;;13853:1:17;13837:14;;;13833:22;13820:36;;-1:-1:-1;12824:1299:17:o;14128:168::-;14201:9;;;14232;;14249:15;;;14243:22;;14229:37;14219:71;;14270:18;;:::i;14301:127::-;14362:10;14357:3;14353:20;14350:1;14343:31;14393:4;14390:1;14383:15;14417:4;14414:1;14407:15;14433:136;14472:3;14500:5;14490:39;;14509:18;;:::i;:::-;-1:-1:-1;;;14545:18:17;;14433:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1319000",
								"executionCost": "1374",
								"totalCost": "1320374"
							},
							"external": {
								"ALLOWED_TRANSFER_FROM_ROLE()": "261",
								"BURN_ROLE()": "261",
								"DEFAULT_ADMIN_ROLE()": "282",
								"MINTER_ROLE()": "305",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24676",
								"balanceOf(address)": "2623",
								"burn(address,uint256)": "infinite",
								"burn(uint256)": "50789",
								"burnFrom(address,uint256)": "77495",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "27044",
								"getRoleAdmin(bytes32)": "2531",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2762",
								"increaseAllowance(address,uint256)": "27056",
								"initialize()": "infinite",
								"listingTimestamp()": "2401",
								"mint(address,uint256)": "53299",
								"name()": "infinite",
								"owner()": "2390",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "29064",
								"revokeRole(bytes32,address)": "infinite",
								"setListingTimestamp(uint32)": "infinite",
								"supportsInterface(bytes4)": "470",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51083",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1421,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068d1b88710002b7679e654ee9c3c4ada6117129ea101befa5817c74403718dc864736f6c634300081e0033",
									".code": [
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "79CC6790"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "E90CDD1C"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "B930908F"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "BD39A2A8"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "D5391393"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "9DC29FAC"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "A457C2D7"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "79CC6790"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "8129FC1C"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "42966C68"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "42966C68"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "4E695CCA"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "39509351"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "40C10F19"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1421,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1403,
											"end": 1580,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1201,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1201,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2682,
											"end": 2866,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 965,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 965,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1358,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1258,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH",
											"source": 16,
											"value": "2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0"
										},
										{
											"begin": 1258,
											"end": 1358,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1358,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3777,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1264,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1264,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 959,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 749,
											"end": 959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 749,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 749,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 749,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3439,
											"end": 3490,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3439,
											"end": 3490,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3293,
											"end": 3496,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2727,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1082,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 1082,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 684,
											"end": 742,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 684,
											"end": 742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 684,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 15,
											"value": "E97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22"
										},
										{
											"begin": 684,
											"end": 742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 684,
											"end": 742,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3675,
											"end": 3685,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3645,
											"end": 3687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3645,
											"end": 3687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 3501,
											"end": 3693,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 616,
											"end": 678,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 616,
											"end": 678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 616,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 654,
											"end": 678,
											"name": "PUSH",
											"source": 15,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 616,
											"end": 678,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 616,
											"end": 678,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 2922,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 2922,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4939,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 1774,
											"end": 1790,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1790,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1774,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1774,
											"end": 1845,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1811,
											"end": 1826,
											"name": "TIMESTAMP",
											"source": 16
										},
										{
											"begin": 1811,
											"end": 1845,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1774,
											"end": 1845,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 1774,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1845,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1845,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1859,
											"end": 1884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1855,
											"end": 2285,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1855,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 2285,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 1929,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 1900,
											"end": 1929,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 2016,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 1932,
											"end": 2016,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 1985,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 2077,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 1932,
											"end": 2077,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2077,
											"name": "tag",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2036,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 2077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 2077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2137,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2137,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH",
											"source": 16,
											"value": "2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0"
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2158,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2197,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 2158,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2157,
											"end": 2197,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "tag",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 2112,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2275,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2091,
											"end": 2275,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AFAE8E97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2275,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2091,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1886,
											"end": 2285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1855,
											"end": 2285,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1376,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 1395,
											"end": 1399,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1403,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1405,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1376,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1376,
											"end": 1412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1376,
											"end": 1412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 1376,
											"end": 1412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1369,
											"end": 1412,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1419,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5404,
											"end": 5408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5393,
											"end": 5418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4834,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4870,
											"end": 4872,
											"name": "PUSH",
											"source": 17,
											"value": "2F"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "PUSH",
											"source": 17,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4882,
											"end": 4944,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4953,
											"end": 4998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5015,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5015,
											"end": 5034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6570,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6379,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6379,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6354,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 965,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 654,
											"end": 678,
											"name": "PUSH",
											"source": 15,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 1058,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1062,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1046,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 1046,
											"end": 1069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 924,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 924,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 951,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 924,
											"end": 951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2176,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2149,
											"end": 2179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1340,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1402,
											"end": 1409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1396,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 959,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 749,
											"end": 959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5491,
											"end": 5512,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5622,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5631,
											"end": 5675,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5692,
											"end": 5711,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5692,
											"end": 5711,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5307,
											"end": 5717,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C76617261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414C5641"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 800,
											"end": 830,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 800,
											"end": 830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 840,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 840,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 840,
											"end": 862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 840,
											"end": 862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 840,
											"end": 862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 654,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 720,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22"
										},
										{
											"begin": 872,
											"end": 902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 872,
											"end": 926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 936,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 936,
											"end": 950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 936,
											"end": 952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 936,
											"end": 952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 936,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 749,
											"end": 959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "PUSH",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2808,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 1082,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 15,
											"value": "E97B137254058BD94F28D2F3EB79E2D34074FFB488D042E3BC958E0A57D2FA22"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 1175,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1187,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1163,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1163,
											"end": 1188,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7107,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6125,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6126,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6164,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 6142,
											"end": 6160,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6142,
											"end": 6160,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6142,
											"end": 6160,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6135,
											"end": 6165,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6201,
											"end": 6235,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6174,
											"end": 6236,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6245,
											"end": 6280,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 6322,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7261,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4231,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5831,
											"end": 5835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5819,
											"end": 5845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4471,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 2922,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 3051,
											"end": 3110,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3094,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3094,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3075,
											"end": 3090,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 16
										},
										{
											"begin": 3075,
											"end": 3110,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3075,
											"end": 3110,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 3051,
											"end": 3110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3047,
											"end": 3164,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3047,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 3047,
											"end": 3164,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F555EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3153,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3047,
											"end": 3164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 3047,
											"end": 3164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3222,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3675,
											"end": 3685,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3645,
											"end": 3687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3645,
											"end": 3687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6"
										},
										{
											"begin": 3178,
											"end": 3222,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3222,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3232,
											"end": 3248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "12D"
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3232,
											"end": 3270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3270,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 3277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6529,
											"end": 6531,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6532,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6571,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6641,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6580,
											"end": 6642,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6651,
											"end": 6687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6327,
											"end": 6729,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2517,
											"end": 2525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2498,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6938,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 6939,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6948,
											"end": 6978,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7014,
											"end": 7048,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6987,
											"end": 7049,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7058,
											"end": 7092,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7109,
											"end": 7128,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7109,
											"end": 7128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 6734,
											"end": 7134,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7343,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7344,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7380,
											"end": 7382,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7353,
											"end": 7383,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7419,
											"end": 7453,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7392,
											"end": 7454,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7463,
											"end": 7495,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7139,
											"end": 7537,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11076,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5714,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 5762,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 3855,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8021,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8132,
											"end": 8139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8425,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8878,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 8982,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8961,
											"end": 8982,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7726,
											"end": 7747,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7783,
											"end": 7785,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7756,
											"end": 7786,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7822,
											"end": 7855,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7795,
											"end": 7856,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7542,
											"end": 7897,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9101,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 9089,
											"end": 9101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9089,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9266,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10392,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9733,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8086,
											"end": 8107,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8216,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8155,
											"end": 8217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8226,
											"end": 8257,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8274,
											"end": 8293,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8274,
											"end": 8293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7902,
											"end": 8299,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9980,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8506,
											"end": 8508,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8518,
											"end": 8548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8584,
											"end": 8618,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8557,
											"end": 8619,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8628,
											"end": 8660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8677,
											"end": 8696,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8677,
											"end": 8696,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8304,
											"end": 8702,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10148,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10253,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 8911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8921,
											"end": 8951,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8987,
											"end": 9021,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8960,
											"end": 9022,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8707,
											"end": 9063,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2750,
											"end": 2874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 11563,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11602,
											"end": 11639,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9270,
											"end": 9272,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "PUSH",
											"source": 17,
											"value": "1D"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9282,
											"end": 9312,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9348,
											"end": 9379,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9328,
											"end": 9346,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9328,
											"end": 9346,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9328,
											"end": 9346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9380,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9397,
											"end": 9415,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9397,
											"end": 9415,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 9068,
											"end": 9421,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11781,
											"end": 11788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11806,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11815,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11765,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11436,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2139,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2264,
											"end": 2269,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2271,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 2241,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 615,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2665,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 2384,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2365,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 2522,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2522,
											"end": 2566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2522,
											"end": 2566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2576,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2587,
											"end": 2598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 2522,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2576,
											"end": 2613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2576,
											"end": 2613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 2522,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1086,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 1086,
											"end": 1112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10040,
											"end": 10042,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10043,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10079,
											"end": 10081,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10082,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10118,
											"end": 10152,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10098,
											"end": 10116,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10091,
											"end": 10153,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10169,
											"end": 10187,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10169,
											"end": 10187,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10169,
											"end": 10187,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10162,
											"end": 10197,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10214,
											"end": 10233,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10214,
											"end": 10233,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 9838,
											"end": 10239,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10448,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10485,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10458,
											"end": 10488,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10524,
											"end": 10558,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10497,
											"end": 10559,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10568,
											"end": 10601,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10637,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10618,
											"end": 10637,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10244,
											"end": 10643,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10889,
											"end": 10891,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10862,
											"end": 10892,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10928,
											"end": 10962,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10901,
											"end": 10963,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10972,
											"end": 11008,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11025,
											"end": 11044,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 11025,
											"end": 11044,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10648,
											"end": 11050,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1580,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8558,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4261,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 4444,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 4554,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 4351,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4299,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 2292,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 2404,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 2434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2427,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 2427,
											"end": 2444,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1197,
											"end": 1229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14776,
											"end": 14778,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14779,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14758,
											"end": 14779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14758,
											"end": 14779,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14795,
											"end": 14813,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14795,
											"end": 14813,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14795,
											"end": 14813,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14788,
											"end": 14818,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14854,
											"end": 14888,
											"name": "PUSH",
											"source": 17,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14827,
											"end": 14889,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14906,
											"end": 14924,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 14906,
											"end": 14924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 14574,
											"end": 14930,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 497,
											"end": 915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 672,
											"end": 685,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 701,
											"end": 719,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 694,
											"end": 728,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 763,
											"end": 778,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 737,
											"end": 787,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 828,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 811,
											"end": 820,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 803,
											"end": 834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 796,
											"end": 838,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 874,
											"end": 903,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 859,
											"end": 904,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 855,
											"end": 909,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 847,
											"end": 909,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 497,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 920,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1206,
											"end": 1213,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1202,
											"end": 1225,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 1266,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1295,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1719,
											"end": 1728,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1706,
											"end": 1729,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 1770,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1760,
											"end": 1799,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1760,
											"end": 1799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1850,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 1818,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1856,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1856,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2073,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2047,
											"end": 2079,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2160,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2137,
											"end": 2160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1964,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 2633,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3288,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 3102,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3211,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3185,
											"end": 3217,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3253,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 3272,
											"end": 3281,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3253,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 3253,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3698,
											"end": 3958,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 3698,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3802,
											"end": 3825,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3798,
											"end": 3830,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3795,
											"end": 3847,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3795,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 3795,
											"end": 3847,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3795,
											"end": 3847,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 3795,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 3866,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3895,
											"name": "tag",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 3866,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3856,
											"end": 3895,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3856,
											"end": 3895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3914,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 3948,
											"end": 3950,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3933,
											"end": 3951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3914,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 3914,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 4239,
											"name": "tag",
											"source": 17,
											"value": "153"
										},
										{
											"begin": 3963,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4071,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4049,
											"end": 4072,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4094,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 4042,
											"end": 4094,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4088,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4094,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 4042,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4138,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4116,
											"end": 4139,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4179,
											"end": 4189,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4190,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4191,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4148,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 4148,
											"end": 4209,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4624,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 4244,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4378,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4378,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4378,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 4387,
											"end": 4448,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4441,
											"end": 4445,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4429,
											"end": 4446,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4446,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4446,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4448,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 4387,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4483,
											"end": 4497,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4460,
											"end": 4498,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4457,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 4457,
											"end": 4618,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4550,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 4535,
											"end": 4538,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 4531,
											"end": 4551,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4552,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4575,
											"end": 4579,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4603,
											"end": 4607,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4608,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4457,
											"end": 4618,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 4457,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4457,
											"end": 4618,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4624,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4624,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4624,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5045,
											"end": 5172,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5045,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5106,
											"end": 5116,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 5142,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5177,
											"end": 5302,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 5177,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5251,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5251,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5251,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5263,
											"end": 5273,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5263,
											"end": 5273,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5263,
											"end": 5273,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5260,
											"end": 5296,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5260,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 5260,
											"end": 5296,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5276,
											"end": 5294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9426,
											"end": 9833,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 9426,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9628,
											"end": 9630,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9610,
											"end": 9631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9610,
											"end": 9631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9610,
											"end": 9631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9667,
											"end": 9669,
											"name": "PUSH",
											"source": 17,
											"value": "2B"
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9640,
											"end": 9670,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9706,
											"end": 9740,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 9701,
											"end": 9703,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9679,
											"end": 9741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9750,
											"end": 9791,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9808,
											"end": 9827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9426,
											"end": 9833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11055,
											"end": 11267,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 11055,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11097,
											"end": 11100,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11140,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11165,
											"end": 11170,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11161,
											"end": 11177,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11150,
											"end": 11186,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 11241,
											"end": 11242,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11221,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11205,
											"end": 11221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11243,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11243,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11243,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11205,
											"end": 11221,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11205,
											"end": 11221,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11055,
											"end": 11267,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11055,
											"end": 11267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11272,
											"end": 11867,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 11272,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11683,
											"end": 11708,
											"name": "PUSH",
											"source": 17,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 11678,
											"end": 11681,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11671,
											"end": 11709,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11653,
											"end": 11656,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11754,
											"end": 11766,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 11728,
											"end": 11767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11767,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11728,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11783,
											"end": 11785,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11776,
											"end": 11807,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11857,
											"end": 11859,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11849,
											"end": 11860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11841,
											"end": 11847,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 11823,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 11861,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11823,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11861,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 11272,
											"end": 11867,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11272,
											"end": 11867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11872,
											"end": 11999,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 11872,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11933,
											"end": 11943,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 11928,
											"end": 11931,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11921,
											"end": 11922,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11945,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11964,
											"end": 11968,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 11961,
											"end": 11962,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11954,
											"end": 11969,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11985,
											"end": 11986,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 11993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12130,
											"end": 12648,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 12130,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12232,
											"end": 12234,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12227,
											"end": 12230,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12224,
											"end": 12235,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12221,
											"end": 12642,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12221,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 12221,
											"end": 12642,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12268,
											"end": 12273,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 12266,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12312,
											"end": 12316,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12309,
											"end": 12310,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 12382,
											"end": 12384,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12370,
											"end": 12380,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12366,
											"end": 12385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12364,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 12359,
											"end": 12386,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12349,
											"end": 12387,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12418,
											"end": 12422,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12406,
											"end": 12416,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12400,
											"end": 12447,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12400,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12400,
											"end": 12447,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12441,
											"end": 12445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12400,
											"end": 12447,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12400,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12496,
											"end": 12498,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12487,
											"end": 12499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12484,
											"end": 12485,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 12474,
											"end": 12478,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12470,
											"end": 12501,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12460,
											"end": 12501,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12460,
											"end": 12501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12562,
											"end": 12567,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12559,
											"end": 12572,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12628,
											"end": 12629,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12630,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12614,
											"end": 12630,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 12595,
											"end": 12596,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12584,
											"end": 12597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12551,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12555,
											"end": 12558,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12555,
											"end": 12558,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12130,
											"end": 12648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12130,
											"end": 12648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12130,
											"end": 12648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12130,
											"end": 12648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12824,
											"end": 14123,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 12824,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 12953,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12944,
											"end": 12954,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12977,
											"end": 12995,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12969,
											"end": 12975,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12966,
											"end": 12996,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12963,
											"end": 13019,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12963,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12963,
											"end": 13019,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 12999,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13028,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13118,
											"end": 13124,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13078,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13110,
											"end": 13114,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13104,
											"end": 13115,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 13078,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 13078,
											"end": 13116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13078,
											"end": 13116,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13078,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13072,
											"end": 13076,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13028,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 13028,
											"end": 13125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13028,
											"end": 13125,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13028,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13174,
											"end": 13178,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13205,
											"end": 13207,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 13194,
											"end": 13208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13194,
											"end": 13208,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13223,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13910,
											"end": 13911,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13927,
											"end": 13933,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13924,
											"end": 14013,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13924,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 13924,
											"end": 14013,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 13999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13924,
											"end": 14013,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 13924,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12781,
											"end": 12782,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12773,
											"end": 12797,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 12759,
											"end": 12799,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12801,
											"end": 12812,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12801,
											"end": 12812,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12801,
											"end": 12812,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12756,
											"end": 12813,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 14026,
											"end": 14107,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14026,
											"end": 14107,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 13187,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 13187,
											"end": 14117,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 13217,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12077,
											"end": 12078,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12114,
											"end": 12118,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12119,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12101,
											"end": 12119,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13382,
											"end": 13383,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13379,
											"end": 13393,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13467,
											"end": 13486,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13467,
											"end": 13486,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13467,
											"end": 13486,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13461,
											"end": 13487,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13488,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 13574,
											"end": 13578,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13559,
											"end": 13579,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 13559,
											"end": 13579,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13559,
											"end": 13579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13559,
											"end": 13579,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13401,
											"end": 13413,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 13371,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13621,
											"end": 13627,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13612,
											"end": 13619,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13609,
											"end": 13628,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 13606,
											"end": 13807,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13606,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 13606,
											"end": 13807,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13701,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13701,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13701,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13676,
											"end": 13702,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 13761,
											"end": 13775,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13761,
											"end": 13775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13761,
											"end": 13775,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "PUSH",
											"source": 17,
											"value": "F8"
										},
										{
											"begin": 13757,
											"end": 13781,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13753,
											"end": 13790,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 13749,
											"end": 13791,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 13734,
											"end": 13792,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13719,
											"end": 13793,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13719,
											"end": 13793,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 13606,
											"end": 13807,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 13606,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13853,
											"end": 13854,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 13837,
											"end": 13851,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13837,
											"end": 13851,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13837,
											"end": 13851,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13833,
											"end": 13855,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 14123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14128,
											"end": 14296,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 14128,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14201,
											"end": 14210,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14201,
											"end": 14210,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14201,
											"end": 14210,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 14232,
											"end": 14241,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14232,
											"end": 14241,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14249,
											"end": 14264,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14249,
											"end": 14264,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14249,
											"end": 14264,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 14243,
											"end": 14265,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14243,
											"end": 14265,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 14229,
											"end": 14266,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 14219,
											"end": 14290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 14219,
											"end": 14290,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 14270,
											"end": 14288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14301,
											"end": 14428,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 14301,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14362,
											"end": 14372,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 14357,
											"end": 14360,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 14353,
											"end": 14373,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 14350,
											"end": 14351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14374,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14393,
											"end": 14397,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 14390,
											"end": 14391,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14383,
											"end": 14398,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14417,
											"end": 14421,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14414,
											"end": 14415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14407,
											"end": 14422,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14433,
											"end": 14569,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 14433,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14472,
											"end": 14475,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14505,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14490,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14490,
											"end": 14529,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 14509,
											"end": 14527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14545,
											"end": 14563,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14433,
											"end": 14569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/AlvaraAvax.sol",
								"contracts/utils/WithSupervisedTransfersAvax.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ALLOWED_TRANSFER_FROM_ROLE()": "4e695cca",
							"BURN_ROLE()": "b930908f",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"listingTimestamp()": "bd39a2a8",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setListingTimestamp(uint32)": "e90cdd1c",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SupervisedTranferFrom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyListed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"ListingTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOWED_TRANSFER_FROM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BURN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"setListingTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SupervisedTranferFrom()\":[{\"details\":\"Used before listing if not allowed transferFrom occurs.\"}],\"TokenAlreadyListed()\":[{\"details\":\"Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ListingTimestampUpdated(uint32)\":{\"params\":{\"newListingTimestamp\":\"the value of the new listing timestamp\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setListingTimestamp(uint32)\":{\"params\":{\"newListingTimestamp\":\"epoch time of when the token is listed on DEX\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ListingTimestampUpdated(uint32)\":{\"notice\":\"Called every time the listing timestamp is updated for easy off-chain tracking.\"}},\"kind\":\"user\",\"methods\":{\"setListingTimestamp(uint32)\":{\"notice\":\"Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/AlvaraAvax.sol\":\"AlvaraAvax\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/tokens/AlvaraAvax.sol\":{\"keccak256\":\"0x2d8db3d72831db9eae4ef7208270420dbe1f8dc18e4f027276a5c69df1abf639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50362c4d39b321e49e0fc9c73f796cbbb23b822fba4b3b0030a62a5416cfe4ab\",\"dweb:/ipfs/Qma4zXg1Xk6kRKXnpnQx88kWc5uHkaYqU8sx5K3eCEXkch\"]},\"contracts/utils/WithSupervisedTransfersAvax.sol\":{\"keccak256\":\"0x0bf203a1861697527dcdea1cfae358d73a012115d3567bf64d9485d28af8f301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0493b172567096a9c692177084e37ee9df322b917220ea2dbaa5ae2962416e\",\"dweb:/ipfs/Qmeg9CuCPiNgmeuvyUG8utsodW9Z7zFLE2qponVSUpsAUy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 731,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 737,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 739,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 743,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1323,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 421,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 541,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1466,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2146,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "201",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "_roles",
								"offset": 0,
								"slot": "251",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "252",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3266,
								"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
								"label": "listingTimestamp",
								"offset": 0,
								"slot": "301",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "contracts/tokens/AlvaraAvax.sol:AlvaraAvax",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ListingTimestampUpdated(uint32)": {
								"notice": "Called every time the listing timestamp is updated for easy off-chain tracking."
							}
						},
						"kind": "user",
						"methods": {
							"setListingTimestamp(uint32)": {
								"notice": "Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/utils/WithSupervisedTransfersAvax.sol": {
				"WithSupervisedTransfersAvax": {
					"abi": [
						{
							"inputs": [],
							"name": "SupervisedTranferFrom",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyListed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "ListingTimestampUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALLOWED_TRANSFER_FROM_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingTimestamp",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "setListingTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SupervisedTranferFrom()": [
								{
									"details": "Used before listing if not allowed transferFrom occurs."
								}
							],
							"TokenAlreadyListed()": [
								{
									"details": "Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again."
								}
							]
						},
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"ListingTimestampUpdated(uint32)": {
								"params": {
									"newListingTimestamp": "the value of the new listing timestamp"
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setListingTimestamp(uint32)": {
								"params": {
									"newListingTimestamp": "epoch time of when the token is listed on DEX"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ALLOWED_TRANSFER_FROM_ROLE()": "4e695cca",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"listingTimestamp()": "bd39a2a8",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setListingTimestamp(uint32)": "e90cdd1c",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SupervisedTranferFrom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyListed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"ListingTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOWED_TRANSFER_FROM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"setListingTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SupervisedTranferFrom()\":[{\"details\":\"Used before listing if not allowed transferFrom occurs.\"}],\"TokenAlreadyListed()\":[{\"details\":\"Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again.\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ListingTimestampUpdated(uint32)\":{\"params\":{\"newListingTimestamp\":\"the value of the new listing timestamp\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setListingTimestamp(uint32)\":{\"params\":{\"newListingTimestamp\":\"epoch time of when the token is listed on DEX\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ListingTimestampUpdated(uint32)\":{\"notice\":\"Called every time the listing timestamp is updated for easy off-chain tracking.\"}},\"kind\":\"user\",\"methods\":{\"setListingTimestamp(uint32)\":{\"notice\":\"Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again.\"}},\"notice\":\"Supervised transfers allow the admin to whitelist addresses who\\u2019re allowed to receive the token using transferFrom method. The admin can also specify listing timestamp. After the token listing, anyone can tranferFrom without any restrictions forever. Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/WithSupervisedTransfersAvax.sol\":\"WithSupervisedTransfersAvax\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/utils/WithSupervisedTransfersAvax.sol\":{\"keccak256\":\"0x0bf203a1861697527dcdea1cfae358d73a012115d3567bf64d9485d28af8f301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0493b172567096a9c692177084e37ee9df322b917220ea2dbaa5ae2962416e\",\"dweb:/ipfs/Qmeg9CuCPiNgmeuvyUG8utsodW9Z7zFLE2qponVSUpsAUy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 549,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 552,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1872,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2146,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3266,
								"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
								"label": "listingTimestamp",
								"offset": 0,
								"slot": "151",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "contracts/utils/WithSupervisedTransfersAvax.sol:WithSupervisedTransfersAvax",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ListingTimestampUpdated(uint32)": {
								"notice": "Called every time the listing timestamp is updated for easy off-chain tracking."
							}
						},
						"kind": "user",
						"methods": {
							"setListingTimestamp(uint32)": {
								"notice": "Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again."
							}
						},
						"notice": "Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method. The admin can also specify listing timestamp. After the token listing, anyone can tranferFrom without any restrictions forever. Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"ContextUpgradeable": [
							1873
						],
						"ERC165Upgradeable": [
							2147
						],
						"IAccessControlUpgradeable": [
							409
						],
						"IERC165Upgradeable": [
							2159
						],
						"Initializable": [
							711
						],
						"MathUpgradeable": [
							3025
						],
						"SignedMathUpgradeable": [
							3130
						],
						"StringsUpgradeable": [
							2102
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 410,
							"src": "133:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1874,
							"src": "175:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 2103,
							"src": "217:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 2148,
							"src": "259:54:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 712,
							"src": "314:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "322:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Initializable",
										"nameLocations": [
											"2086:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "2086:13:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2086:13:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2101:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "2101:18:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2101:18:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2121:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "2121:25:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2121:25:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2148:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2147,
										"src": "2148:17:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2148:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "379:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336,
								2147,
								2159,
								409,
								1873,
								711
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2058:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2223:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2198:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2198:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2248:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2240:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2240:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2179:8:0",
									"nodeType": "StructDefinition",
									"scope": 336,
									"src": "2172:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2307:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2278:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2270:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "RoleData",
												"nameLocations": [
													"2289:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "2289:8:0"
											},
											"referencedDeclaration": 23,
											"src": "2289:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$23_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 31,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2344:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2320:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2320:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "2788:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 36,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 108,
														"src": "2798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "2798:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "2824:1:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "2376:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 42,
									"name": "onlyRole",
									"nameLocation": "2765:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2782:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:14:0"
									},
									"src": "2756:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2896:7:0",
										"statements": []
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 45,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 44,
												"name": "onlyInitializing",
												"nameLocations": [
													"2879:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2879:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2879:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2847:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:0"
									},
									"scope": 336,
									"src": "2838:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2977:7:0",
										"statements": []
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 50,
												"name": "onlyInitializing",
												"nameLocations": [
													"2960:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2960:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2960:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2918:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2948:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:0:0"
									},
									"scope": 336,
									"src": "2909:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2141
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "3141:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 63,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 65,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3178:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 64,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3173:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$409",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3205:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3173:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3158:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "3244:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$336_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "3220:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3158:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 62,
												"id": 74,
												"nodeType": "Return",
												"src": "3151:105:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2989:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3059:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3117:8:0"
									},
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3084:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3077:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 56,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:20:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:6:0"
									},
									"scope": 336,
									"src": "3050:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										376
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "3442:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 87,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "3459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"id": 88,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3459:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "3459:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 92,
													"indexExpression": {
														"id": 91,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3459:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 86,
												"id": 93,
												"nodeType": "Return",
												"src": "3452:36:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3269:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3359:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3418:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:6:0"
									},
									"scope": 336,
									"src": "3350:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3845:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "3866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 103,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "3872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3872:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 147,
														"src": "3855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3855:30:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3501:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:14:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:0:0"
									},
									"scope": 336,
									"src": "3789:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4246:428:0",
										"statements": [
											{
												"condition": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4260:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 117,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4269:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 116,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4261:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "4256:412:0",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "4285:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4393:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 129,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 113,
																								"src": "4475:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 127,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2102,
																								"src": "4444:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2102_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 128,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4463:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2076,
																							"src": "4444:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4444:39:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4509:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 136,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 111,
																										"src": "4593:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 135,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4585:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 134,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4585:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 137,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4585:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4600:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 132,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2102,
																								"src": "4554:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2102_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4573:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2056,
																							"src": "4554:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4554:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 124,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4351:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4355:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4351:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4351:274:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 122,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4323:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4323:320:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 121,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:358:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "4299:358:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3898:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4182:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:31:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4246:0:0"
									},
									"scope": 336,
									"src": "4173:501:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										384
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4938:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 156,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "4955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$23_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4968:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "4955:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 155,
												"id": 160,
												"nodeType": "Return",
												"src": "4948:29:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4680:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4864:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4911:8:0"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:14:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:9:0"
									},
									"scope": 336,
									"src": "4855:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5383:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "5393:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4990:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 172,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 171,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 170,
												"name": "onlyRole",
												"nameLocations": [
													"5354:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5354:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5354:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5289:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5345:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:31:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 336,
									"src": "5280:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5809:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5819:26:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5431:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 191,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5789:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "onlyRole",
												"nameLocations": [
													"5780:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5780:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5780:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5714:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:0"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5725:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:31:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:0"
									},
									"scope": 336,
									"src": "5705:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "6466:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "6495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6495:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6484:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6509:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "6476:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 221,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "6570:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6570:26:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5858:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6398:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6457:8:0"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:31:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:0"
									},
									"scope": 336,
									"src": "6389:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "7366:25:0"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6609:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7297:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7316:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:31:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7356:0:0"
									},
									"scope": 336,
									"src": "7288:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7596:174:0",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7614:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "7606:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 247,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"arguments": [
														{
															"id": 250,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 249,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7634:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7606:46:0"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 253,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "7662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 255,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "7669:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7662:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7675:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "7662:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7687:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7662:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "7662:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 261,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 262,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7734:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "7753:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 260,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7711:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "7706:57:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7404:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7532:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7545:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:0"
									},
									"scope": 336,
									"src": "7523:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "8006:165:0",
										"statements": [
											{
												"condition": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8020:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8029:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 277,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 275,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "8021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "8016:149:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "8045:120:0",
													"statements": [
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 280,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 282,
																			"indexExpression": {
																				"id": 281,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 270,
																				"src": "8066:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8059:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8072:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8059:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8059:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8091:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8059:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "8059:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 290,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "8126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "8141:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8141:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 289,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "8114:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8114:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 295,
															"nodeType": "EmitStatement",
															"src": "8109:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "7776:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7947:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:31:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8006:0:0"
									},
									"scope": 336,
									"src": "7938:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "8411:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 308,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 309,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "8439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 307,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "8425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "8421:149:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8449:121:0",
													"statements": [
														{
															"expression": {
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 311,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8463:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 313,
																			"indexExpression": {
																				"id": 312,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 302,
																				"src": "8470:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8463:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8476:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8463:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 316,
																	"indexExpression": {
																		"id": 315,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8463:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8463:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "8463:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "8531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 322,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 323,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "8546:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8546:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8519:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8519:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "EmitStatement",
															"src": "8514:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "8177:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8351:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8363:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8362:31:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8411:0:0"
									},
									"scope": 336,
									"src": "8342:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "8582:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 335,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8861:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "8841:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 334,
										"length": {
											"hexValue": "3439",
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8849:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8841:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 337,
							"src": "2040:6829:0",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								557
							]
						}
					],
					"src": "108:8762:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 339,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 348,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "571:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "593:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "628:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:1"
									},
									"src": "548:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 357,
									"name": "RoleGranted",
									"nameLocation": "887:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "899:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "921:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "946:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:1"
									},
									"src": "881:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 366,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1296:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1321:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:1"
									},
									"src": "1256:89:1"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 409,
									"src": "1432:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1726:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1763:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:1"
									},
									"scope": 409,
									"src": "1704:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2055:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:1"
									},
									"scope": 409,
									"src": "2022:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2335:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:1"
									},
									"scope": 409,
									"src": "2315:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:1"
									},
									"scope": 409,
									"src": "2866:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 410,
							"src": "209:2721:1",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366
							]
						}
					],
					"src": "94:2837:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1873
						],
						"Initializable": [
							711
						],
						"OwnableUpgradeable": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 1874,
							"src": "127:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 712,
							"src": "169:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 413,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "177:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 416,
										"name": "Initializable",
										"nameLocations": [
											"769:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "769:13:2"
									},
									"id": 417,
									"nodeType": "InheritanceSpecifier",
									"src": "769:13:2"
								},
								{
									"baseName": {
										"id": 418,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"784:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "784:18:2"
									},
									"id": 419,
									"nodeType": "InheritanceSpecifier",
									"src": "784:18:2"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 415,
								"nodeType": "StructuredDocumentation",
								"src": "234:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542,
								1873,
								711
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "747:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "825:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "809:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 427,
									"name": "OwnershipTransferred",
									"nameLocation": "844:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "881:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "865:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "912:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "896:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:57:2"
									},
									"src": "838:84:2"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1076:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 433,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1086:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1086:26:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "928:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 430,
												"name": "onlyInitializing",
												"nameLocations": [
													"1059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "1059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1059:16:2"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1033:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:2"
									},
									"scope": 542,
									"src": "1024:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1187:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 443,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "1216:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 442,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1197:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1197:32:2"
											}
										]
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 440,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 439,
												"name": "onlyInitializing",
												"nameLocations": [
													"1170:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "1170:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1170:16:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1134:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:2:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:2"
									},
									"scope": 542,
									"src": "1125:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1345:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1355:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1355:13:2"
											},
											{
												"id": 454,
												"nodeType": "PlaceholderStatement",
												"src": "1378:1:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1242:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 456,
									"name": "onlyOwner",
									"nameLocation": "1333:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:2"
									},
									"src": "1324:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1517:30:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "1534:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 461,
												"id": 463,
												"nodeType": "Return",
												"src": "1527:13:2"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "1392:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:2:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1508:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:2"
									},
									"scope": 542,
									"src": "1462:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1665:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 470,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "1683:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1683:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 472,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "1694:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1694:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1683:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1675:68:2"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "1553:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1629:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:2"
									},
									"scope": 542,
									"src": "1620:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2139:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2176:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2168:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2168:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 485,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2149:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2149:30:2"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1756:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2129:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 456,
												"src": "2129:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2129:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2094:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:2:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:2"
									},
									"scope": 542,
									"src": "2085:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2405:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "2423:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2443:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2435:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2435:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2435:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2423:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2447:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2415:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2415:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "2517:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 511,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2498:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2498:28:2"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "2192:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyOwner",
												"nameLocations": [
													"2395:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 456,
												"src": "2395:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2395:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2344:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2370:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2362:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:18:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2405:0:2"
									},
									"scope": 542,
									"src": "2335:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2750:124:2",
										"statements": [
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2768:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "2760:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 522,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2760:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"id": 524,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "2779:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2760:25:2"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2795:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2804:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2795:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "2795:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 531,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "2848:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2858:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2827:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2827:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "EmitStatement",
												"src": "2822:45:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2539:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2696:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2723:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2715:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:18:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2750:0:2"
									},
									"scope": 542,
									"src": "2687:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2880:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 541,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3159:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "3139:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 538,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3139:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 540,
										"length": {
											"hexValue": "3439",
											"id": 539,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3147:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3139:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 543,
							"src": "729:2438:2",
							"usedErrors": [],
							"usedEvents": [
								427,
								557
							]
						}
					],
					"src": "102:3066:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1822
						],
						"Initializable": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 712,
							"sourceUnit": 1823,
							"src": "138:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 546,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:3",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Initializable",
							"nameLocation": "2412:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:3",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 549,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "2546:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 548,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:3",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 552,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "2675:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 551,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:3",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 557,
									"name": "Initialized",
									"nameLocation": "2809:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2821:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 554,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:3"
									},
									"src": "2803:33:3"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "3269:483:3",
										"statements": [
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "3279:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 560,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:3",
													"subExpression": {
														"id": 562,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3302:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 566,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "3347:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 567,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "3365:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:3",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 576,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$711",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$711",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 575,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 574,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:3",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 572,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1822,
																						"src": "3388:18:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1822_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 573,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:3",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1510,
																					"src": "3388:29:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 580,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "3436:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 584,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:3"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "3536:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:3"
											},
											{
												"condition": {
													"id": 593,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 561,
													"src": "3566:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "3562:65:3",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "3582:45:3",
													"statements": [
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "3596:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:3"
														}
													]
												}
											},
											{
												"id": 600,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:3"
											},
											{
												"condition": {
													"id": 601,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 561,
													"src": "3651:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "3647:99:3",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "3667:79:3",
													"statements": [
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 602,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "3681:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 606,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "3721:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "EmitStatement",
															"src": "3716:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:3",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 613,
									"name": "initializer",
									"nameLocation": "3255:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:3"
									},
									"src": "3246:506:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "4863:255:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:3",
																"subExpression": {
																	"id": 619,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "4882:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "4899:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "4914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:3"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "4982:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4997:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:3"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5014:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:3"
											},
											{
												"id": 636,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:3"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5055:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 642,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5103:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 641,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "5091:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "EmitStatement",
												"src": "5086:25:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:3",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 646,
									"name": "reinitializer",
									"nameLocation": "4834:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4848:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 615,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:3"
									},
									"src": "4825:293:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "5356:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5374:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:3"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:3"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:3",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 656,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:3"
									},
									"src": "5328:125:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "5988:231:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:3",
															"subExpression": {
																"id": 661,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "6007:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 666,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "6078:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 667,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 690,
												"nodeType": "IfStatement",
												"src": "6074:139:3",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "6111:102:3",
													"statements": [
														{
															"expression": {
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 673,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "6125:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 675,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 674,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 683,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:3",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 682,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:3",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 681,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6174:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "EmitStatement",
															"src": "6169:33:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:3",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:3"
									},
									"scope": 711,
									"src": "5939:280:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "6393:36:3",
										"statements": [
											{
												"expression": {
													"id": 698,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "6410:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 697,
												"id": 699,
												"nodeType": "Return",
												"src": "6403:19:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:3",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6386:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 695,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:3"
									},
									"scope": 711,
									"src": "6329:100:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "6601:37:3",
										"statements": [
											{
												"expression": {
													"id": 707,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "6618:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 706,
												"id": 708,
												"nodeType": "Return",
												"src": "6611:20:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:3",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6595:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:3"
									},
									"scope": 711,
									"src": "6545:93:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "2394:4246:3",
							"usedErrors": [],
							"usedEvents": [
								557
							]
						}
					],
					"src": "113:6528:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1873
						],
						"ERC20Upgradeable": [
							1324
						],
						"IERC20MetadataUpgradeable": [
							1492
						],
						"IERC20Upgradeable": [
							1402
						],
						"Initializable": [
							711
						]
					},
					"id": 1325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1325,
							"sourceUnit": 1403,
							"src": "130:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
							"file": "./extensions/IERC20MetadataUpgradeable.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1325,
							"sourceUnit": 1493,
							"src": "164:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1325,
							"sourceUnit": 1874,
							"src": "217:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1325,
							"sourceUnit": 712,
							"src": "262:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 717,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "270:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 720,
										"name": "Initializable",
										"nameLocations": [
											"1661:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1661:13:4"
									},
									"id": 721,
									"nodeType": "InheritanceSpecifier",
									"src": "1661:13:4"
								},
								{
									"baseName": {
										"id": 722,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1676:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "1676:18:4"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "1676:18:4"
								},
								{
									"baseName": {
										"id": 724,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"1696:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "1696:17:4"
									},
									"id": 725,
									"nodeType": "InheritanceSpecifier",
									"src": "1696:17:4"
								},
								{
									"baseName": {
										"id": 726,
										"name": "IERC20MetadataUpgradeable",
										"nameLocations": [
											"1715:25:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1492,
										"src": "1715:25:4"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "1715:25:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "330:1301:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1324,
							"linearizedBaseContracts": [
								1324,
								1492,
								1402,
								1873,
								711
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1641:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 731,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1783:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "1747:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 730,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 728,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1755:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1747:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 729,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1766:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 737,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1855:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "1799:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 736,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 732,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1807:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1799:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 735,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 733,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1826:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1818:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 734,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1837:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 739,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1889:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "1873:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 738,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1873:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 741,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1923:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "1908:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 740,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1908:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 743,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1949:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "1934:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 742,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1934:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2231:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2264:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 755,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "2271:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 753,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "2241:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2241:38:4"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1963:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 751,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 750,
												"name": "onlyInitializing",
												"nameLocations": [
													"2214:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2214:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2214:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2148:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2175:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2161:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2161:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2196:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2182:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2182:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:44:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:4"
									},
									"scope": 1324,
									"src": "2139:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2394:57:4",
										"statements": [
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 768,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2404:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 769,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "2412:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2404:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "2404:13:4"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2427:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 773,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "2437:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2427:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "2427:17:4"
											}
										]
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 765,
												"name": "onlyInitializing",
												"nameLocations": [
													"2377:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2377:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2377:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2301:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2338:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2324:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 760,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2324:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2359:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2345:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 762,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2345:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:44:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:0:4"
									},
									"scope": 1324,
									"src": "2292:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1479
									],
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "2585:29:4",
										"statements": [
											{
												"expression": {
													"id": 784,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "2602:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 783,
												"id": 785,
												"nodeType": "Return",
												"src": "2595:12:4"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "2457:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2525:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 780,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2552:8:4"
									},
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2529:2:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2570:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2570:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:15:4"
									},
									"scope": 1324,
									"src": "2516:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "2798:31:4",
										"statements": [
											{
												"expression": {
													"id": 794,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 743,
													"src": "2815:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 793,
												"id": 795,
												"nodeType": "Return",
												"src": "2808:14:4"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "2620:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2736:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2765:8:4"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2742:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2783:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:15:4"
									},
									"scope": 1324,
									"src": "2727:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1491
									],
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "3527:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3544:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 803,
												"id": 805,
												"nodeType": "Return",
												"src": "3537:9:4"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "2835:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3471:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 800,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3502:8:4"
									},
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:2:4"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3520:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 801,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3520:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:7:4"
									},
									"scope": 1324,
									"src": "3462:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1351
									],
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "3683:36:4",
										"statements": [
											{
												"expression": {
													"id": 814,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "3700:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 813,
												"id": 815,
												"nodeType": "Return",
												"src": "3693:19:4"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "3559:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3622:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 810,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3656:8:4"
									},
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:2:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3674:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3673:9:4"
									},
									"scope": 1324,
									"src": "3613:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "3860:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 826,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "3877:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3877:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 825,
												"id": 829,
												"nodeType": "Return",
												"src": "3870:25:4"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "3725:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3786:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 822,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3833:8:4"
									},
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3804:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3796:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3796:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:17:4"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3851:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:4"
									},
									"scope": 1324,
									"src": "3777:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1369
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "4183:104:4",
										"statements": [
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4201:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "4193:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 842,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4193:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 844,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "4209:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4193:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4241:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4248:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "4252:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 847,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4231:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4231:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "4231:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4276:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 841,
												"id": 854,
												"nodeType": "Return",
												"src": "4269:11:4"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "3908:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4107:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 838,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4159:8:4"
									},
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4124:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4116:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4136:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4128:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:28:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4177:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4177:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4176:6:4"
									},
									"scope": 1324,
									"src": "4098:189:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1379
									],
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "4443:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 867,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4460:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4472:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4460:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 871,
													"indexExpression": {
														"id": 870,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "4479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4460:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 866,
												"id": 872,
												"nodeType": "Return",
												"src": "4453:34:4"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "4293:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4354:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4416:8:4"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4372:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4364:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4387:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4379:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4363:32:4"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4434:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:9:4"
									},
									"scope": 1324,
									"src": "4345:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1389
									],
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "4891:108:4",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4909:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "4901:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 885,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4901:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 887,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "4917:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4901:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4948:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "4955:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4964:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "4939:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "4939:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4988:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 884,
												"id": 897,
												"nodeType": "Return",
												"src": "4981:11:4"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "4500:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4811:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 881,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4867:8:4"
									},
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4827:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4819:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4844:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4836:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4818:33:4"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4885:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:4"
									},
									"scope": 1324,
									"src": "4802:197:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1401
									],
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "5664:153:4",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5682:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "5674:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 912,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5674:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 914,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "5692:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5692:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5674:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 918,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5730:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5736:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5745:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "5714:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5714:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "5714:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5772:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "5778:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5782:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "5762:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "5762:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5806:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 911,
												"id": 930,
												"nodeType": "Return",
												"src": "5799:11:4"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "5005:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5570:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 908,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5640:8:4"
									},
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5591:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5583:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5605:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5597:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5617:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5609:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:42:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5658:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5658:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5657:6:4"
									},
									"scope": 1324,
									"src": "5561:256:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "6306:140:4",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6324:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "6316:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 942,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6316:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 944,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "6332:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6332:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6316:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "6363:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "6370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "6389:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 952,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 935,
																		"src": "6396:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 950,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "6379:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6379:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 954,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "6407:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6379:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "6354:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6354:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "6354:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6435:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 941,
												"id": 959,
												"nodeType": "Return",
												"src": "6428:11:4"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "5823:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6221:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6247:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "6239:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6264:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "6256:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6238:37:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "6300:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6300:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:6:4"
									},
									"scope": 1324,
									"src": "6212:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "7032:328:4",
										"statements": [
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7050:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1001,
														"src": "7042:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 971,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7042:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 973,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "7058:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7058:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7042:28:4"
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7088:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1001,
														"src": "7080:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7080:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"arguments": [
														{
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "7117:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "7124:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 978,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "7107:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7107:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7080:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "7150:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 985,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "7170:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7150:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7187:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7142:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "7142:85:4"
											},
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "7237:95:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 991,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "7270:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 992,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "7277:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 993,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "7286:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 994,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "7305:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7286:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 990,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "7261:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7261:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 997,
														"nodeType": "ExpressionStatement",
														"src": "7261:60:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7349:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 970,
												"id": 1000,
												"nodeType": "Return",
												"src": "7342:11:4"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "6452:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6942:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6960:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6985:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6977:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6959:42:4"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "7026:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7026:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7025:6:4"
									},
									"scope": 1324,
									"src": "6933:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "7892:710:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1013,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "7910:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7926:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7918:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1014,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7918:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7918:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7910:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7930:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7902:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7902:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "7902:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "7988:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8002:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7994:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1024,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7994:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7994:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7988:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8006:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7980:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7980:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "7980:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1033,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8076:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "8082:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "8086:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1032,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "8055:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "8055:38:4"
											},
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8112:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1078,
														"src": "8104:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1038,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"baseExpression": {
														"id": 1040,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "8126:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1042,
													"indexExpression": {
														"id": 1041,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8136:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8126:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8104:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "8159:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1046,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "8174:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8159:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8182:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8151:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8151:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "8151:72:4"
											},
											{
												"id": 1065,
												"nodeType": "UncheckedBlock",
												"src": "8233:273:4",
												"statements": [
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1051,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "8257:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1053,
																"indexExpression": {
																	"id": 1052,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "8267:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8257:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "8275:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1055,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "8289:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8275:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8257:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "8257:38:4"
													},
													{
														"expression": {
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1059,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "8472:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1061,
																"indexExpression": {
																	"id": 1060,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "8482:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8472:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1062,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "8489:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8472:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1064,
														"nodeType": "ExpressionStatement",
														"src": "8472:23:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1067,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8530:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "8536:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "8540:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "8521:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8521:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "EmitStatement",
												"src": "8516:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1073,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "8584:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "8588:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1072,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "8558:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8558:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "8558:37:4"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "7366:443:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7823:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7841:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "7833:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7833:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7855:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "7847:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7867:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "7859:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:42:4"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7892:0:4"
									},
									"scope": 1324,
									"src": "7814:788:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "8943:470:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "8961:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8980:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8972:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1089,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8972:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8972:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8961:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8984:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8953:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8953:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "8953:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9058:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9050:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1098,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9050:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9050:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9062:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9071:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "9029:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "9029:49:4"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "9089:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1107,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "9105:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9089:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "9089:22:4"
											},
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "9121:175:4",
												"statements": [
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1110,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "9257:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1112,
																"indexExpression": {
																	"id": 1111,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "9267:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9257:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1113,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "9279:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9257:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "9257:28:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9327:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9319:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9319:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9319:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9331:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9340:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "9310:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9310:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "EmitStatement",
												"src": "9305:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9386:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9378:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9378:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9378:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9390:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9399:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "9358:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9358:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "9358:48:4"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "8608:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8887:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8901:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "8893:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8918:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "8910:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8910:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8892:33:4"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8943:0:4"
									},
									"scope": 1324,
									"src": "8878:535:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "9798:594:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "9816:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9835:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9827:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9827:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9827:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9816:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9839:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9808:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "9808:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "9907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9924:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9916:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1156,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9916:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9916:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "9928:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "9886:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9886:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "9886:49:4"
											},
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9954:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "9946:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9946:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"baseExpression": {
														"id": 1165,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "9971:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1167,
													"indexExpression": {
														"id": 1166,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "9981:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9971:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9946:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "10007:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "10025:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10007:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10033:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9999:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9999:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "9999:71:4"
											},
											{
												"id": 1188,
												"nodeType": "UncheckedBlock",
												"src": "10080:194:4",
												"statements": [
													{
														"expression": {
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1176,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "10104:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1178,
																"indexExpression": {
																	"id": 1177,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "10114:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10104:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1179,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "10125:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1180,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "10142:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10125:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10104:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1183,
														"nodeType": "ExpressionStatement",
														"src": "10104:44:4"
													},
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1184,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "10241:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1185,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "10257:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10241:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "10241:22:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "10298:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10307:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "10319:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "10289:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10289:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "10284:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "10357:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10374:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10366:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1200,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10366:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10366:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1204,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "10378:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "10337:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10337:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "10337:48:4"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "9419:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "9748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9773:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "9765:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9747:33:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9798:0:4"
									},
									"scope": 1324,
									"src": "9733:659:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "10898:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1219,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "10916:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10933:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10925:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10925:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10925:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10916:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10937:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10908:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10908:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "10908:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "10994:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11013:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11005:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11005:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11005:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10994:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11017:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10986:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10986:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "10986:68:4"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1238,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "11065:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1241,
															"indexExpression": {
																"id": 1239,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "11077:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11065:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1242,
														"indexExpression": {
															"id": 1240,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "11084:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11065:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1243,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "11095:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11065:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "11065:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1247,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "11125:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "11132:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "11141:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1246,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "11116:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11116:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "EmitStatement",
												"src": "11111:37:4"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "10398:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10824:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10841:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "10833:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10833:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10856:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "10848:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10873:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "10865:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10865:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10832:48:4"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10898:0:4"
									},
									"scope": 1324,
									"src": "10815:340:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "11526:321:4",
										"statements": [
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11544:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "11536:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11536:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"arguments": [
														{
															"id": 1266,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "11573:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "11580:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "11563:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11563:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11536:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "11602:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11627:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11627:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1271,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11622:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11622:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11636:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11622:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11602:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1294,
												"nodeType": "IfStatement",
												"src": "11598:243:4",
												"trueBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "11641:200:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1278,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "11663:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1279,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "11683:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11663:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11691:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1277,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11655:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "11655:68:4"
														},
														{
															"id": 1292,
															"nodeType": "UncheckedBlock",
															"src": "11737:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1285,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "11774:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1286,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1258,
																				"src": "11781:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1287,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "11790:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1288,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1260,
																					"src": "11809:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11790:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1284,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "11765:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11765:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "11765:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "11161:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11445:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11469:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "11461:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11461:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11484:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "11476:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11501:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "11493:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11460:48:4"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11526:0:4"
									},
									"scope": 1324,
									"src": "11436:411:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "12520:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "11853:573:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12440:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12469:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "12461:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12461:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12483:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "12475:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12495:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "12487:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12460:42:4"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12520:0:4"
									},
									"scope": 1324,
									"src": "12431:91:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "13198:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "12528:577:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13119:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13147:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "13139:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13161:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "13153:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13173:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "13165:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13138:42:4"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:4"
									},
									"scope": 1324,
									"src": "13110:90:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "13206:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1323,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "13485:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1324,
									"src": "13465:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 1320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13465:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1322,
										"length": {
											"hexValue": "3435",
											"id": 1321,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13473:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "13465:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1325,
							"src": "1632:11861:4",
							"usedErrors": [],
							"usedEvents": [
								557,
								1336,
								1345
							]
						}
					],
					"src": "105:13389:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1327,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1336,
									"name": "Transfer",
									"nameLocation": "405:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "414:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "456:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:5"
									},
									"src": "399:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1345,
									"name": "Approval",
									"nameLocation": "636:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "645:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "668:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:5"
									},
									"src": "630:78:5"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:5"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1402,
									"src": "785:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "942:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:5"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:5"
									},
									"scope": 1402,
									"src": "923:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:5"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1402,
									"src": "1204:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1402,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2302:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2319:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2353:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:5"
									},
									"scope": 1402,
									"src": "2285:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2679:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2693:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2705:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2739:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:5"
									},
									"scope": 1402,
									"src": "2657:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1403,
							"src": "202:2545:5",
							"usedErrors": [],
							"usedEvents": [
								1336,
								1345
							]
						}
					],
					"src": "106:2642:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1873
						],
						"ERC20BurnableUpgradeable": [
							1467
						],
						"ERC20Upgradeable": [
							1324
						],
						"IERC20MetadataUpgradeable": [
							1492
						],
						"IERC20Upgradeable": [
							1402
						],
						"Initializable": [
							711
						]
					},
					"id": 1468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 1405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 1325,
							"src": "149:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../../utils/ContextUpgradeable.sol",
							"id": 1406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 1874,
							"src": "183:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 712,
							"src": "231:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1407,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "239:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1410,
										"name": "Initializable",
										"nameLocations": [
											"557:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "557:13:6"
									},
									"id": 1411,
									"nodeType": "InheritanceSpecifier",
									"src": "557:13:6"
								},
								{
									"baseName": {
										"id": 1412,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"572:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "572:18:6"
									},
									"id": 1413,
									"nodeType": "InheritanceSpecifier",
									"src": "572:18:6"
								},
								{
									"baseName": {
										"id": 1414,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"592:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1324,
										"src": "592:16:6"
									},
									"id": 1415,
									"nodeType": "InheritanceSpecifier",
									"src": "592:16:6"
								}
							],
							"canonicalName": "ERC20BurnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "302:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1467,
							"linearizedBaseContracts": [
								1467,
								1324,
								1492,
								1402,
								1873,
								711
							],
							"name": "ERC20BurnableUpgradeable",
							"nameLocation": "529:24:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "673:7:6",
										"statements": []
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyInitializing",
												"nameLocations": [
													"656:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "656:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "656:16:6"
										}
									],
									"name": "__ERC20Burnable_init",
									"nameLocation": "624:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:2:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:0:6"
									},
									"scope": 1467,
									"src": "615:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "754:7:6",
										"statements": []
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "onlyInitializing",
												"nameLocations": [
													"737:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "737:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "737:16:6"
										}
									],
									"name": "__ERC20Burnable_init_unchained",
									"nameLocation": "695:30:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:6"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:6"
									},
									"scope": 1467,
									"src": "686:75:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "914:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1434,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "930:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "930:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1436,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "944:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1433,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "924:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "924:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "924:27:6"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "766:98:6",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "878:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "891:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "883:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:16:6"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:6"
									},
									"scope": 1467,
									"src": "869:89:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "1330:95:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1449,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "1356:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1450,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "1365:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1365:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "1379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1340:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1340:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "1402:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "1411:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1455,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "1396:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "1396:22:6"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "964:295:6",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1273:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1290:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1282:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1299:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:33:6"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:0:6"
									},
									"scope": 1467,
									"src": "1264:161:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1431:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1466,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1710:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "1690:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1463,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1690:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1465,
										"length": {
											"hexValue": "3530",
											"id": 1464,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1698:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1690:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1468,
							"src": "511:1207:6",
							"usedErrors": [],
							"usedEvents": [
								557,
								1336,
								1345
							]
						}
					],
					"src": "124:1595:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							1492
						],
						"IERC20Upgradeable": [
							1402
						]
					},
					"id": 1493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1403,
							"src": "135:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"327:17:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "327:17:7"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "327:17:7"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "171:116:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1492,
							"linearizedBaseContracts": [
								1492,
								1402
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "298:25:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "351:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "419:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "449:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:15:7"
									},
									"scope": 1492,
									"src": "410:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "470:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "540:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "572:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:15:7"
									},
									"scope": 1492,
									"src": "531:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "593:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "672:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:7"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "706:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1488,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "706:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:7:7"
									},
									"scope": 1492,
									"src": "663:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1493,
							"src": "288:427:7",
							"usedErrors": [],
							"usedEvents": [
								1336,
								1345
							]
						}
					],
					"src": "110:606:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1822
						]
					},
					"id": 1823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "1489:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1503,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1713:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1502,
												"id": 1508,
												"nodeType": "Return",
												"src": "1706:30:8"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1483:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:8"
									},
									"scope": 1822,
									"src": "1423:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "2729:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1521,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1822",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1822",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1524,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:8"
											},
											{
												"assignments": [
													1530,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1543,
														"src": "2824:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1537,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1531,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "2842:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1533,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2864:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "2893:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:8"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2677:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2704:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:8"
									},
									"scope": 1822,
									"src": "2658:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "3801:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "3840:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "3848:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1554,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1602,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "3818:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1553,
												"id": 1560,
												"nodeType": "Return",
												"src": "3811:79:8"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "3734:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "3750:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:8"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "3787:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:8"
									},
									"scope": 1822,
									"src": "3712:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "4266:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1575,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "4305:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "4313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1578,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4322:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1574,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1602,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "4283:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1580,
												"nodeType": "Return",
												"src": "4276:59:8"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4150:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4174:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4201:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1568,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4252:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:8"
									},
									"scope": 1822,
									"src": "4119:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "4817:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1595,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "4856:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "4864:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1597,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "4870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1594,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1602,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "4834:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1600,
												"nodeType": "Return",
												"src": "4827:94:8"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "4735:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "4751:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "4770:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:8"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "4803:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:8"
									},
									"scope": 1822,
									"src": "4704:224:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "5355:267:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1619,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1822",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1822",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1617,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1622,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "5398:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:8"
											},
											{
												"assignments": [
													1628,
													1630
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "5457:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1627,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "5471:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1629,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "5524:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1631,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "5498:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1633,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "5517:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "5573:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "5581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1641,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "5590:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1642,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "5602:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "5546:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1615,
												"id": 1644,
												"nodeType": "Return",
												"src": "5539:76:8"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "5216:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "5240:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "5267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "5290:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:8"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "5341:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:8"
									},
									"scope": 1822,
									"src": "5176:446:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "5899:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "5935:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "5943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1656,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1663,
															1692
														],
														"referencedDeclaration": 1692,
														"src": "5916:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1661,
												"nodeType": "Return",
												"src": "5909:80:8"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5827:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5843:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:8"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5885:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:8"
									},
									"scope": 1822,
									"src": "5799:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "6338:168:8",
										"statements": [
											{
												"assignments": [
													1676,
													1678
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "6349:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1675,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1678,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "6363:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1677,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"arguments": [
														{
															"id": 1681,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "6408:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1679,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "6390:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "6457:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1686,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "6465:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1687,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "6474:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1688,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "6486:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1684,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "6430:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1690,
												"nodeType": "Return",
												"src": "6423:76:8"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6217:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6241:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6268:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:8"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6324:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:8"
									},
									"scope": 1822,
									"src": "6180:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "6782:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1703,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "6820:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "6828:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1702,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "6799:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1707,
												"nodeType": "Return",
												"src": "6792:84:8"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "6715:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "6731:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:8"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "6768:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:8"
									},
									"scope": 1822,
									"src": "6685:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "7224:170:8",
										"statements": [
											{
												"assignments": [
													1722,
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "7235:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1721,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "7249:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1723,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"arguments": [
														{
															"id": 1727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "7276:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "7345:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1732,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "7353:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1733,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "7362:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1734,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "7374:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1730,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "7318:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1736,
												"nodeType": "Return",
												"src": "7311:76:8"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7108:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7132:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7159:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7210:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:8"
									},
									"scope": 1822,
									"src": "7069:325:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "7876:434:8",
										"statements": [
											{
												"condition": {
													"id": 1752,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1743,
													"src": "7890:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1774,
													"nodeType": "Block",
													"src": "8246:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1770,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "8268:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1771,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "8280:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1769,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "8260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:8"
														}
													]
												},
												"id": 1775,
												"nodeType": "IfStatement",
												"src": "7886:418:8",
												"trueBody": {
													"id": 1768,
													"nodeType": "Block",
													"src": "7899:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1753,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "7917:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1765,
															"nodeType": "IfStatement",
															"src": "7913:286:8",
															"trueBody": {
																"id": 1764,
																"nodeType": "Block",
																"src": "7941:258:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1759,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1741,
																							"src": "8143:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1758,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1510,
																						"src": "8132:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1757,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1763,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1766,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "8219:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1751,
															"id": 1767,
															"nodeType": "Return",
															"src": "8212:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "7727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "7751:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "7773:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "7806:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:8"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "7862:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:8"
									},
									"scope": 1822,
									"src": "7682:628:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "8691:135:8",
										"statements": [
											{
												"condition": {
													"id": 1789,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1780,
													"src": "8705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1798,
													"nodeType": "Block",
													"src": "8762:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1794,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "8784:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1795,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1793,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "8776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1797,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:8"
														}
													]
												},
												"id": 1799,
												"nodeType": "IfStatement",
												"src": "8701:119:8",
												"trueBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "8714:42:8",
													"statements": [
														{
															"expression": {
																"id": 1790,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "8735:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1788,
															"id": 1791,
															"nodeType": "Return",
															"src": "8728:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8566:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8588:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8621:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:8"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "8677:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:8"
									},
									"scope": 1822,
									"src": "8531:295:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "8915:457:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1808,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "8991:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "9321:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1815,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "9342:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1814,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:8"
														}
													]
												},
												"id": 1819,
												"nodeType": "IfStatement",
												"src": "8987:379:8",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "9014:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:8",
																"nodeType": "YulBlock",
																"src": "9172:133:8",
																"statements": [
																	{
																		"nativeSrc": "9190:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:8"
																			},
																			"nativeSrc": "9213:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:8",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:8",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:8"
																					},
																					"nativeSrc": "9254:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:8"
																			},
																			"nativeSrc": "9247:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:8"
																		},
																		"nativeSrc": "9247:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1803,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1803,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:8",
																	"valueSize": 1
																}
															],
															"id": 1812,
															"nodeType": "InlineAssembly",
															"src": "9163:142:8"
														}
													]
												}
											}
										]
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "8849:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "8874:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:8"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:8"
									},
									"scope": 1822,
									"src": "8832:540:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1823,
							"src": "194:9180:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1873
						],
						"Initializable": [
							711
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1874,
							"sourceUnit": 712,
							"src": "125:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1825,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "133:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1828,
										"name": "Initializable",
										"nameLocations": [
											"727:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "727:13:9"
									},
									"id": 1829,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:9"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1827,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1873,
							"linearizedBaseContracts": [
								1873,
								711
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "799:7:9",
										"statements": []
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1831,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "782:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:9"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:9"
									},
									"scope": 1873,
									"src": "747:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "874:7:9",
										"statements": []
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1837,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "857:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:9"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:9"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:9"
									},
									"scope": 1873,
									"src": "812:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "948:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1846,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1848,
												"nodeType": "Return",
												"src": "958:17:9"
											}
										]
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:9"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "939:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:9"
									},
									"scope": 1873,
									"src": "886:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "1055:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1855,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1857,
												"nodeType": "Return",
												"src": "1065:15:9"
											}
										]
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:9"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1039:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:9"
									},
									"scope": 1873,
									"src": "988:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "1165:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1863,
												"id": 1865,
												"nodeType": "Return",
												"src": "1175:8:9"
											}
										]
									},
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:9"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "1156:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:9"
									},
									"scope": 1873,
									"src": "1093:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:9",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1872,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "1455:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1869,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1871,
										"length": {
											"hexValue": "3530",
											"id": 1870,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1874,
							"src": "687:796:9",
							"usedErrors": [],
							"usedEvents": [
								557
							]
						}
					],
					"src": "101:1383:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3025
						],
						"SignedMathUpgradeable": [
							3130
						],
						"StringsUpgradeable": [
							2102
						]
					},
					"id": 2103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2103,
							"sourceUnit": 3026,
							"src": "126:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 1877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2103,
							"sourceUnit": 3131,
							"src": "163:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2102,
							"linearizedBaseContracts": [
								2102
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1881,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2102,
									"src": "275:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1879,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1880,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1884,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2102,
									"src": "335:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1882,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "551:636:10",
										"statements": [
											{
												"id": 1930,
												"nodeType": "UncheckedBlock",
												"src": "561:620:10",
												"statements": [
													{
														"assignments": [
															1893
														],
														"declarations": [
															{
																"constant": false,
																"id": 1893,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1930,
																"src": "585:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1892,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1900,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1896,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "624:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1894,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3025,
																		"src": "602:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3025_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2862,
																	"src": "602:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:10"
													},
													{
														"assignments": [
															1902
														],
														"declarations": [
															{
																"constant": false,
																"id": 1902,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1930,
																"src": "648:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1901,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1907,
														"initialValue": {
															"arguments": [
																{
																	"id": 1905,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "682:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1903,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:10"
													},
													{
														"assignments": [
															1909
														],
														"declarations": [
															{
																"constant": false,
																"id": 1909,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1930,
																"src": "703:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1910,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:10"
													},
													{
														"AST": {
															"nativeSrc": "784:67:10",
															"nodeType": "YulBlock",
															"src": "784:67:10",
															"statements": [
																{
																	"nativeSrc": "802:35:10",
																	"nodeType": "YulAssignment",
																	"src": "802:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "813:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "825:2:10",
																						"nodeType": "YulLiteral",
																						"src": "825:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "829:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "821:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:10"
																				},
																				"nativeSrc": "821:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "809:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:10"
																		},
																		"nativeSrc": "809:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "802:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1893,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1909,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:10",
																"valueSize": 1
															}
														],
														"id": 1911,
														"nodeType": "InlineAssembly",
														"src": "775:76:10"
													},
													{
														"body": {
															"id": 1926,
															"nodeType": "Block",
															"src": "877:267:10",
															"statements": [
																{
																	"expression": {
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:10",
																		"subExpression": {
																			"id": 1913,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "895:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1915,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "978:84:10",
																		"nodeType": "YulBlock",
																		"src": "978:84:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1008:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1022:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1029:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1018:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:10"
																									},
																									"nativeSrc": "1018:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "1034:8:10",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1013:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:10"
																							},
																							"nativeSrc": "1013:30:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1000:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:10"
																					},
																					"nativeSrc": "1000:44:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:10"
																				},
																				"nativeSrc": "1000:44:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "prague",
																	"externalReferences": [
																		{
																			"declaration": 1881,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1909,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1887,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1916,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:10"
																},
																{
																	"expression": {
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1887,
																			"src": "1079:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1921,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1887,
																			"src": "1112:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1925,
																	"nodeType": "IfStatement",
																	"src": "1108:21:10",
																	"trueBody": {
																		"id": 1924,
																		"nodeType": "Break",
																		"src": "1124:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1927,
														"nodeType": "WhileStatement",
														"src": "864:280:10"
													},
													{
														"expression": {
															"id": 1928,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "1164:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1891,
														"id": 1929,
														"nodeType": "Return",
														"src": "1157:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "498:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:10"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "536:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:10"
									},
									"scope": 2102,
									"src": "480:707:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "1357:114:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1398:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:10",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1935,
																					"src": "1455:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1951,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "1429:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$3130_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 1952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:10",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3129,
																				"src": "1429:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1950,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1932,
																			1960
																		],
																		"referencedDeclaration": 1932,
																		"src": "1420:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1942,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1940,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1958,
												"nodeType": "Return",
												"src": "1367:97:10"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "1305:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1934,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:10"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "1342:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:10"
									},
									"scope": 2102,
									"src": "1287:184:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "1650:111:10",
										"statements": [
											{
												"id": 1978,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "1703:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1972,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1963,
																				"src": "1733:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1970,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3025,
																				"src": "1710:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3025_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2985,
																			"src": "1710:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1968,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1980,
																	2056,
																	2076
																],
																"referencedDeclaration": 2056,
																"src": "1691:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1967,
														"id": 1977,
														"nodeType": "Return",
														"src": "1684:60:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1597:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:10"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1635:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:10"
									},
									"scope": 2102,
									"src": "1576:185:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "1974:347:10",
										"statements": [
											{
												"assignments": [
													1991
												],
												"declarations": [
													{
														"constant": false,
														"id": 1991,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "1984:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1990,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2000,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1995,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2020:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1992,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:10"
											},
											{
												"expression": {
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2001,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "2041:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2003,
														"indexExpression": {
															"hexValue": "30",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:10"
											},
											{
												"expression": {
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2007,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "2066:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2009,
														"indexExpression": {
															"hexValue": "31",
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:10"
											},
											{
												"body": {
													"id": 2041,
													"nodeType": "Block",
													"src": "2136:83:10",
													"statements": [
														{
															"expression": {
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2027,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "2150:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2029,
																	"indexExpression": {
																		"id": 2028,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "2157:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2030,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "2162:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2034,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1983,
																			"src": "2171:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2036,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:10"
														},
														{
															"expression": {
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1983,
																	"src": "2197:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2040,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2021,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "2124:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2042,
												"initializationExpression": {
													"assignments": [
														2014
													],
													"declarations": [
														{
															"constant": false,
															"id": 2014,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2042,
															"src": "2096:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2013,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2020,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2016,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "2112:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:10",
														"subExpression": {
															"id": 2024,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "2133:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2026,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2044,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "2236:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2052,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "2307:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2050,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1989,
												"id": 2054,
												"nodeType": "Return",
												"src": "2293:21:10"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "1905:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "1920:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "1959:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:10"
									},
									"scope": 2102,
									"src": "1884:437:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "2546:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2069,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2059,
																			"src": "2591:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2067,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2065,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2072,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "2599:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2064,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1980,
															2056,
															2076
														],
														"referencedDeclaration": 2056,
														"src": "2563:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2074,
												"nodeType": "Return",
												"src": "2556:59:10"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2494:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:10"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2531:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:10"
									},
									"scope": 2102,
									"src": "2473:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "2777:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2089,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "2810:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2087,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2086,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "2833:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2093,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2092,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2085,
												"id": 2099,
												"nodeType": "Return",
												"src": "2787:49:10"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2714:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2078,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2731:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2080,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:10"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 2102,
									"src": "2699:144:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2103,
							"src": "242:2603:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2745:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							2147
						],
						"IERC165Upgradeable": [
							2159
						],
						"Initializable": [
							711
						]
					},
					"id": 2148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 2105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2148,
							"sourceUnit": 2160,
							"src": "124:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 2107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2148,
							"sourceUnit": 712,
							"src": "159:66:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2106,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "167:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2109,
										"name": "Initializable",
										"nameLocations": [
											"843:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "843:13:11"
									},
									"id": 2110,
									"nodeType": "InheritanceSpecifier",
									"src": "843:13:11"
								},
								{
									"baseName": {
										"id": 2111,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"858:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2159,
										"src": "858:18:11"
									},
									"id": 2112,
									"nodeType": "InheritanceSpecifier",
									"src": "858:18:11"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2108,
								"nodeType": "StructuredDocumentation",
								"src": "227:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2147,
							"linearizedBaseContracts": [
								2147,
								2159,
								711
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "822:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "934:7:11",
										"statements": []
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2114,
												"name": "onlyInitializing",
												"nameLocations": [
													"917:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "917:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:16:11"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "892:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:11"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:11"
									},
									"scope": 2147,
									"src": "883:58:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "1008:7:11",
										"statements": []
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2120,
												"name": "onlyInitializing",
												"nameLocations": [
													"991:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "991:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:16:11"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "956:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:11"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:11"
									},
									"scope": 2147,
									"src": "947:68:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2158
									],
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "1172:75:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2133,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "1189:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2135,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2159,
																	"src": "1209:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2159_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2159_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 2134,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1204:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1204:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2159",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1229:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1204:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1189:51:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2132,
												"id": 2139,
												"nodeType": "Return",
												"src": "1182:58:11"
											}
										]
									},
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "1020:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1090:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1148:8:11"
									},
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1115:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1108:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2126,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:20:11"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1166:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:6:11"
									},
									"scope": 2147,
									"src": "1081:166:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1253:254:11",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2146,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1532:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2147,
									"src": "1512:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2143,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2145,
										"length": {
											"hexValue": "3530",
											"id": 2144,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1520:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1512:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2148,
							"src": "804:736:11",
							"usedErrors": [],
							"usedEvents": [
								557
							]
						}
					],
					"src": "99:1442:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							2159
						]
					},
					"id": 2160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2150,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2159,
							"linearizedBaseContracts": [
								2159
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "812:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:12"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "855:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:12"
									},
									"scope": 2159,
									"src": "785:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2160,
							"src": "405:458:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3025
						]
					},
					"id": 3026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2162,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3025,
							"linearizedBaseContracts": [
								3025
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 2166,
									"members": [
										{
											"id": 2163,
											"name": "Down",
											"nameLocation": "256:4:13",
											"nodeType": "EnumValue",
											"src": "256:4:13"
										},
										{
											"id": 2164,
											"name": "Up",
											"nameLocation": "298:2:13",
											"nodeType": "EnumValue",
											"src": "298:2:13"
										},
										{
											"id": 2165,
											"name": "Zero",
											"nameLocation": "329:4:13",
											"nodeType": "EnumValue",
											"src": "329:4:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:13",
									"nodeType": "EnumDefinition",
									"src": "232:122:13"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "491:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2176,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "508:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2177,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "512:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2180,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "520:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:13",
													"trueExpression": {
														"id": 2179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "516:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2175,
												"id": 2182,
												"nodeType": "Return",
												"src": "501:20:13"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "437:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "448:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:13"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "482:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:13"
									},
									"scope": 3025,
									"src": "424:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "666:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2194,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "683:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2195,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "687:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2198,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "695:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:13",
													"trueExpression": {
														"id": 2197,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "691:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2200,
												"nodeType": "Return",
												"src": "676:20:13"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "623:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:13"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "657:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:13"
									},
									"scope": 3025,
									"src": "599:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "887:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2212,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "942:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2213,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "946:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2215,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2216,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "952:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2217,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "956:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2211,
												"id": 2223,
												"nodeType": "Return",
												"src": "934:28:13"
											}
										]
									},
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "833:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "844:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:13"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:13"
									},
									"scope": 3025,
									"src": "816:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "1239:123:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2235,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "1327:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2239,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2228,
																			"src": "1341:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "1350:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2234,
												"id": 2248,
												"nodeType": "Return",
												"src": "1320:35:13"
											}
										]
									},
									"documentation": {
										"id": 2226,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1185:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1196:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:13"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1230:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:13"
									},
									"scope": 3025,
									"src": "1168:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "1776:4115:13",
										"statements": [
											{
												"id": 2371,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:13",
												"statements": [
													{
														"assignments": [
															2263
														],
														"declarations": [
															{
																"constant": false,
																"id": 2263,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2371,
																"src": "2107:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2262,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2264,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:13"
													},
													{
														"assignments": [
															2266
														],
														"declarations": [
															{
																"constant": false,
																"id": 2266,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2371,
																"src": "2179:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2265,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2267,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:13"
													},
													{
														"AST": {
															"nativeSrc": "2259:157:13",
															"nodeType": "YulBlock",
															"src": "2259:157:13",
															"statements": [
																{
																	"nativeSrc": "2277:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2294:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2297:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2304:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2300:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:13"
																				},
																				"nativeSrc": "2300:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2287:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:13"
																		},
																		"nativeSrc": "2287:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2281:2:13",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:18:13",
																	"nodeType": "YulAssignment",
																	"src": "2324:18:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2337:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2340:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2333:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:13"
																		},
																		"nativeSrc": "2333:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2324:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "2359:43:13",
																	"nodeType": "YulAssignment",
																	"src": "2359:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2376:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2380:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:13"
																				},
																				"nativeSrc": "2372:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2391:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2395:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2388:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:13"
																				},
																				"nativeSrc": "2388:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2368:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:13"
																		},
																		"nativeSrc": "2368:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2359:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2266,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2255,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2255,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:13",
																"valueSize": 1
															}
														],
														"id": 2268,
														"nodeType": "InlineAssembly",
														"src": "2250:166:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2269,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "2497:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2277,
														"nodeType": "IfStatement",
														"src": "2493:368:13",
														"trueBody": {
															"id": 2276,
															"nodeType": "Block",
															"src": "2509:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2272,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "2827:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2273,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "2835:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2261,
																	"id": 2275,
																	"nodeType": "Return",
																	"src": "2820:26:13"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2279,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "2971:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2280,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2266,
																		"src": "2985:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2278,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2284,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:13"
													},
													{
														"assignments": [
															2286
														],
														"declarations": [
															{
																"constant": false,
																"id": 2286,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2371,
																"src": "3272:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2287,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:13"
													},
													{
														"AST": {
															"nativeSrc": "3312:291:13",
															"nodeType": "YulBlock",
															"src": "3312:291:13",
															"statements": [
																{
																	"nativeSrc": "3381:38:13",
																	"nodeType": "YulAssignment",
																	"src": "3381:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3401:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3404:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3407:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3394:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:13"
																		},
																		"nativeSrc": "3394:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3381:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3501:41:13",
																	"nodeType": "YulAssignment",
																	"src": "3501:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3514:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3524:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3535:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3521:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:13"
																				},
																				"nativeSrc": "3521:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3510:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:13"
																		},
																		"nativeSrc": "3510:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3501:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3559:30:13",
																	"nodeType": "YulAssignment",
																	"src": "3559:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3572:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3579:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3568:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:13"
																		},
																		"nativeSrc": "3568:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3559:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2266,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2266,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2286,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2286,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2286,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2255,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:13",
																"valueSize": 1
															}
														],
														"id": 2288,
														"nodeType": "InlineAssembly",
														"src": "3303:300:13"
													},
													{
														"assignments": [
															2290
														],
														"declarations": [
															{
																"constant": false,
																"id": 2290,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2371,
																"src": "3910:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2298,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2291,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "3925:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:13",
																			"subExpression": {
																				"id": 2292,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2257,
																				"src": "3941:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:13"
													},
													{
														"AST": {
															"nativeSrc": "3980:362:13",
															"nodeType": "YulBlock",
															"src": "3980:362:13",
															"statements": [
																{
																	"nativeSrc": "4045:37:13",
																	"nodeType": "YulAssignment",
																	"src": "4045:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4064:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4077:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4060:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:13"
																		},
																		"nativeSrc": "4060:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4045:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "4149:25:13",
																	"nodeType": "YulAssignment",
																	"src": "4149:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4162:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4169:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4158:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:13"
																		},
																		"nativeSrc": "4158:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4149:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "4289:39:13",
																	"nodeType": "YulAssignment",
																	"src": "4289:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4309:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4312:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4305:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:13"
																						},
																						"nativeSrc": "4305:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4319:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4301:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:13"
																				},
																				"nativeSrc": "4301:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:13"
																		},
																		"nativeSrc": "4297:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4289:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2263,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:13",
																"valueSize": 1
															}
														],
														"id": 2299,
														"nodeType": "InlineAssembly",
														"src": "3971:371:13"
													},
													{
														"expression": {
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2263,
																"src": "4408:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2301,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "4417:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2302,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "4425:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2305,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:13"
													},
													{
														"assignments": [
															2307
														],
														"declarations": [
															{
																"constant": false,
																"id": 2307,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2371,
																"src": "4747:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2306,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2314,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2309,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "4770:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:13"
													},
													{
														"expression": {
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2315,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5003:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2317,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5018:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2318,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5032:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2322,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:13"
													},
													{
														"expression": {
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2323,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5072:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2325,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5087:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2326,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5101:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2330,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:13"
													},
													{
														"expression": {
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2331,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5142:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2333,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5157:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2334,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5171:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2338,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:13"
													},
													{
														"expression": {
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5212:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2341,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2342,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5241:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2346,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:13"
													},
													{
														"expression": {
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2347,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5282:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2349,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5297:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2350,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5311:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2354,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:13"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2355,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5353:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2357,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "5368:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2358,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "5382:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:13"
													},
													{
														"expression": {
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "5823:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2364,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "5832:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2365,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "5840:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2368,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:13"
													},
													{
														"expression": {
															"id": 2369,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "5868:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2261,
														"id": 2370,
														"nodeType": "Return",
														"src": "5861:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1694:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1705:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1716:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:13"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1760:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:13"
									},
									"scope": 3025,
									"src": "1678:4213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "6133:189:13",
										"statements": [
											{
												"assignments": [
													2389
												],
												"declarations": [
													{
														"constant": false,
														"id": 2389,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2416,
														"src": "6143:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"arguments": [
														{
															"id": 2391,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "6167:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2392,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "6170:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2393,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "6173:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2390,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2373,
															2417
														],
														"referencedDeclaration": 2373,
														"src": "6160:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2166",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2396,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "6199:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2166",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2397,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "6211:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2166_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:13",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2164,
															"src": "6211:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2166",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2401,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2376,
																	"src": "6233:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2402,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "6236:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2403,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "6239:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2400,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2413,
												"nodeType": "IfStatement",
												"src": "6195:98:13",
												"trueBody": {
													"id": 2412,
													"nodeType": "Block",
													"src": "6257:36:13",
													"statements": [
														{
															"expression": {
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2408,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "6271:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2411,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2414,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2389,
													"src": "6309:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2387,
												"id": 2415,
												"nodeType": "Return",
												"src": "6302:13:13"
											}
										]
									},
									"documentation": {
										"id": 2374,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "6039:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "6050:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "6061:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "6082:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2166",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2381,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "6082:8:13"
													},
													"referencedDeclaration": 2166,
													"src": "6082:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2166",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:13"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "6124:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:13"
									},
									"scope": 3025,
									"src": "6023:299:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "6598:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2425,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "6612:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2431,
												"nodeType": "IfStatement",
												"src": "6608:45:13",
												"trueBody": {
													"id": 2430,
													"nodeType": "Block",
													"src": "6620:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2424,
															"id": 2429,
															"nodeType": "Return",
															"src": "6634:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2433
												],
												"declarations": [
													{
														"constant": false,
														"id": 2433,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2528,
														"src": "7332:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2442,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2436,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2420,
																			"src": "7360:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2435,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2697,
																			2733
																		],
																		"referencedDeclaration": 2697,
																		"src": "7355:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2440,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:13"
											},
											{
												"id": 2527,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:13",
												"statements": [
													{
														"expression": {
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2443,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "7793:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2444,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "7803:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2445,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "7812:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2446,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "7816:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2453,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:13"
													},
													{
														"expression": {
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2454,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "7842:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2455,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "7852:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2456,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "7861:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2457,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "7865:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2460,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2464,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:13"
													},
													{
														"expression": {
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2465,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "7891:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2466,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "7901:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2467,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "7910:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2468,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "7914:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2475,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:13"
													},
													{
														"expression": {
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2476,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "7940:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2477,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "7950:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2478,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "7959:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2479,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "7963:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2482,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2486,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:13"
													},
													{
														"expression": {
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "7989:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2488,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "7999:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2489,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "8008:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2490,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "8012:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2497,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:13"
													},
													{
														"expression": {
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2498,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "8038:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2499,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "8048:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2500,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "8057:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2501,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "8061:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2508,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:13"
													},
													{
														"expression": {
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2509,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "8087:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2510,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "8097:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2511,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "8106:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2512,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "8110:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2515,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2521,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "8147:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2522,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "8155:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2523,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "8159:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2520,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "8143:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2424,
														"id": 2526,
														"nodeType": "Return",
														"src": "8136:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "6555:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:13"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "6589:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:13"
									},
									"scope": 3025,
									"src": "6541:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "8359:161:13",
										"statements": [
											{
												"id": 2563,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:13",
												"statements": [
													{
														"assignments": [
															2541
														],
														"declarations": [
															{
																"constant": false,
																"id": 2541,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2563,
																"src": "8393:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2545,
														"initialValue": {
															"arguments": [
																{
																	"id": 2543,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "8415:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2542,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2529,
																	2565
																],
																"referencedDeclaration": 2529,
																"src": "8410:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2546,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "8438:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2166",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2547,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2535,
																					"src": "8448:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2548,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2166,
																						"src": "8460:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2166_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2164,
																					"src": "8460:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2551,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2541,
																						"src": "8475:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2552,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2541,
																						"src": "8484:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2554,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2532,
																					"src": "8493:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2539,
														"id": 2562,
														"nodeType": "Return",
														"src": "8431:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "8297:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "8308:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2166",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2533,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "8308:8:13"
													},
													"referencedDeclaration": 2166,
													"src": "8308:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2166",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:13"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "8350:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:13"
									},
									"scope": 3025,
									"src": "8283:237:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "8705:922:13",
										"statements": [
											{
												"assignments": [
													2574
												],
												"declarations": [
													{
														"constant": false,
														"id": 2574,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2696,
														"src": "8715:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2576,
												"initialValue": {
													"hexValue": "30",
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:13"
											},
											{
												"id": 2693,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "8771:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "8767:99:13",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "8789:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "8807:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:13"
																},
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "8838:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "8883:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2606,
														"nodeType": "IfStatement",
														"src": "8879:96:13",
														"trueBody": {
															"id": 2605,
															"nodeType": "Block",
															"src": "8900:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2597,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "8918:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2600,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:13"
																},
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2601,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "8948:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "8992:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2621,
														"nodeType": "IfStatement",
														"src": "8988:96:13",
														"trueBody": {
															"id": 2620,
															"nodeType": "Block",
															"src": "9009:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "9027:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2615,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:13"
																},
																{
																	"expression": {
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2616,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9057:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "9101:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2636,
														"nodeType": "IfStatement",
														"src": "9097:96:13",
														"trueBody": {
															"id": 2635,
															"nodeType": "Block",
															"src": "9118:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2627,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "9136:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:13"
																},
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9166:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "9210:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2651,
														"nodeType": "IfStatement",
														"src": "9206:93:13",
														"trueBody": {
															"id": 2650,
															"nodeType": "Block",
															"src": "9226:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "9244:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2645,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:13"
																},
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9273:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "9316:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2666,
														"nodeType": "IfStatement",
														"src": "9312:93:13",
														"trueBody": {
															"id": 2665,
															"nodeType": "Block",
															"src": "9332:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "9350:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:13"
																},
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9379:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "9422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2681,
														"nodeType": "IfStatement",
														"src": "9418:93:13",
														"trueBody": {
															"id": 2680,
															"nodeType": "Block",
															"src": "9438:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "9456:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2675,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:13"
																},
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9485:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "9528:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "9524:64:13",
														"trueBody": {
															"id": 2691,
															"nodeType": "Block",
															"src": "9544:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "9562:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2694,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2574,
													"src": "9614:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2572,
												"id": 2695,
												"nodeType": "Return",
												"src": "9607:13:13"
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:13",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "8658:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:13"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "8696:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:13"
									},
									"scope": 3025,
									"src": "8644:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2732,
										"nodeType": "Block",
										"src": "9860:165:13",
										"statements": [
											{
												"id": 2731,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:13",
												"statements": [
													{
														"assignments": [
															2709
														],
														"declarations": [
															{
																"constant": false,
																"id": 2709,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2731,
																"src": "9894:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2708,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2713,
														"initialValue": {
															"arguments": [
																{
																	"id": 2711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "9916:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2710,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2697,
																	2733
																],
																"referencedDeclaration": 2697,
																"src": "9911:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2714,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "9943:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2166",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2715,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "9953:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2716,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2166,
																						"src": "9965:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2166_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2164,
																					"src": "9965:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2720,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2709,
																						"src": "9985:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2722,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2700,
																					"src": "9994:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2728,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2707,
														"id": 2730,
														"nodeType": "Return",
														"src": "9936:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "9794:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "9809:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2166",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2701,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "9809:8:13"
													},
													"referencedDeclaration": 2166,
													"src": "9809:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2166",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:13"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "9851:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:13"
									},
									"scope": 3025,
									"src": "9780:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "10212:854:13",
										"statements": [
											{
												"assignments": [
													2742
												],
												"declarations": [
													{
														"constant": false,
														"id": 2742,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2861,
														"src": "10222:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2744,
												"initialValue": {
													"hexValue": "30",
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:13"
											},
											{
												"id": 2858,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2745,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10278:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2761,
														"nodeType": "IfStatement",
														"src": "10274:103:13",
														"trueBody": {
															"id": 2760,
															"nodeType": "Block",
															"src": "10297:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10315:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:13"
																},
																{
																	"expression": {
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2756,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10350:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2759,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10394:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2778,
														"nodeType": "IfStatement",
														"src": "10390:103:13",
														"trueBody": {
															"id": 2777,
															"nodeType": "Block",
															"src": "10413:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2767,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10431:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2772,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:13"
																},
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2773,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10466:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2779,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10510:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "10506:103:13",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "10529:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2784,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10547:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:13"
																},
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10582:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2796,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10626:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2812,
														"nodeType": "IfStatement",
														"src": "10622:100:13",
														"trueBody": {
															"id": 2811,
															"nodeType": "Block",
															"src": "10644:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10662:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:13"
																},
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10696:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2813,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10739:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2829,
														"nodeType": "IfStatement",
														"src": "10735:100:13",
														"trueBody": {
															"id": 2828,
															"nodeType": "Block",
															"src": "10757:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10775:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:13"
																},
																{
																	"expression": {
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2824,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10809:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2827,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2830,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10852:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2846,
														"nodeType": "IfStatement",
														"src": "10848:100:13",
														"trueBody": {
															"id": 2845,
															"nodeType": "Block",
															"src": "10870:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "10888:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:13"
																},
																{
																	"expression": {
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2841,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "10922:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2844,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "10965:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "10961:66:13",
														"trueBody": {
															"id": 2856,
															"nodeType": "Block",
															"src": "10983:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "11001:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2855,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2859,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2742,
													"src": "11053:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2740,
												"id": 2860,
												"nodeType": "Return",
												"src": "11046:13:13"
											}
										]
									},
									"documentation": {
										"id": 2734,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:13",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "10165:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:13"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "10203:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:13"
									},
									"scope": 3025,
									"src": "10150:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "11301:167:13",
										"statements": [
											{
												"id": 2896,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:13",
												"statements": [
													{
														"assignments": [
															2874
														],
														"declarations": [
															{
																"constant": false,
																"id": 2874,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2896,
																"src": "11335:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2873,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2878,
														"initialValue": {
															"arguments": [
																{
																	"id": 2876,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2865,
																	"src": "11358:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2875,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2862,
																	2898
																],
																"referencedDeclaration": 2862,
																"src": "11352:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2879,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "11385:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2166",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2880,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "11395:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2881,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2166,
																						"src": "11407:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2166_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2164,
																					"src": "11407:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2884,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2885,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2874,
																						"src": "11428:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2887,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2865,
																					"src": "11437:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2872,
														"id": 2895,
														"nodeType": "Return",
														"src": "11378:73:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "11235:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "11250:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2166",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2866,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "11250:8:13"
													},
													"referencedDeclaration": 2166,
													"src": "11250:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2166",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:13"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "11292:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:13"
									},
									"scope": 3025,
									"src": "11220:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2984,
										"nodeType": "Block",
										"src": "11782:600:13",
										"statements": [
											{
												"assignments": [
													2907
												],
												"declarations": [
													{
														"constant": false,
														"id": 2907,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2984,
														"src": "11792:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2909,
												"initialValue": {
													"hexValue": "30",
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:13"
											},
											{
												"id": 2981,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2910,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "11848:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2924,
														"nodeType": "IfStatement",
														"src": "11844:98:13",
														"trueBody": {
															"id": 2923,
															"nodeType": "Block",
															"src": "11866:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2901,
																			"src": "11884:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:13"
																},
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2919,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2907,
																			"src": "11915:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "11959:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2939,
														"nodeType": "IfStatement",
														"src": "11955:95:13",
														"trueBody": {
															"id": 2938,
															"nodeType": "Block",
															"src": "11976:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2901,
																			"src": "11994:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2933,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:13"
																},
																{
																	"expression": {
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2907,
																			"src": "12024:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2937,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2940,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "12067:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2954,
														"nodeType": "IfStatement",
														"src": "12063:95:13",
														"trueBody": {
															"id": 2953,
															"nodeType": "Block",
															"src": "12084:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2945,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2901,
																			"src": "12102:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2948,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:13"
																},
																{
																	"expression": {
																		"id": 2951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2949,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2907,
																			"src": "12132:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2952,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2955,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "12175:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2969,
														"nodeType": "IfStatement",
														"src": "12171:95:13",
														"trueBody": {
															"id": 2968,
															"nodeType": "Block",
															"src": "12192:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2901,
																			"src": "12210:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2963,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:13"
																},
																{
																	"expression": {
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2907,
																			"src": "12240:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2967,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "12283:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2980,
														"nodeType": "IfStatement",
														"src": "12279:64:13",
														"trueBody": {
															"id": 2979,
															"nodeType": "Block",
															"src": "12299:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2975,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2907,
																			"src": "12317:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2978,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2982,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2907,
													"src": "12369:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2905,
												"id": 2983,
												"nodeType": "Return",
												"src": "12362:13:13"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:13",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "11735:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:13"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "11773:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:13"
									},
									"scope": 3025,
									"src": "11719:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "12619:174:13",
										"statements": [
											{
												"id": 3022,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:13",
												"statements": [
													{
														"assignments": [
															2997
														],
														"declarations": [
															{
																"constant": false,
																"id": 2997,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3022,
																"src": "12653:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2996,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3001,
														"initialValue": {
															"arguments": [
																{
																	"id": 2999,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2988,
																	"src": "12677:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2998,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2985,
																	3024
																],
																"referencedDeclaration": 2985,
																"src": "12670:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3002,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2997,
																"src": "12704:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2166",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3003,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2991,
																					"src": "12714:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3004,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2166,
																						"src": "12726:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2166_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3005,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2164,
																					"src": "12726:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2166",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3012,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3007,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3010,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3008,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2997,
																									"src": "12747:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3009,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3011,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3013,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "12762:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2995,
														"id": 3021,
														"nodeType": "Return",
														"src": "12697:79:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2986,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "12553:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "12568:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2166",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2989,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "12568:8:13"
													},
													"referencedDeclaration": 2166,
													"src": "12568:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2166",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:13"
									},
									"returnParameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "12610:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:13"
									},
									"scope": 3025,
									"src": "12537:256:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3026,
							"src": "202:12593:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12693:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							3130
						]
					},
					"id": 3131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3028,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3130,
							"linearizedBaseContracts": [
								3130
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "386:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3038,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "403:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3039,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3033,
															"src": "407:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3042,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:14",
													"trueExpression": {
														"id": 3041,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "411:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3037,
												"id": 3044,
												"nodeType": "Return",
												"src": "396:20:14"
											}
										]
									},
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3030,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "345:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:14"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "378:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:14"
									},
									"scope": 3130,
									"src": "322:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "565:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3056,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "582:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3057,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "586:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3060,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "594:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:14",
													"trueExpression": {
														"id": 3059,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "590:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3055,
												"id": 3062,
												"nodeType": "Return",
												"src": "575:20:14"
											}
										]
									},
									"documentation": {
										"id": 3047,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3048,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "524:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3050,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:14"
									},
									"returnParameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "557:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:14"
									},
									"scope": 3130,
									"src": "501:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "807:162:14",
										"statements": [
											{
												"assignments": [
													3075
												],
												"declarations": [
													{
														"constant": false,
														"id": 3075,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3107,
														"src": "869:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3074,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3088,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3076,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3067,
																	"src": "881:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3077,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3069,
																	"src": "885:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3079,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3080,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3067,
																				"src": "892:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3081,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3069,
																				"src": "896:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3086,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3089,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "921:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3094,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3075,
																						"src": "941:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3092,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3090,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3099,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3067,
																				"src": "955:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3100,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3069,
																				"src": "959:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3102,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3104,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3073,
												"id": 3106,
												"nodeType": "Return",
												"src": "914:48:14"
											}
										]
									},
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3066,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "766:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3068,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:14"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "799:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3071,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:14"
									},
									"scope": 3130,
									"src": "739:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3128,
										"nodeType": "Block",
										"src": "1113:158:14",
										"statements": [
											{
												"id": 3127,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3118,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "1238:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:14",
																		"subExpression": {
																			"id": 3122,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "1252:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:14",
																	"trueExpression": {
																		"id": 3121,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3111,
																		"src": "1247:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3116,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3115,
														"id": 3126,
														"nodeType": "Return",
														"src": "1223:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3129,
												"src": "1071:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:14"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3129,
												"src": "1104:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:14"
									},
									"scope": 3130,
									"src": "1058:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3131,
							"src": "215:1058:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1165:14"
				},
				"id": 14
			},
			"contracts/tokens/AlvaraAvax.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/AlvaraAvax.sol",
					"exportedSymbols": {
						"AlvaraAvax": [
							3241
						],
						"ERC20BurnableUpgradeable": [
							1467
						],
						"ERC20Upgradeable": [
							1324
						],
						"OwnableUpgradeable": [
							542
						],
						"WithSupervisedTransfersAvax": [
							3381
						]
					},
					"id": 3242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 3134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3242,
							"sourceUnit": 1325,
							"src": "57:102:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3133,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1324,
										"src": "65:16:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"id": 3136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3242,
							"sourceUnit": 1468,
							"src": "160:129:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3135,
										"name": "ERC20BurnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1467,
										"src": "168:24:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 3138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3242,
							"sourceUnit": 543,
							"src": "290:101:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3137,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 542,
										"src": "298:18:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/WithSupervisedTransfersAvax.sol",
							"file": "../utils/WithSupervisedTransfersAvax.sol",
							"id": 3140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3242,
							"sourceUnit": 3382,
							"src": "392:85:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3139,
										"name": "WithSupervisedTransfersAvax",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3381,
										"src": "400:27:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3141,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"506:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1324,
										"src": "506:16:15"
									},
									"id": 3142,
									"nodeType": "InheritanceSpecifier",
									"src": "506:16:15"
								},
								{
									"baseName": {
										"id": 3143,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"528:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "528:18:15"
									},
									"id": 3144,
									"nodeType": "InheritanceSpecifier",
									"src": "528:18:15"
								},
								{
									"baseName": {
										"id": 3145,
										"name": "ERC20BurnableUpgradeable",
										"nameLocations": [
											"552:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "552:24:15"
									},
									"id": 3146,
									"nodeType": "InheritanceSpecifier",
									"src": "552:24:15"
								},
								{
									"baseName": {
										"id": 3147,
										"name": "WithSupervisedTransfersAvax",
										"nameLocations": [
											"582:27:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3381,
										"src": "582:27:15"
									},
									"id": 3148,
									"nodeType": "InheritanceSpecifier",
									"src": "582:27:15"
								}
							],
							"canonicalName": "AlvaraAvax",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3241,
							"linearizedBaseContracts": [
								3241,
								3381,
								336,
								2147,
								2159,
								409,
								1467,
								542,
								1324,
								1492,
								1402,
								1873,
								711
							],
							"name": "AlvaraAvax",
							"nameLocation": "488:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 3153,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "640:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 3241,
									"src": "616:62:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3149,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 3151,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "664:13:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 3150,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "654:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "654:24:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b930908f",
									"id": 3158,
									"mutability": "constant",
									"name": "BURN_ROLE",
									"nameLocation": "708:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3241,
									"src": "684:58:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3154,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "684:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e5f524f4c45",
												"id": 3156,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "730:11:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22",
													"typeString": "literal_string \"BURN_ROLE\""
												},
												"value": "BURN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22",
													"typeString": "literal_string \"BURN_ROLE\""
												}
											],
											"id": 3155,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "720:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "720:22:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "790:169:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "416c76617261",
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "813:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b9d66c3a9ce31efcb398e2185a18587f6be6d958c574f9d3178e3a47542828d",
																"typeString": "literal_string \"Alvara\""
															},
															"value": "Alvara"
														},
														{
															"hexValue": "414c5641",
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "823:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9caf2d540b898cdfac81b83e07c5ccc2b43b435ef7fd303389645f588cf0a2fa",
																"typeString": "literal_string \"ALVA\""
															},
															"value": "ALVA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3b9d66c3a9ce31efcb398e2185a18587f6be6d958c574f9d3178e3a47542828d",
																"typeString": "literal_string \"Alvara\""
															},
															{
																"typeIdentifier": "t_stringliteral_9caf2d540b898cdfac81b83e07c5ccc2b43b435ef7fd303389645f588cf0a2fa",
																"typeString": "literal_string \"ALVA\""
															}
														],
														"id": 3163,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "800:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "800:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3167,
												"nodeType": "ExpressionStatement",
												"src": "800:30:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3168,
														"name": "__ERC20Burnable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "840:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "840:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3170,
												"nodeType": "ExpressionStatement",
												"src": "840:22:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3172,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "903:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3173,
															"name": "BURN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3158,
															"src": "916:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3171,
														"name": "__WithSupervisedTransfers_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "872:30:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:54:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "872:54:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3176,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "936:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3178,
												"nodeType": "ExpressionStatement",
												"src": "936:16:15"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3160,
												"name": "initializer",
												"nameLocations": [
													"778:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "778:11:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "778:11:15"
										}
									],
									"name": "initialize",
									"nameLocation": "758:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:2:15"
									},
									"returnParameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:0:15"
									},
									"scope": 3241,
									"src": "749:210:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3197,
										"nodeType": "Block",
										"src": "1036:40:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3193,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3182,
															"src": "1058:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "1062:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3190,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1046:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AlvaraAvax_$3241_$",
																"typeString": "type(contract super AlvaraAvax)"
															}
														},
														"id": 3192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1052:5:15",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1136,
														"src": "1046:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1046:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3196,
												"nodeType": "ExpressionStatement",
												"src": "1046:23:15"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3187,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3153,
													"src": "1023:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3186,
												"name": "onlyRole",
												"nameLocations": [
													"1014:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "1014:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1014:21:15"
										}
									],
									"name": "mint",
									"nameLocation": "974:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "987:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "979:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "999:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "991:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:28:15"
									},
									"returnParameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:15"
									},
									"scope": 3241,
									"src": "965:111:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "1153:42:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3200,
															"src": "1175:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3202,
															"src": "1181:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3208,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1163:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AlvaraAvax_$3241_$",
																"typeString": "type(contract super AlvaraAvax)"
															}
														},
														"id": 3210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1169:5:15",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1208,
														"src": "1163:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3214,
												"nodeType": "ExpressionStatement",
												"src": "1163:25:15"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3205,
													"name": "BURN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3158,
													"src": "1142:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3204,
												"name": "onlyRole",
												"nameLocations": [
													"1133:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "1133:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:19:15"
										}
									],
									"name": "burn",
									"nameLocation": "1091:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1104:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "1096:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1118:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "1110:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:30:15"
									},
									"returnParameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:15"
									},
									"scope": 3241,
									"src": "1082:113:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										932
									],
									"body": {
										"id": 3239,
										"nodeType": "Block",
										"src": "1359:60:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3234,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "1395:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3235,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3220,
															"src": "1401:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3236,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3222,
															"src": "1405:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3232,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1376:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AlvaraAvax_$3241_$",
																"typeString": "type(contract super AlvaraAvax)"
															}
														},
														"id": 3233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1382:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "1376:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3231,
												"id": 3238,
												"nodeType": "Return",
												"src": "1369:43:15"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 3240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3226,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3218,
													"src": "1334:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3227,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3220,
													"src": "1340:2:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3225,
												"name": "supervisedTransferFrom",
												"nameLocations": [
													"1311:22:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3320,
												"src": "1311:22:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1311:32:15"
										}
									],
									"name": "transferFrom",
									"nameLocation": "1210:12:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3224,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1302:8:15"
									},
									"parameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1240:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "1232:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1262:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "1254:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1282:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "1274:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:72:15"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "1353:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:6:15"
									},
									"scope": 3241,
									"src": "1201:218:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3242,
							"src": "479:942:15",
							"usedErrors": [
								3251,
								3254
							],
							"usedEvents": [
								348,
								357,
								366,
								427,
								557,
								1336,
								1345,
								3259
							]
						}
					],
					"src": "32:1390:15"
				},
				"id": 15
			},
			"contracts/utils/WithSupervisedTransfersAvax.sol": {
				"ast": {
					"absolutePath": "contracts/utils/WithSupervisedTransfersAvax.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"WithSupervisedTransfersAvax": [
							3381
						]
					},
					"id": 3382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 3245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3382,
							"sourceUnit": 337,
							"src": "57:113:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3244,
										"name": "AccessControlUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "65:24:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3247,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"615:24:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "615:24:16"
									},
									"id": 3248,
									"nodeType": "InheritanceSpecifier",
									"src": "615:24:16"
								}
							],
							"canonicalName": "WithSupervisedTransfersAvax",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3246,
								"nodeType": "StructuredDocumentation",
								"src": "172:393:16",
								"text": " Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method.\n The admin can also specify listing timestamp.\n After the token listing, anyone can tranferFrom without any restrictions forever.\n Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX."
							},
							"fullyImplemented": true,
							"id": 3381,
							"linearizedBaseContracts": [
								3381,
								336,
								2147,
								2159,
								409,
								1873,
								711
							],
							"name": "WithSupervisedTransfersAvax",
							"nameLocation": "584:27:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3249,
										"nodeType": "StructuredDocumentation",
										"src": "646:214:16",
										"text": " @dev Once the listingTimestamp passes (which disables supervised transfers) it can never be set again.\n This ensures once supervised transfers are disabled, they can never be enabled again."
									},
									"errorSelector": "deaabdc2",
									"id": 3251,
									"name": "TokenAlreadyListed",
									"nameLocation": "871:18:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:16"
									},
									"src": "865:27:16"
								},
								{
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "898:79:16",
										"text": " @dev Used before listing if not allowed transferFrom occurs."
									},
									"errorSelector": "afae8e97",
									"id": 3254,
									"name": "SupervisedTranferFrom",
									"nameLocation": "988:21:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:2:16"
									},
									"src": "982:30:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3255,
										"nodeType": "StructuredDocumentation",
										"src": "1018:171:16",
										"text": " Called every time the listing timestamp is updated for easy off-chain tracking.\n @param newListingTimestamp the value of the new listing timestamp"
									},
									"eventSelector": "0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d6",
									"id": 3259,
									"name": "ListingTimestampUpdated",
									"nameLocation": "1200:23:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"indexed": false,
												"mutability": "mutable",
												"name": "newListingTimestamp",
												"nameLocation": "1231:19:16",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "1224:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3256,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1224:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:28:16"
									},
									"src": "1194:58:16"
								},
								{
									"constant": true,
									"functionSelector": "4e695cca",
									"id": 3264,
									"mutability": "constant",
									"name": "ALLOWED_TRANSFER_FROM_ROLE",
									"nameLocation": "1282:26:16",
									"nodeType": "VariableDeclaration",
									"scope": 3381,
									"src": "1258:100:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3260,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1258:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "414c4c4f5745445f5452414e534645525f46524f4d5f524f4c45",
												"id": 3262,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1329:28:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0",
													"typeString": "literal_string \"ALLOWED_TRANSFER_FROM_ROLE\""
												},
												"value": "ALLOWED_TRANSFER_FROM_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0",
													"typeString": "literal_string \"ALLOWED_TRANSFER_FROM_ROLE\""
												}
											],
											"id": 3261,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1319:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1319:39:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd39a2a8",
									"id": 3266,
									"mutability": "mutable",
									"name": "listingTimestamp",
									"nameLocation": "1378:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 3381,
									"src": "1364:30:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 3265,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1364:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3319,
										"nodeType": "Block",
										"src": "1731:571:16",
										"statements": [
											{
												"assignments": [
													3274
												],
												"declarations": [
													{
														"constant": false,
														"id": 3274,
														"mutability": "mutable",
														"name": "duringSupervisedTransfers",
														"nameLocation": "1746:25:16",
														"nodeType": "VariableDeclaration",
														"scope": 3319,
														"src": "1741:30:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3273,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1741:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3283,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3275,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "1774:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1774:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3278,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1811:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1817:9:16",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1811:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3280,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "1829:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "1811:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1774:71:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1741:104:16"
											},
											{
												"condition": {
													"id": 3284,
													"name": "duringSupervisedTransfers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3274,
													"src": "1859:25:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3317,
												"nodeType": "IfStatement",
												"src": "1855:430:16",
												"trueBody": {
													"id": 3316,
													"nodeType": "Block",
													"src": "1886:399:16",
													"statements": [
														{
															"assignments": [
																3286
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3286,
																	"mutability": "mutable",
																	"name": "transactionInvolvesAdmin",
																	"nameLocation": "1905:24:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 3316,
																	"src": "1900:29:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3285,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1900:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3302,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 3288,
																				"name": "DEFAULT_ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "1940:18:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3289,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3269,
																				"src": "1960:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3287,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "1932:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1932:33:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 3292,
																				"name": "DEFAULT_ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "1993:18:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3293,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3271,
																				"src": "2013:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3291,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "1985:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1985:31:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1932:84:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3297,
																			"name": "DEFAULT_ADMIN_ROLE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "2044:18:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3298,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1850,
																				"src": "2064:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2064:12:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3296,
																		"name": "hasRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "2036:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (bytes32,address) view returns (bool)"
																		}
																	},
																	"id": 3300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2036:41:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1932:145:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1900:177:16"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2112:25:16",
																	"subExpression": {
																		"id": 3303,
																		"name": "transactionInvolvesAdmin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3286,
																		"src": "2113:24:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2157:40:16",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 3306,
																				"name": "ALLOWED_TRANSFER_FROM_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3264,
																				"src": "2166:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3307,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3271,
																				"src": "2194:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3305,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "2158:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2158:39:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2112:85:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3315,
															"nodeType": "IfStatement",
															"src": "2091:184:16",
															"trueBody": {
																"id": 3314,
																"nodeType": "Block",
																"src": "2212:63:16",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3311,
																				"name": "SupervisedTranferFrom",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3254,
																				"src": "2237:21:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 3312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2237:23:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 3313,
																		"nodeType": "RevertStatement",
																		"src": "2230:30:16"
																	}
																]
															}
														}
													]
												}
											},
											{
												"id": 3318,
												"nodeType": "PlaceholderStatement",
												"src": "2294:1:16"
											}
										]
									},
									"documentation": {
										"id": 3267,
										"nodeType": "StructuredDocumentation",
										"src": "1401:267:16",
										"text": " This modifier blocks all tranferFrom function calls unless:\n - the token has already been listed\n - OR the transaction involves admin\n - OR the reciver is whitelisted\n This modifier MUST be used on the transferFrom function."
									},
									"id": 3320,
									"name": "supervisedTransferFrom",
									"nameLocation": "1682:22:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1713:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "1705:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1727:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "1719:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:26:16"
									},
									"src": "1673:629:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3348,
										"nodeType": "Block",
										"src": "2512:153:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3331,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2533:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3332,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "2553:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2553:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3330,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2522:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3335,
												"nodeType": "ExpressionStatement",
												"src": "2522:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3323,
															"src": "2587:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3338,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "2600:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2600:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3336,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2576:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2576:37:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3341,
												"nodeType": "ExpressionStatement",
												"src": "2576:37:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3343,
															"name": "BURN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "2634:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3344,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "2645:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2645:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3342,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2623:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:35:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3347,
												"nodeType": "ExpressionStatement",
												"src": "2623:35:16"
											}
										]
									},
									"documentation": {
										"id": 3321,
										"nodeType": "StructuredDocumentation",
										"src": "2308:71:16",
										"text": " The initialize grants the admin role to the deployer"
									},
									"id": 3349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3327,
												"name": "onlyInitializing",
												"nameLocations": [
													"2495:16:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2495:16:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2495:16:16"
										}
									],
									"name": "__WithSupervisedTransfers_init",
									"nameLocation": "2393:30:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3323,
												"mutability": "mutable",
												"name": "MINTER_ROLE",
												"nameLocation": "2441:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "2433:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "BURN_ROLE",
												"nameLocation": "2470:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "2462:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:62:16"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:16"
									},
									"scope": 3381,
									"src": "2384:281:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3379,
										"nodeType": "Block",
										"src": "3037:240:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3358,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "3051:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3070:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3051:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3361,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3075:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3081:9:16",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3075:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 3363,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "3094:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "3075:35:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3051:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3370,
												"nodeType": "IfStatement",
												"src": "3047:117:16",
												"trueBody": {
													"id": 3369,
													"nodeType": "Block",
													"src": "3112:52:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3366,
																	"name": "TokenAlreadyListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3251,
																	"src": "3133:18:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3133:20:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3368,
															"nodeType": "RevertStatement",
															"src": "3126:27:16"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3372,
															"name": "newListingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3352,
															"src": "3202:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 3371,
														"name": "ListingTimestampUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3259,
														"src": "3178:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
															"typeString": "function (uint32)"
														}
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3178:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3374,
												"nodeType": "EmitStatement",
												"src": "3173:49:16"
											},
											{
												"expression": {
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3375,
														"name": "listingTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3266,
														"src": "3232:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3376,
														"name": "newListingTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3352,
														"src": "3251:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3232:38:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3378,
												"nodeType": "ExpressionStatement",
												"src": "3232:38:16"
											}
										]
									},
									"documentation": {
										"id": 3350,
										"nodeType": "StructuredDocumentation",
										"src": "2671:246:16",
										"text": " Allows the admin to specify when the token should become tradeable.\n Once the token is tradeable, transferFrom can never be supervised again.\n @param newListingTimestamp epoch time of when the token is listed on DEX"
									},
									"functionSelector": "e90cdd1c",
									"id": 3380,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3355,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "3013:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3354,
												"name": "onlyRole",
												"nameLocations": [
													"3004:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "3004:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3004:28:16"
										}
									],
									"name": "setListingTimestamp",
									"nameLocation": "2931:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "newListingTimestamp",
												"nameLocation": "2958:19:16",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "2951:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3351,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:28:16"
									},
									"returnParameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:16"
									},
									"scope": 3381,
									"src": "2922:355:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3382,
							"src": "566:2713:16",
							"usedErrors": [
								3251,
								3254
							],
							"usedEvents": [
								348,
								357,
								366,
								557,
								3259
							]
						}
					],
					"src": "32:3248:16"
				},
				"id": 16
			}
		}
	}
}