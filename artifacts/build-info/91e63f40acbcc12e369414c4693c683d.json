{
	"id": "91e63f40acbcc12e369414c4693c683d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/Alvara.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport {ERC20BurnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\n\nimport {WithSupervisedTransfers} from \"../utils/WithSupervisedTransfers.sol\";\n\ncontract Alvara is\n    ERC20Upgradeable,\n    ERC20BurnableUpgradeable,\n    WithSupervisedTransfers\n{\n    /**\n     * @dev Whenever an action is performed that is restricted, this error will be shown\n     */\n    error ActionRestricted();\n    \n    /**\n     * @dev Error displayed when address is already greylisted\n     */\n    error AddressAlreadyGreylisted();\n\n    /**\n     * @dev Error displayed when an address is not in grey list and function tries to remove it \n     */\n    error AddressNotInGreyList();\n\n    /**\n     * @dev Define role for managing the grey list\n     */\n    bytes32 public constant GREYLIST_MANAGER_ROLE = keccak256(\"GREYLIST_MANAGER_ROLE\");\n    \n    /**\n     * @dev Mapping to keep track of greylisted wallet addresses\n     */\n    mapping(address => bool) private _greyList;\n\n    /**\n     * @dev Emitted when an address is added to the grey list.\n     * @param account The address that has been greylisted.\n     */\n    event GreyListed(address indexed account);\n\n    /**\n     * @dev Emitted when an address is removed from the grey list.\n     * @param account The address that has been removed from the grey list.\n     */\n    event RemovedFromGreyList(address indexed account);\n    \n    /**\n     * @dev Constructor will disable initializers.\n     */\n\n    constructor() {\n        _disableInitializers(); // Locks the implementation\n    }\n\n    /**\n     * @dev Initializer\n     */\n    function initialize() public initializer {\n        __ERC20_init(\"Alvara\", \"ALVA\");\n        __ERC20Burnable_init();\n        __WithSupervisedTransfers_init();\n\n        _mint(msg.sender, 200_000_000 * 10**decimals());\n    }\n\n    /**\n     * @dev Adds a wallet address to the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\n     * @param account The address to be added to the grey list.\n     */\n    function addToGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {\n        if (_greyList[account]) {\n            revert AddressAlreadyGreylisted();\n        }\n        _greyList[account] = true;\n        emit GreyListed(account);\n    }\n\n    /**\n     * @dev Removes an address from the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\n     * @param account The address to be removed from the grey list.\n     */\n    function removeFromGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {\n        if (!_greyList[account]) {\n            revert AddressNotInGreyList(); // Revert if the address is not greylisted\n        }\n        _greyList[account] = false;\n        emit RemovedFromGreyList(account);\n    }\n\n    /**\n     * @dev Checks if an address is a part of grey list.\n     * @param account The address to be checked.\n     * @return true if the address is on the grey list, false otherwise.\n     */\n    function isGreyListed(address account) public view returns (bool){\n        return _greyList[account]; \n    }\n\n    /**\n     * @dev Override _transfer to add a custom check for greylist\n     */\n    function _transfer(\n        address from, \n        address to, \n        uint256 amount\n        ) internal override {\n            if (_greyList[from]) {\n                revert ActionRestricted(); // Restrict Grey Listed address to perform transfer action\n            }\n            super._transfer(from, to, amount);\n    }\n\n    /**\n     * @dev Public Transfer From method including supervised transfer control\n    */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public override supervisedTransferFrom(from, to) returns (bool) {\n        return super.transferFrom(from, to, amount);\n    }\n}"
			},
			"contracts/utils/WithSupervisedTransfers.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\n/**\n * Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method.\n * The admin can also specify listing timestamp.\n * After the token listing, anyone can tranferFrom without any restrictions forever.\n * Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.\n */\nabstract contract WithSupervisedTransfers is AccessControlUpgradeable {\n    /**\n     * @dev Once the listingTimestamp passes (which disables supervised transfers) it can never be set again.\n     * This ensures once supervised transfers are disabled, they can never be enabled again.\n     */\n    error TokenAlreadyListed();\n\n    /**\n     * @dev Used before listing if not allowed transferFrom occurs.\n     */\n    error SupervisedTranferFrom();\n\n    /**\n     * Called every time the listing timestamp is updated for easy off-chain tracking.\n     * @param newListingTimestamp the value of the new listing timestamp\n     */\n    event ListingTimestampUpdated(uint32 newListingTimestamp);\n\n    bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =\n        keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\");\n    uint32 public listingTimestamp;\n\n    /**\n     * This modifier blocks all tranferFrom function calls unless:\n     * - the token has already been listed\n     * - OR the transaction involves admin\n     * - OR the reciver is whitelisted\n     * This modifier MUST be used on the transferFrom function.\n     */\n    modifier supervisedTransferFrom(address from, address to) {\n        bool duringSupervisedTransfers = listingTimestamp == 0 ||\n            block.timestamp < listingTimestamp;\n        if (duringSupervisedTransfers) {\n            bool transactionInvolvesAdmin = hasRole(DEFAULT_ADMIN_ROLE, from) ||\n                hasRole(DEFAULT_ADMIN_ROLE, to) ||\n                hasRole(DEFAULT_ADMIN_ROLE, _msgSender());\n            if (\n                !transactionInvolvesAdmin &&\n                !hasRole(ALLOWED_TRANSFER_FROM_ROLE, to)\n            ) {\n                revert SupervisedTranferFrom();\n            }\n        }\n        _;\n    }\n\n    /**\n     * The initialize grants the admin role to the deployer\n     */\n    function __WithSupervisedTransfers_init() internal onlyInitializing {\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n\n    /**\n     * Allows the admin to specify when the token should become tradeable.\n     * Once the token is tradeable, transferFrom can never be supervised again.\n     * @param newListingTimestamp epoch time of when the token is listed on DEX\n     */\n    function setListingTimestamp(uint32 newListingTimestamp)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {\n            revert TokenAlreadyListed();\n        }\n        emit ListingTimestampUpdated(newListingTimestamp);\n        listingTimestamp = newListingTimestamp;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "prague"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2013,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1632:13493  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1632:13493  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3700:3712  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3544:3546  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3851:3858  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3886  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2570:2583  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2602:2607  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2595:2607  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4889  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4955:4962  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4964:4970  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4947  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4988:4992  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4981:4992  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5658:5662  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5730:5734  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5745:5751  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5729  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5772:5776  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5778:5780  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5782:5788  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5771  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5806:5810  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6300:6304  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6407:6417  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6388  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6417  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6362  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2783:2796  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2815:2822  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2808:2822  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:7131  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7116  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7080:7132  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7170:7185  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7166  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7185  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7270:7275  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7277:7284  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7320  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7302  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7320  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7269  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4181  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4248:4250  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4252:4258  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4240  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4434:4441  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4471  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4487  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10916:10935  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10994:11015  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11076  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11092  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11101  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11560  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11573:11578  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11580:11587  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11572  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11588  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11618  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11639  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11598:11841  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11683:11689  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11679  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11689  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11779  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11781:11788  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11815  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11806  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11815  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11773  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11526:11847  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7814:8602  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7910:7928  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7988:8004  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8104:8123  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8135  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8159:8180  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8295  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8295  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8485  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8495  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8289:8295  amount */\n      dup7\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8558:8595  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12431:12522  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506108218061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x821 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLF 0xEA03 0xC1 STOP DELEGATECALL EXTCALL BLOBHASH 0xC1 0xAB 0xD3 PUSH25 0xF2D2F7EF5728C697CC834133B4EC4140DB5B07FD64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1632:11861:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1185": {
									"entryPoint": null,
									"id": 1185,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1120": {
									"entryPoint": 845,
									"id": 1120,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1174": {
									"entryPoint": null,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1717": {
									"entryPoint": null,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1163": {
									"entryPoint": 1136,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_946": {
									"entryPoint": 1256,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_741": {
									"entryPoint": 803,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_766": {
									"entryPoint": 555,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_674": {
									"entryPoint": null,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_869": {
									"entryPoint": 663,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_828": {
									"entryPoint": 615,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_654": {
									"entryPoint": 411,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_664": {
									"entryPoint": 648,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_799": {
									"entryPoint": 580,
									"id": 799,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_723": {
									"entryPoint": 790,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:16",
										"nodeType": "YulBlock",
										"src": "0:5716:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:16",
													"nodeType": "YulBlock",
													"src": "135:297:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:16",
																		"nodeType": "YulLiteral",
																		"src": "163:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:16"
																},
																"nativeSrc": "145:21:16",
																"nodeType": "YulFunctionCall",
																"src": "145:21:16"
															},
															"nativeSrc": "145:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:16"
														},
														{
															"nativeSrc": "175:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:16"
																},
																"nativeSrc": "189:13:16",
																"nodeType": "YulFunctionCall",
																"src": "189:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:16",
																	"nodeType": "YulTypedName",
																	"src": "179:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:16",
																				"nodeType": "YulLiteral",
																				"src": "233:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:16"
																		},
																		"nativeSrc": "218:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:16"
																},
																"nativeSrc": "211:34:16",
																"nodeType": "YulFunctionCall",
																"src": "211:34:16"
															},
															"nativeSrc": "211:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:16",
																				"nodeType": "YulLiteral",
																				"src": "275:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:16"
																		},
																		"nativeSrc": "260:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:16",
																				"nodeType": "YulLiteral",
																				"src": "292:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:16"
																		},
																		"nativeSrc": "280:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:16"
																},
																"nativeSrc": "254:50:16",
																"nodeType": "YulFunctionCall",
																"src": "254:50:16"
															},
															"nativeSrc": "254:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:16"
																				},
																				"nativeSrc": "324:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:16",
																				"nodeType": "YulLiteral",
																				"src": "348:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:16"
																		},
																		"nativeSrc": "320:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:16",
																		"nodeType": "YulLiteral",
																		"src": "353:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:16"
																},
																"nativeSrc": "313:42:16",
																"nodeType": "YulFunctionCall",
																"src": "313:42:16"
															},
															"nativeSrc": "313:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:16"
														},
														{
															"nativeSrc": "364:62:16",
															"nodeType": "YulAssignment",
															"src": "364:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:16",
																								"nodeType": "YulLiteral",
																								"src": "407:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:16"
																						},
																						"nativeSrc": "395:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:16",
																								"nodeType": "YulLiteral",
																								"src": "416:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:16"
																						},
																						"nativeSrc": "412:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:16"
																				},
																				"nativeSrc": "391:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:16"
																		},
																		"nativeSrc": "376:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:16",
																		"nodeType": "YulLiteral",
																		"src": "423:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:16"
																},
																"nativeSrc": "372:54:16",
																"nodeType": "YulFunctionCall",
																"src": "372:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:16",
														"nodeType": "YulTypedName",
														"src": "104:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:16",
														"nodeType": "YulTypedName",
														"src": "115:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:16",
														"nodeType": "YulTypedName",
														"src": "126:4:16",
														"type": ""
													}
												],
												"src": "14:418:16"
											},
											{
												"body": {
													"nativeSrc": "486:124:16",
													"nodeType": "YulBlock",
													"src": "486:124:16",
													"statements": [
														{
															"nativeSrc": "496:29:16",
															"nodeType": "YulAssignment",
															"src": "496:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:16"
																},
																"nativeSrc": "505:20:16",
																"nodeType": "YulFunctionCall",
																"src": "505:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:16",
																"nodeType": "YulBlock",
																"src": "588:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:16",
																					"nodeType": "YulLiteral",
																					"src": "597:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:16",
																					"nodeType": "YulLiteral",
																					"src": "600:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:16"
																			},
																			"nativeSrc": "590:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:16"
																		},
																		"nativeSrc": "590:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:16",
																										"nodeType": "YulLiteral",
																										"src": "573:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:16",
																										"nodeType": "YulLiteral",
																										"src": "578:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:16"
																								},
																								"nativeSrc": "569:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:16",
																								"nodeType": "YulLiteral",
																								"src": "582:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:16"
																						},
																						"nativeSrc": "565:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:16"
																				},
																				"nativeSrc": "554:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:16"
																		},
																		"nativeSrc": "544:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:16"
																},
																"nativeSrc": "537:50:16",
																"nodeType": "YulFunctionCall",
																"src": "537:50:16"
															},
															"nativeSrc": "534:70:16",
															"nodeType": "YulIf",
															"src": "534:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:16",
														"nodeType": "YulTypedName",
														"src": "465:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:16",
														"nodeType": "YulTypedName",
														"src": "476:5:16",
														"type": ""
													}
												],
												"src": "437:173:16"
											},
											{
												"body": {
													"nativeSrc": "702:213:16",
													"nodeType": "YulBlock",
													"src": "702:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:16",
																"nodeType": "YulBlock",
																"src": "748:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:16",
																					"nodeType": "YulLiteral",
																					"src": "757:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:16",
																					"nodeType": "YulLiteral",
																					"src": "760:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:16"
																			},
																			"nativeSrc": "750:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:16"
																		},
																		"nativeSrc": "750:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:16"
																		},
																		"nativeSrc": "719:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:16",
																		"nodeType": "YulLiteral",
																		"src": "744:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:16"
																},
																"nativeSrc": "715:32:16",
																"nodeType": "YulFunctionCall",
																"src": "715:32:16"
															},
															"nativeSrc": "712:52:16",
															"nodeType": "YulIf",
															"src": "712:52:16"
														},
														{
															"nativeSrc": "773:39:16",
															"nodeType": "YulAssignment",
															"src": "773:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:16"
																},
																"nativeSrc": "783:29:16",
																"nodeType": "YulFunctionCall",
																"src": "783:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:16"
																}
															]
														},
														{
															"nativeSrc": "821:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:16",
																"nodeType": "YulLiteral",
																"src": "834:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:16",
																	"nodeType": "YulTypedName",
																	"src": "825:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:16",
															"nodeType": "YulAssignment",
															"src": "844:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:16",
																				"nodeType": "YulLiteral",
																				"src": "881:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:16"
																		},
																		"nativeSrc": "866:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:16"
																},
																"nativeSrc": "853:32:16",
																"nodeType": "YulFunctionCall",
																"src": "853:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:16"
																}
															]
														},
														{
															"nativeSrc": "894:15:16",
															"nodeType": "YulAssignment",
															"src": "894:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:16",
																"nodeType": "YulIdentifier",
																"src": "904:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:16",
														"nodeType": "YulTypedName",
														"src": "660:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:16",
														"nodeType": "YulTypedName",
														"src": "671:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:16",
														"nodeType": "YulTypedName",
														"src": "683:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:16",
														"nodeType": "YulTypedName",
														"src": "691:6:16",
														"type": ""
													}
												],
												"src": "615:300:16"
											},
											{
												"body": {
													"nativeSrc": "1015:92:16",
													"nodeType": "YulBlock",
													"src": "1015:92:16",
													"statements": [
														{
															"nativeSrc": "1025:26:16",
															"nodeType": "YulAssignment",
															"src": "1025:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:16"
																},
																"nativeSrc": "1033:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:16"
																				},
																				"nativeSrc": "1085:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:16"
																		},
																		"nativeSrc": "1078:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:16"
																},
																"nativeSrc": "1060:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:16"
															},
															"nativeSrc": "1060:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:16",
														"nodeType": "YulTypedName",
														"src": "984:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:16",
														"nodeType": "YulTypedName",
														"src": "995:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:16",
														"nodeType": "YulTypedName",
														"src": "1006:4:16",
														"type": ""
													}
												],
												"src": "920:187:16"
											},
											{
												"body": {
													"nativeSrc": "1213:76:16",
													"nodeType": "YulBlock",
													"src": "1213:76:16",
													"statements": [
														{
															"nativeSrc": "1223:26:16",
															"nodeType": "YulAssignment",
															"src": "1223:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:16"
																},
																"nativeSrc": "1231:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:16"
																},
																"nativeSrc": "1258:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:16"
															},
															"nativeSrc": "1258:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:16",
														"nodeType": "YulTypedName",
														"src": "1182:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:16",
														"nodeType": "YulTypedName",
														"src": "1193:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:16",
														"nodeType": "YulTypedName",
														"src": "1204:4:16",
														"type": ""
													}
												],
												"src": "1112:177:16"
											},
											{
												"body": {
													"nativeSrc": "1398:270:16",
													"nodeType": "YulBlock",
													"src": "1398:270:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:16",
																"nodeType": "YulBlock",
																"src": "1444:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:16"
																			},
																			"nativeSrc": "1446:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:16"
																		},
																		"nativeSrc": "1446:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:16"
																		},
																		"nativeSrc": "1415:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:16"
																},
																"nativeSrc": "1411:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:16"
															},
															"nativeSrc": "1408:52:16",
															"nodeType": "YulIf",
															"src": "1408:52:16"
														},
														{
															"nativeSrc": "1469:39:16",
															"nodeType": "YulAssignment",
															"src": "1469:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:16"
																},
																"nativeSrc": "1479:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:16"
																}
															]
														},
														{
															"nativeSrc": "1517:48:16",
															"nodeType": "YulAssignment",
															"src": "1517:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:16"
																		},
																		"nativeSrc": "1546:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:16"
																},
																"nativeSrc": "1527:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:16"
																}
															]
														},
														{
															"nativeSrc": "1574:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:16",
																"nodeType": "YulLiteral",
																"src": "1587:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:16",
															"nodeType": "YulAssignment",
															"src": "1597:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:16"
																		},
																		"nativeSrc": "1619:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:16"
																},
																"nativeSrc": "1606:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:16"
																}
															]
														},
														{
															"nativeSrc": "1647:15:16",
															"nodeType": "YulAssignment",
															"src": "1647:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:16",
																"nodeType": "YulIdentifier",
																"src": "1657:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:16",
														"nodeType": "YulTypedName",
														"src": "1348:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:16",
														"nodeType": "YulTypedName",
														"src": "1359:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:16",
														"nodeType": "YulTypedName",
														"src": "1371:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:16",
														"nodeType": "YulTypedName",
														"src": "1379:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:16",
														"nodeType": "YulTypedName",
														"src": "1387:6:16",
														"type": ""
													}
												],
												"src": "1294:374:16"
											},
											{
												"body": {
													"nativeSrc": "1770:87:16",
													"nodeType": "YulBlock",
													"src": "1770:87:16",
													"statements": [
														{
															"nativeSrc": "1780:26:16",
															"nodeType": "YulAssignment",
															"src": "1780:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:16"
																},
																"nativeSrc": "1788:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:16"
																		},
																		"nativeSrc": "1833:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:16"
																},
																"nativeSrc": "1815:36:16",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:16"
															},
															"nativeSrc": "1815:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:16",
														"nodeType": "YulTypedName",
														"src": "1739:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:16",
														"nodeType": "YulTypedName",
														"src": "1750:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:16",
														"nodeType": "YulTypedName",
														"src": "1761:4:16",
														"type": ""
													}
												],
												"src": "1673:184:16"
											},
											{
												"body": {
													"nativeSrc": "1932:116:16",
													"nodeType": "YulBlock",
													"src": "1932:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:16",
																"nodeType": "YulBlock",
																"src": "1978:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:16"
																			},
																			"nativeSrc": "1980:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:16"
																		},
																		"nativeSrc": "1980:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:16"
																		},
																		"nativeSrc": "1949:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:16"
																},
																"nativeSrc": "1945:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:16"
															},
															"nativeSrc": "1942:52:16",
															"nodeType": "YulIf",
															"src": "1942:52:16"
														},
														{
															"nativeSrc": "2003:39:16",
															"nodeType": "YulAssignment",
															"src": "2003:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:16"
																},
																"nativeSrc": "2013:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:16",
														"nodeType": "YulTypedName",
														"src": "1898:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:16",
														"nodeType": "YulTypedName",
														"src": "1909:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:16",
														"nodeType": "YulTypedName",
														"src": "1921:6:16",
														"type": ""
													}
												],
												"src": "1862:186:16"
											},
											{
												"body": {
													"nativeSrc": "2140:173:16",
													"nodeType": "YulBlock",
													"src": "2140:173:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:16",
																"nodeType": "YulBlock",
																"src": "2186:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:16"
																			},
																			"nativeSrc": "2188:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:16"
																		},
																		"nativeSrc": "2188:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:16"
																		},
																		"nativeSrc": "2157:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:16"
																},
																"nativeSrc": "2153:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:16"
															},
															"nativeSrc": "2150:52:16",
															"nodeType": "YulIf",
															"src": "2150:52:16"
														},
														{
															"nativeSrc": "2211:39:16",
															"nodeType": "YulAssignment",
															"src": "2211:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:16"
																},
																"nativeSrc": "2221:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:16"
																}
															]
														},
														{
															"nativeSrc": "2259:48:16",
															"nodeType": "YulAssignment",
															"src": "2259:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:16"
																		},
																		"nativeSrc": "2288:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:16"
																},
																"nativeSrc": "2269:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:16",
														"nodeType": "YulTypedName",
														"src": "2098:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:16",
														"nodeType": "YulTypedName",
														"src": "2109:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:16",
														"nodeType": "YulTypedName",
														"src": "2121:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:16",
														"nodeType": "YulTypedName",
														"src": "2129:6:16",
														"type": ""
													}
												],
												"src": "2053:260:16"
											},
											{
												"body": {
													"nativeSrc": "2373:325:16",
													"nodeType": "YulBlock",
													"src": "2373:325:16",
													"statements": [
														{
															"nativeSrc": "2383:22:16",
															"nodeType": "YulAssignment",
															"src": "2383:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:16"
																},
																"nativeSrc": "2393:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:16"
																}
															]
														},
														{
															"nativeSrc": "2414:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:16"
																},
																"nativeSrc": "2440:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:16",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:16",
																"nodeType": "YulBlock",
																"src": "2491:31:16",
																"statements": [
																	{
																		"nativeSrc": "2493:27:16",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:16"
																			},
																			"nativeSrc": "2503:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:16"
																},
																"nativeSrc": "2464:26:16",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:16"
															},
															"nativeSrc": "2461:61:16",
															"nodeType": "YulIf",
															"src": "2461:61:16"
														},
														{
															"body": {
																"nativeSrc": "2581:111:16",
																"nodeType": "YulBlock",
																"src": "2581:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:16"
																					},
																					"nativeSrc": "2605:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:16"
																			},
																			"nativeSrc": "2595:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:16"
																		},
																		"nativeSrc": "2595:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:16"
																			},
																			"nativeSrc": "2639:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:16"
																		},
																		"nativeSrc": "2639:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:16"
																			},
																			"nativeSrc": "2667:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:16"
																		},
																		"nativeSrc": "2667:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:16"
																		},
																		"nativeSrc": "2557:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:16"
																},
																"nativeSrc": "2534:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:16"
															},
															"nativeSrc": "2531:161:16",
															"nodeType": "YulIf",
															"src": "2531:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:16",
														"nodeType": "YulTypedName",
														"src": "2353:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:16",
														"nodeType": "YulTypedName",
														"src": "2362:6:16",
														"type": ""
													}
												],
												"src": "2318:380:16"
											},
											{
												"body": {
													"nativeSrc": "2751:174:16",
													"nodeType": "YulBlock",
													"src": "2751:174:16",
													"statements": [
														{
															"nativeSrc": "2761:16:16",
															"nodeType": "YulAssignment",
															"src": "2761:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:16"
																},
																"nativeSrc": "2768:9:16",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:16",
																"nodeType": "YulBlock",
																"src": "2808:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:16"
																					},
																					"nativeSrc": "2832:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:16"
																			},
																			"nativeSrc": "2822:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:16"
																		},
																		"nativeSrc": "2822:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:16"
																			},
																			"nativeSrc": "2866:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:16"
																		},
																		"nativeSrc": "2866:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:16"
																			},
																			"nativeSrc": "2894:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:16"
																		},
																		"nativeSrc": "2894:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:16"
																},
																"nativeSrc": "2789:10:16",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:16"
															},
															"nativeSrc": "2786:133:16",
															"nodeType": "YulIf",
															"src": "2786:133:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:16",
														"nodeType": "YulTypedName",
														"src": "2734:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:16",
														"nodeType": "YulTypedName",
														"src": "2737:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:16",
														"nodeType": "YulTypedName",
														"src": "2743:3:16",
														"type": ""
													}
												],
												"src": "2703:222:16"
											},
											{
												"body": {
													"nativeSrc": "3104:227:16",
													"nodeType": "YulBlock",
													"src": "3104:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:16"
																},
																"nativeSrc": "3114:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:16"
															},
															"nativeSrc": "3114:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:16"
																		},
																		"nativeSrc": "3151:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:16"
																},
																"nativeSrc": "3144:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:16"
															},
															"nativeSrc": "3144:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:16"
																		},
																		"nativeSrc": "3190:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:16"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:16",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:16",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:16"
																},
																"nativeSrc": "3183:62:16",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:16"
															},
															"nativeSrc": "3183:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:16"
																		},
																		"nativeSrc": "3261:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:16"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:16",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:16",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:16"
																},
																"nativeSrc": "3254:35:16",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:16"
															},
															"nativeSrc": "3254:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:16"
														},
														{
															"nativeSrc": "3298:27:16",
															"nodeType": "YulAssignment",
															"src": "3298:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:16",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:16"
																},
																"nativeSrc": "3306:19:16",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:16",
														"nodeType": "YulTypedName",
														"src": "3081:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:16",
														"nodeType": "YulTypedName",
														"src": "3095:4:16",
														"type": ""
													}
												],
												"src": "2930:401:16"
											},
											{
												"body": {
													"nativeSrc": "3510:226:16",
													"nodeType": "YulBlock",
													"src": "3510:226:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:16"
																},
																"nativeSrc": "3520:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:16"
															},
															"nativeSrc": "3520:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:16"
																		},
																		"nativeSrc": "3557:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:16",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:16"
																},
																"nativeSrc": "3550:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:16"
															},
															"nativeSrc": "3550:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:16"
																		},
																		"nativeSrc": "3596:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:16",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:16",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:16"
																},
																"nativeSrc": "3589:62:16",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:16"
															},
															"nativeSrc": "3589:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:16"
																		},
																		"nativeSrc": "3667:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:16"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:16",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:16",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:16"
																},
																"nativeSrc": "3660:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:16"
															},
															"nativeSrc": "3660:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:16"
														},
														{
															"nativeSrc": "3703:27:16",
															"nodeType": "YulAssignment",
															"src": "3703:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:16",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:16"
																},
																"nativeSrc": "3711:19:16",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:16",
														"nodeType": "YulTypedName",
														"src": "3487:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:16",
														"nodeType": "YulTypedName",
														"src": "3501:4:16",
														"type": ""
													}
												],
												"src": "3336:400:16"
											},
											{
												"body": {
													"nativeSrc": "3915:224:16",
													"nodeType": "YulBlock",
													"src": "3915:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:16"
																},
																"nativeSrc": "3925:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:16"
															},
															"nativeSrc": "3925:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:16"
																		},
																		"nativeSrc": "3962:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:16"
																},
																"nativeSrc": "3955:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:16"
															},
															"nativeSrc": "3955:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:16"
																		},
																		"nativeSrc": "4001:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:16",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:16",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:16"
																},
																"nativeSrc": "3994:62:16",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:16"
															},
															"nativeSrc": "3994:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:16"
																		},
																		"nativeSrc": "4072:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:16"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:16",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:16"
																},
																"nativeSrc": "4065:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:16"
															},
															"nativeSrc": "4065:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:16"
														},
														{
															"nativeSrc": "4106:27:16",
															"nodeType": "YulAssignment",
															"src": "4106:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:16"
																},
																"nativeSrc": "4114:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:16",
														"nodeType": "YulTypedName",
														"src": "3892:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:16",
														"nodeType": "YulTypedName",
														"src": "3906:4:16",
														"type": ""
													}
												],
												"src": "3741:398:16"
											},
											{
												"body": {
													"nativeSrc": "4318:179:16",
													"nodeType": "YulBlock",
													"src": "4318:179:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:16"
																},
																"nativeSrc": "4328:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:16"
															},
															"nativeSrc": "4328:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:16"
																		},
																		"nativeSrc": "4365:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:16"
																},
																"nativeSrc": "4358:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:16"
															},
															"nativeSrc": "4358:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:16"
																		},
																		"nativeSrc": "4404:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:16"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:16",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:16",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:16"
																},
																"nativeSrc": "4397:59:16",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:16"
															},
															"nativeSrc": "4397:59:16",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:16"
														},
														{
															"nativeSrc": "4465:26:16",
															"nodeType": "YulAssignment",
															"src": "4465:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:16"
																},
																"nativeSrc": "4473:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:16",
														"nodeType": "YulTypedName",
														"src": "4295:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:16",
														"nodeType": "YulTypedName",
														"src": "4309:4:16",
														"type": ""
													}
												],
												"src": "4144:353:16"
											},
											{
												"body": {
													"nativeSrc": "4676:227:16",
													"nodeType": "YulBlock",
													"src": "4676:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:16"
																},
																"nativeSrc": "4686:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:16"
															},
															"nativeSrc": "4686:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:16"
																		},
																		"nativeSrc": "4723:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:16"
																},
																"nativeSrc": "4716:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:16"
															},
															"nativeSrc": "4716:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:16"
																		},
																		"nativeSrc": "4762:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:16",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:16",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:16"
																},
																"nativeSrc": "4755:62:16",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:16"
															},
															"nativeSrc": "4755:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:16"
																		},
																		"nativeSrc": "4833:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:16"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:16",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:16",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:16"
																},
																"nativeSrc": "4826:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:16"
															},
															"nativeSrc": "4826:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:16"
														},
														{
															"nativeSrc": "4870:27:16",
															"nodeType": "YulAssignment",
															"src": "4870:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:16"
																},
																"nativeSrc": "4878:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:16",
														"nodeType": "YulTypedName",
														"src": "4653:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:16",
														"nodeType": "YulTypedName",
														"src": "4667:4:16",
														"type": ""
													}
												],
												"src": "4502:401:16"
											},
											{
												"body": {
													"nativeSrc": "5082:225:16",
													"nodeType": "YulBlock",
													"src": "5082:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:16"
																},
																"nativeSrc": "5092:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:16"
															},
															"nativeSrc": "5092:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:16"
																		},
																		"nativeSrc": "5129:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:16"
																},
																"nativeSrc": "5122:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:16"
															},
															"nativeSrc": "5122:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:16"
																		},
																		"nativeSrc": "5168:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:16",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:16",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:16"
																},
																"nativeSrc": "5161:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:16"
															},
															"nativeSrc": "5161:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:16"
																		},
																		"nativeSrc": "5239:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:16"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:16",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:16",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:16"
																},
																"nativeSrc": "5232:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:16"
															},
															"nativeSrc": "5232:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:16"
														},
														{
															"nativeSrc": "5274:27:16",
															"nodeType": "YulAssignment",
															"src": "5274:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:16",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:16"
																},
																"nativeSrc": "5282:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:16",
														"nodeType": "YulTypedName",
														"src": "5059:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:16",
														"nodeType": "YulTypedName",
														"src": "5073:4:16",
														"type": ""
													}
												],
												"src": "4908:399:16"
											},
											{
												"body": {
													"nativeSrc": "5486:228:16",
													"nodeType": "YulBlock",
													"src": "5486:228:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:16"
																},
																"nativeSrc": "5496:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:16"
															},
															"nativeSrc": "5496:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:16"
																		},
																		"nativeSrc": "5533:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:16"
																},
																"nativeSrc": "5526:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:16"
															},
															"nativeSrc": "5526:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:16"
																		},
																		"nativeSrc": "5572:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:16",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:16",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:16"
																},
																"nativeSrc": "5565:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:16"
															},
															"nativeSrc": "5565:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:16"
																		},
																		"nativeSrc": "5643:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:16"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:16",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:16",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:16"
																},
																"nativeSrc": "5636:36:16",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:16"
															},
															"nativeSrc": "5636:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:16"
														},
														{
															"nativeSrc": "5681:27:16",
															"nodeType": "YulAssignment",
															"src": "5681:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:16",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:16"
																},
																"nativeSrc": "5689:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:16",
														"nodeType": "YulTypedName",
														"src": "5463:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:16",
														"nodeType": "YulTypedName",
														"src": "5477:4:16",
														"type": ""
													}
												],
												"src": "5312:402:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLF 0xEA03 0xC1 STOP DELEGATECALL EXTCALL BLOBHASH 0xC1 0xAB 0xD3 PUSH25 0xF2D2F7EF5728C697CC834133B4EC4140DB5B07FD64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1632:11861:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4802:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:16;;1078:22;1060:41;;1048:2;1033:18;4802:197:3;920:187:16;3613:106:3;3700:12;;3613:106;;;1258:25:16;;;1246:2;1231:18;3613:106:3;1112:177:16;5561:256:3;;;;;;:::i;:::-;;:::i;3462:91::-;;;3544:2;1815:36:16;;1803:2;1788:18;3462:91:3;1673:184:16;6212:234:3;;;;;;:::i;:::-;;:::i;3777:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3877:18:3;3851:7;3877:18;;;:9;:18;;;;;;;3777:125;2727:102;;;:::i;6933:427::-;;;;;;:::i;:::-;;:::i;4098:189::-;;;;;;:::i;:::-;;:::i;4345:149::-;;;;;;:::i;:::-;;:::i;2516:98::-;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;965:10:8;4939:32:3;965:10:8;4955:7:3;4964:6;4939:8;:32::i;:::-;4988:4;4981:11;;;4802:197;;;;;:::o;5561:256::-;5658:4;965:10:8;5714:38:3;5730:4;965:10:8;5745:6:3;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;:::-;-1:-1:-1;5806:4:3;;5561:256;-1:-1:-1;;;;5561:256:3:o;6212:234::-;6300:4;965:10:8;6354:64:3;965:10:8;6370:7:3;6407:10;6379:25;965:10:8;6370:7:3;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;2727:102::-;2783:13;2815:7;2808:14;;;;;:::i;6933:427::-;7026:4;965:10:8;7026:4:3;7107:25;965:10:8;7124:7:3;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;-1:-1:-1;;;7142:85:3;;3132:2:16;7142:85:3;;;3114:21:16;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:16;;;3254:35;3306:19;;7142:85:3;;;;;;;;;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;4098:189::-;4177:4;965:10:8;4231:28:3;965:10:8;4248:2:3;4252:6;4231:9;:28::i;4345:149::-;-1:-1:-1;;;;;4460:18:3;;;4434:7;4460:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4345:149::o;10815:340::-;-1:-1:-1;;;;;10916:19:3;;10908:68;;;;-1:-1:-1;;;10908:68:3;;3538:2:16;10908:68:3;;;3520:21:16;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:16;;;3660:34;3711:19;;10908:68:3;3336:400:16;10908:68:3;-1:-1:-1;;;;;10994:21:3;;10986:68;;;;-1:-1:-1;;;10986:68:3;;3943:2:16;10986:68:3;;;3925:21:16;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:16;;;4065:32;4114:19;;10986:68:3;3741:398:16;10986:68:3;-1:-1:-1;;;;;11065:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11116:32;;1258:25:16;;;11116:32:3;;1231:18:16;11116:32:3;;;;;;;10815:340;;;:::o;11436:411::-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;-1:-1:-1;;11602:16:3;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;-1:-1:-1;;;11655:68:3;;4346:2:16;11655:68:3;;;4328:21:16;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;11655:68:3;4144:353:16;11655:68:3;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11526:321;11436:411;;;:::o;7814:788::-;-1:-1:-1;;;;;7910:18:3;;7902:68;;;;-1:-1:-1;;;7902:68:3;;4704:2:16;7902:68:3;;;4686:21:16;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:16;;;4826:35;4878:19;;7902:68:3;4502:401:16;7902:68:3;-1:-1:-1;;;;;7988:16:3;;7980:64;;;;-1:-1:-1;;;7980:64:3;;5110:2:16;7980:64:3;;;5092:21:16;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:16;;;5232:33;5282:19;;7980:64:3;4908:399:16;7980:64:3;-1:-1:-1;;;;;8126:15:3;;8104:19;8126:15;;;:9;:15;;;;;;8159:21;;;;8151:72;;;;-1:-1:-1;;;8151:72:3;;5514:2:16;8151:72:3;;;5496:21:16;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:16;;;5636:36;5689:19;;8151:72:3;5312:402:16;8151:72:3;-1:-1:-1;;;;;8257:15:3;;;;;;;:9;:15;;;;;;8275:20;;;8257:38;;8472:13;;;;;;;;;;:23;;;;;;8521:26;;;;;;8289:6;1258:25:16;;1246:2;1231:18;;1112:177;8521:26:3;;;;;;;;8558:37;12431:91;14:418:16;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:16;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:16:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:16;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:16:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416200",
								"executionCost": "453",
								"totalCost": "416653"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2556",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51141",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 13493,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3ea03c100f4f849c1abd378f2d2f7ef5728c697cc834133b4ec4140db5b07fd64736f6c634300081e0033",
									".code": [
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 13493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3777,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2727,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4939,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5714,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5762,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5561,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6379,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6379,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6354,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2808,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 7107,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7166,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7261,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4231,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4471,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11076,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 11563,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11602,
											"end": 11639,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11781,
											"end": 11788,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11790,
											"end": 11806,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11790,
											"end": 11815,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 11765,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11526,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 12431,
											"end": 12522,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 598,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 604,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 606,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 608,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 610,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1190,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ERC20BurnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 598,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 604,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 606,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 608,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 610,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1190,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1333,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP16 PUSH15 0xE15BFE85E156DEE162B13CBC584722 STOP CALLF 0x422E SWAP15 PUSH19 0x8CBBCA907B6CA65A64736F6C634300081E0033 ",
							"sourceMap": "242:2603:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP16 PUSH15 0xE15BFE85E156DEE162B13CBC584722 STOP CALLF 0x422E SWAP15 PUSH19 0x8CBBCA907B6CA65A64736F6C634300081E0033 ",
							"sourceMap": "242:2603:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220878f6ee15bfe85e156dee162b13cbc58472200e3422e9e728cbbca907b6ca65a64736f6c634300081e0033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2013,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x77 CALL SWAP5 0x25 PUSH18 0x4FFE7343D54D67E1C0C31E90662469AADFE1 DUP4 0x4B PC 0xBB PUSH22 0x7F9DC664736F6C634300081E00330000000000000000 ",
							"sourceMap": "202:12593:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x77 CALL SWAP5 0x25 PUSH18 0x4FFE7343D54D67E1C0C31E90662469AADFE1 DUP4 0x4B PC 0xBB PUSH22 0x7F9DC664736F6C634300081E00330000000000000000 ",
							"sourceMap": "202:12593:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e777f19425714ffe7343d54d67e1c0c31e90662469aadfe1834b58bb757f9dc664736f6c634300081e0033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFDESTRUCT NUMBER DUP9 PUSH11 0x87C67F8D6ACCE4E11728F EXTSTATICCALL 0x1E PUSH32 0x1939AA5763C2F5E278EF9CE54164736F6C634300081E00330000000000000000 ",
							"sourceMap": "215:1058:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFDESTRUCT NUMBER DUP9 PUSH11 0x87C67F8D6ACCE4E11728F EXTSTATICCALL 0x1E PUSH32 0x1939AA5763C2F5E278EF9CE54164736F6C634300081E00330000000000000000 ",
							"sourceMap": "215:1058:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dff43886a087c67f8d6acce4e11728ffb1e7f1939aa5763c2f5e278ef9ce54164736f6c634300081e0033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokens/Alvara.sol": {
				"Alvara": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ActionRestricted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressAlreadyGreylisted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressNotInGreyList",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SupervisedTranferFrom",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyListed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "GreyListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "ListingTimestampUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RemovedFromGreyList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALLOWED_TRANSFER_FROM_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GREYLIST_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToGreyList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isGreyListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingTimestamp",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromGreyList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "setListingTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ActionRestricted()": [
								{
									"details": "Whenever an action is performed that is restricted, this error will be shown"
								}
							],
							"AddressAlreadyGreylisted()": [
								{
									"details": "Error displayed when address is already greylisted"
								}
							],
							"AddressNotInGreyList()": [
								{
									"details": "Error displayed when an address is not in grey list and function tries to remove it "
								}
							],
							"SupervisedTranferFrom()": [
								{
									"details": "Used before listing if not allowed transferFrom occurs."
								}
							],
							"TokenAlreadyListed()": [
								{
									"details": "Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"GreyListed(address)": {
								"details": "Emitted when an address is added to the grey list.",
								"params": {
									"account": "The address that has been greylisted."
								}
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"ListingTimestampUpdated(uint32)": {
								"params": {
									"newListingTimestamp": "the value of the new listing timestamp"
								}
							},
							"RemovedFromGreyList(address)": {
								"details": "Emitted when an address is removed from the grey list.",
								"params": {
									"account": "The address that has been removed from the grey list."
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addToGreyList(address)": {
								"details": "Adds a wallet address to the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.",
								"params": {
									"account": "The address to be added to the grey list."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"constructor": {
								"details": "Constructor will disable initializers."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize()": {
								"details": "Initializer"
							},
							"isGreyListed(address)": {
								"details": "Checks if an address is a part of grey list.",
								"params": {
									"account": "The address to be checked."
								},
								"returns": {
									"_0": "true if the address is on the grey list, false otherwise."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"removeFromGreyList(address)": {
								"details": "Removes an address from the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.",
								"params": {
									"account": "The address to be removed from the grey list."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setListingTimestamp(uint32)": {
								"params": {
									"newListingTimestamp": "epoch time of when the token is listed on DEX"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Public Transfer From method including supervised transfer control"
							}
						},
						"stateVariables": {
							"GREYLIST_MANAGER_ROLE": {
								"details": "Define role for managing the grey list"
							},
							"_greyList": {
								"details": "Mapping to keep track of greylisted wallet addresses"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/Alvara.sol\":370:3967  contract Alvara is... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens/Alvara.sol\":1646:1727  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/tokens/Alvara.sol\":1670:1692  _disableInitializers() */\n  tag_4\n    /* \"contracts/tokens/Alvara.sol\":1670:1690  _disableInitializers */\n  tag_5\n    /* \"contracts/tokens/Alvara.sol\":1670:1692  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"contracts/tokens/Alvara.sol\":370:3967  contract Alvara is... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6007:6020  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6006:6020  !_initializing */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  sload(0x00)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6094:6109  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6109  _initialized != type(uint8).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6137  _initialized */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6140:6155  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"contracts/tokens/Alvara.sol\":370:3967  contract Alvara is... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/Alvara.sol\":370:3967  contract Alvara is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa64a92a8\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdbd192d4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe90cdd1c\n      eq\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      dup1\n      0xa64a92a8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbd39a2a8\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      dup1\n      0x91d14854\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x39509351\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e695cca\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6e4af83e\n      eq\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x38f5a5e4\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3700:3712  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":1549:1574   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3613:3719  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":1403:1580   */\n      jump\n        /* \"contracts/tokens/Alvara.sol\":3747:3965  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_53\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3544:3546  18 */\n      0x12\n        /* \"#utility.yul\":2824:2860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2797:2815   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3462:3553  function decimals() public view virtual override returns (uint8) {... */\n      tag_42\n        /* \"#utility.yul\":2682:2866   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_68\n      tag_77\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/tokens/Alvara.sol\":2187:2433  function addToGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n    tag_12:\n      tag_68\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_38\n      tag_84\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n    tag_14:\n      tag_68\n      tag_88\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1254:1354  bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =... */\n    tag_15:\n      tag_53\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1315:1354  keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\") */\n      0x2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1254:1354  bytes32 public constant ALLOWED_TRANSFER_FROM_ROLE =... */\n      dup2\n      jump\n        /* \"contracts/tokens/Alvara.sol\":2630:2931  function removeFromGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n    tag_16:\n      tag_68\n      tag_95\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_53\n      tag_98\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3851:3858  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3886  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:3895  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3777:3902  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1264:1425  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_18:\n      tag_68\n      tag_102\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/tokens/Alvara.sol\":1773:1993  function initialize() public initializer {... */\n    tag_19:\n      tag_68\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_107\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_21:\n      tag_44\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_53\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_23:\n      tag_38\n      tag_117\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/tokens/Alvara.sol\":3132:3240  function isGreyListed(address account) public view returns (bool){... */\n    tag_24:\n      tag_38\n      tag_121\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":3214:3232  _greyList[account] */\n      and\n        /* \"contracts/tokens/Alvara.sol\":3192:3196  bool */\n      0x00\n        /* \"contracts/tokens/Alvara.sol\":3214:3232  _greyList[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":3214:3223  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":3214:3232  _greyList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":3132:3240  function isGreyListed(address account) public view returns (bool){... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n      tag_38\n      tag_125\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1360:1390  uint32 public listingTimestamp */\n    tag_26:\n      sload(0xfb)\n      tag_128\n      swap1\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_128:\n      mload(0x40)\n        /* \"#utility.yul\":3467:3477   */\n      0xffffffff\n        /* \"#utility.yul\":3455:3478   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3437:3479   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3425:3427   */\n      0x20\n        /* \"#utility.yul\":3410:3428   */\n      add\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1360:1390  uint32 public listingTimestamp */\n      tag_42\n        /* \"#utility.yul\":3293:3485   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_27:\n      tag_68\n      tag_133\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/tokens/Alvara.sol\":948:1030  bytes32 public constant GREYLIST_MANAGER_ROLE = keccak256(\"GREYLIST_MANAGER_ROLE\") */\n    tag_28:\n      tag_53\n        /* \"contracts/tokens/Alvara.sol\":996:1030  keccak256(\"GREYLIST_MANAGER_ROLE\") */\n      0x5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f\n        /* \"contracts/tokens/Alvara.sol\":948:1030  bytes32 public constant GREYLIST_MANAGER_ROLE = keccak256(\"GREYLIST_MANAGER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_29:\n      tag_53\n      tag_139\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2766:3121  function setListingTimestamp(uint32 newListingTimestamp)... */\n    tag_30:\n      tag_68\n      tag_144\n      calldatasize\n      0x04\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3135:3139  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3216  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3256  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_149\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1240  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3256  super.supportsInterface(interfaceId) */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3151:3256  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2570:2583  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2602:2607  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2595:2607  return _name */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_153\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2516:2614  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4889  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4955:4962  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4964:4970  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4947  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4939:4971  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_161:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4988:4992  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4802:4999  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Alvara.sol\":3747:3965  function transferFrom(... */\n    tag_60:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1770:1786  listingTimestamp */\n      sload(0xfb)\n        /* \"contracts/tokens/Alvara.sol\":3899:3903  bool */\n      0x00\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":3880:3884  from */\n      dup5\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":3886:3888  to */\n      dup5\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":3899:3903  bool */\n      dup4\n      swap1\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1770:1786  listingTimestamp */\n      0xffffffff\n      and\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1770:1791  listingTimestamp == 0 */\n      iszero\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1770:1841  listingTimestamp == 0 ||... */\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1825:1841  listingTimestamp */\n      and(0xffffffff, sload(0xfb))\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1807:1822  block.timestamp */\n      timestamp\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1807:1841  block.timestamp < listingTimestamp */\n      lt\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1770:1841  listingTimestamp == 0 ||... */\n    tag_165:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1737:1841  bool duringSupervisedTransfers = listingTimestamp == 0 ||... */\n      swap1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1855:1880  duringSupervisedTransfers */\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1851:2281  if (duringSupervisedTransfers) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1896:1925  bool transactionInvolvesAdmin */\n      0x00\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1928:1961  hasRole(DEFAULT_ADMIN_ROLE, from) */\n      tag_167\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1896:1925  bool transactionInvolvesAdmin */\n      dup2\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1956:1960  from */\n      dup6\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1928:1935  hasRole */\n      tag_108\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1928:1961  hasRole(DEFAULT_ADMIN_ROLE, from) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1928:2012  hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      dup1\n      tag_169\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1981:2012  hasRole(DEFAULT_ADMIN_ROLE, to) */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2009:2011  to */\n      dup5\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1981:1988  hasRole */\n      tag_108\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1981:2012  hasRole(DEFAULT_ADMIN_ROLE, to) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1928:2073  hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2032:2073  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_108\n      jump\t// in\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2032:2073  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n    tag_171:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1896:2073  bool transactionInvolvesAdmin = hasRole(DEFAULT_ADMIN_ROLE, from) ||... */\n      swap1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2109:2133  transactionInvolvesAdmin */\n      dup1\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2108:2133  !transactionInvolvesAdmin */\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2108:2193  !transactionInvolvesAdmin &&... */\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2154:2193  hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      tag_174\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1315:1354  keccak256(\"ALLOWED_TRANSFER_FROM_ROLE\") */\n      0x2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2190:2192  to */\n      dup5\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2154:2161  hasRole */\n      tag_108\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2154:2193  hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2153:2193  !hasRole(ALLOWED_TRANSFER_FROM_ROLE, to) */\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2108:2193  !transactionInvolvesAdmin &&... */\n    tag_173:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2087:2271  if (... */\n      iszero\n      tag_175\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2233:2256  SupervisedTranferFrom() */\n      mload(0x40)\n      shl(0xe0, 0xafae8e97)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2087:2271  if (... */\n    tag_175:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1882:2281  {... */\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":1851:2281  if (duringSupervisedTransfers) {... */\n    tag_166:\n        /* \"contracts/tokens/Alvara.sol\":3922:3958  super.transferFrom(from, to, amount) */\n      tag_177\n        /* \"contracts/tokens/Alvara.sol\":3941:3945  from */\n      dup8\n        /* \"contracts/tokens/Alvara.sol\":3947:3949  to */\n      dup8\n        /* \"contracts/tokens/Alvara.sol\":3951:3957  amount */\n      dup8\n        /* \"contracts/tokens/Alvara.sol\":3922:3940  super.transferFrom */\n      tag_178\n        /* \"contracts/tokens/Alvara.sol\":3922:3958  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/tokens/Alvara.sol\":3915:3958  return super.transferFrom(from, to, amount) */\n      swap8\n        /* \"contracts/tokens/Alvara.sol\":3747:3965  function transferFrom(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5404:5408  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5410:5417  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5403  _grantRole */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4623:4625   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4605:4626   */\n      mstore\n        /* \"#utility.yul\":4662:4664   */\n      0x2f\n        /* \"#utility.yul\":4642:4660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4635:4665   */\n      mstore\n        /* \"#utility.yul\":4701:4735   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":4681:4699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4674:4736   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":4752:4770   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4745:4790   */\n      mstore\n        /* \"#utility.yul\":4807:4826   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6582:6586  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6588:6595  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6581  _revokeRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Alvara.sol\":2187:2433  function addToGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n    tag_82:\n        /* \"contracts/tokens/Alvara.sol\":996:1030  keccak256(\"GREYLIST_MANAGER_ROLE\") */\n      0x5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":2280:2298  _greyList[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":2280:2289  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":2280:2298  _greyList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/Alvara.sol\":2276:2358  if (_greyList[account]) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/tokens/Alvara.sol\":2321:2347  AddressAlreadyGreylisted() */\n      mload(0x40)\n      shl(0xe3, 0x14829857)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/Alvara.sol\":2276:2358  if (_greyList[account]) {... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":2367:2385  _greyList[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":2367:2376  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":2367:2385  _greyList[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/Alvara.sol\":2367:2392  _greyList[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/tokens/Alvara.sol\":2388:2392  true */\n      0x01\n        /* \"contracts/tokens/Alvara.sol\":2367:2392  _greyList[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/Alvara.sol\":2407:2426  GreyListed(account) */\n      mload\n      0x4f03d75a12f5f2153536f14e57d9477eff6be012215a22e894dbc840db1c8f7e\n      swap2\n        /* \"contracts/tokens/Alvara.sol\":2367:2385  _greyList[account] */\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":2407:2426  GreyListed(account) */\n      log2\n        /* \"contracts/tokens/Alvara.sol\":2187:2433  function addToGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6212:6446  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6300:6304  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6407:6417  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6370:6377  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6388  allowance */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6404  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6379:6417  allowance(owner, spender) + addedValue */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6362  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6418  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:951  _burn(_msgSender(), amount) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":944:950  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:929  _burn */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":924:951  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":869:958  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Alvara.sol\":2630:2931  function removeFromGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n    tag_96:\n        /* \"contracts/tokens/Alvara.sol\":996:1030  keccak256(\"GREYLIST_MANAGER_ROLE\") */\n      0x5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":2729:2747  _greyList[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":2729:2738  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":2729:2747  _greyList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/Alvara.sol\":2724:2846  if (!_greyList[account]) {... */\n      tag_212\n      jumpi\n        /* \"contracts/tokens/Alvara.sol\":2770:2792  AddressNotInGreyList() */\n      mload(0x40)\n      shl(0xe0, 0x17c33b65)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/Alvara.sol\":2724:2846  if (!_greyList[account]) {... */\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":2855:2873  _greyList[account] */\n      dup3\n      and\n        /* \"contracts/tokens/Alvara.sol\":2876:2881  false */\n      0x00\n        /* \"contracts/tokens/Alvara.sol\":2855:2873  _greyList[account] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":2855:2864  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":2855:2873  _greyList[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/Alvara.sol\":2855:2881  _greyList[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/Alvara.sol\":2896:2924  RemovedFromGreyList(account) */\n      mload\n      0x43a926d6828be5aecd76c987f92b63201c077e5ebf44ea16eecd0f2342bf5319\n      swap2\n        /* \"contracts/tokens/Alvara.sol\":2876:2881  false */\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":2896:2924  RemovedFromGreyList(account) */\n      log2\n        /* \"contracts/tokens/Alvara.sol\":2630:2931  function removeFromGreyList(address account) public onlyRole(GREYLIST_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1264:1425  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1386  _spendAllowance(account, _msgSender(), amount) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1356:1363  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1379:1385  amount */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1355  _spendAllowance */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1340:1386  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1418  _burn(account, amount) */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1402:1409  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1411:1417  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1401  _burn */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1396:1418  _burn(account, amount) */\n      jump\t// in\n        /* \"contracts/tokens/Alvara.sol\":1773:1993  function initialize() public initializer {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_224\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_224\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5301:5303   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5283:5304   */\n      mstore\n        /* \"#utility.yul\":5340:5342   */\n      0x2e\n        /* \"#utility.yul\":5320:5338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5313:5343   */\n      mstore\n        /* \"#utility.yul\":5379:5413   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5359:5377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5352:5414   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5430:5448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5423:5467   */\n      mstore\n        /* \"#utility.yul\":5484:5503   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_191\n        /* \"#utility.yul\":5099:5509   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_228:\n        /* \"contracts/tokens/Alvara.sol\":1824:1854  __ERC20_init(\"Alvara\", \"ALVA\") */\n      tag_230\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x416c76617261)\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x414c5641)\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens/Alvara.sol\":1824:1836  __ERC20_init */\n      tag_231\n        /* \"contracts/tokens/Alvara.sol\":1824:1854  __ERC20_init(\"Alvara\", \"ALVA\") */\n      jump\t// in\n    tag_230:\n        /* \"contracts/tokens/Alvara.sol\":1864:1886  __ERC20Burnable_init() */\n      tag_232\n        /* \"contracts/tokens/Alvara.sol\":1864:1884  __ERC20Burnable_init */\n      tag_233\n        /* \"contracts/tokens/Alvara.sol\":1864:1886  __ERC20Burnable_init() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/tokens/Alvara.sol\":1896:1928  __WithSupervisedTransfers_init() */\n      tag_234\n        /* \"contracts/tokens/Alvara.sol\":1896:1926  __WithSupervisedTransfers_init */\n      tag_235\n        /* \"contracts/tokens/Alvara.sol\":1896:1928  __WithSupervisedTransfers_init() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/tokens/Alvara.sol\":1939:1986  _mint(msg.sender, 200_000_000 * 10**decimals()) */\n      tag_236\n        /* \"contracts/tokens/Alvara.sol\":1945:1955  msg.sender */\n      caller\n        /* \"contracts/tokens/Alvara.sol\":1971:1985  10**decimals() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3544:3546  18 */\n      0x12\n        /* \"contracts/tokens/Alvara.sol\":1971:1973  10 */\n      0x0a\n        /* \"contracts/tokens/Alvara.sol\":1971:1985  10**decimals() */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"contracts/tokens/Alvara.sol\":1957:1985  200_000_000 * 10**decimals() */\n      tag_240\n      swap1\n        /* \"contracts/tokens/Alvara.sol\":1957:1968  200_000_000 */\n      0x0bebc200\n        /* \"contracts/tokens/Alvara.sol\":1957:1985  200_000_000 * 10**decimals() */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/tokens/Alvara.sol\":1939:1944  _mint */\n      tag_242\n        /* \"contracts/tokens/Alvara.sol\":1939:1986  _mint(msg.sender, 200_000_000 * 10**decimals()) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":2824:2860   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2797:2815   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"contracts/tokens/Alvara.sol\":1773:1993  function initialize() public initializer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3436:3440  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3465  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2727:2829  function symbol() public view virtual override returns (string memory) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2783:2796  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2815:2822  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2808:2822  return _symbol */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7026:7030  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:7131  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7116  allowance */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7107:7132  allowance(owner, spender) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7080:7132  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7170:7185  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7166  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7150:7185  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7520:7522   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7502:7523   */\n      mstore\n        /* \"#utility.yul\":7559:7561   */\n      0x25\n        /* \"#utility.yul\":7539:7557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7532:7562   */\n      mstore\n        /* \"#utility.yul\":7598:7632   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7578:7596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7571:7633   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7649:7667   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7642:7677   */\n      mstore\n        /* \"#utility.yul\":7694:7713   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_191\n        /* \"#utility.yul\":7318:7719   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7142:7227  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7270:7275  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7277:7284  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7320  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7302  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7320  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7269  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7261:7321  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7349:7353  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6933:7360  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4287  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4181  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4248:4250  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4252:4258  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4240  _transfer */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4259  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5831:5835  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5837:5844  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5830  _revokeRole */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4434:4441  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4471  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4478  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4460:4487  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4345:4494  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2766:3121  function setListingTimestamp(uint32 newListingTimestamp)... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2895:2911  listingTimestamp */\n      and(0xffffffff, sload(0xfb))\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2895:2915  listingTimestamp > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2895:2954  listingTimestamp > 0 && block.timestamp >= listingTimestamp */\n      tag_274\n      jumpi\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2938:2954  listingTimestamp */\n      and(0xffffffff, sload(0xfb))\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2919:2934  block.timestamp */\n      timestamp\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2919:2954  block.timestamp >= listingTimestamp */\n      lt\n      iszero\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2895:2954  listingTimestamp > 0 && block.timestamp >= listingTimestamp */\n    tag_274:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2891:3008  if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2977:2997  TokenAlreadyListed() */\n      mload(0x40)\n      shl(0xe1, 0x6f555ee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2891:3008  if (listingTimestamp > 0 && block.timestamp >= listingTimestamp) {... */\n    tag_275:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":3022:3066  ListingTimestampUpdated(newListingTimestamp) */\n      mload(0x40)\n        /* \"#utility.yul\":3467:3477   */\n      0xffffffff\n        /* \"#utility.yul\":3455:3478   */\n      dup4\n      and\n        /* \"#utility.yul\":3437:3479   */\n      dup2\n      mstore\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":3022:3066  ListingTimestampUpdated(newListingTimestamp) */\n      0x0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d6\n      swap1\n        /* \"#utility.yul\":3425:3427   */\n      0x20\n        /* \"#utility.yul\":3410:3428   */\n      add\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":3022:3066  ListingTimestampUpdated(newListingTimestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":3076:3092  listingTimestamp */\n      0xfb\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":3076:3114  listingTimestamp = newListingTimestamp */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2766:3121  function setListingTimestamp(uint32 newListingTimestamp)... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10916:10935  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7926:7928   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7908:7929   */\n      mstore\n        /* \"#utility.yul\":7965:7967   */\n      0x24\n        /* \"#utility.yul\":7945:7963   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7938:7968   */\n      mstore\n        /* \"#utility.yul\":8004:8038   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7984:8002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7977:8039   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8055:8073   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8048:8082   */\n      mstore\n        /* \"#utility.yul\":8099:8118   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_191\n        /* \"#utility.yul\":7724:8124   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10908:10976  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10994:11015  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8313:8334   */\n      mstore\n        /* \"#utility.yul\":8370:8372   */\n      0x22\n        /* \"#utility.yul\":8350:8368   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8343:8373   */\n      mstore\n        /* \"#utility.yul\":8409:8443   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8389:8407   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8382:8444   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8460:8478   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8453:8485   */\n      mstore\n        /* \"#utility.yul\":8502:8521   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":8129:8527   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10986:11054  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11076  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11083  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11092  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11101  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11148  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10815:11155  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5561:5817  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5658:5662  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5730:5734  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5745:5751  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5729  _spendAllowance */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5714:5752  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5772:5776  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5778:5780  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5782:5788  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5771  _transfer */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5762:5789  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3866:3870  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3865  _checkRole */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8029:8033  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8028  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8065  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8091:8095  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8132:8139  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8126:8130  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      tag_300\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8433:8437  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8439:8446  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8432  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8421:8570  if (hasRole(role, account)) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8469  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8492  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8500  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9733:10392  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9816:9837  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8734:8736   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8716:8737   */\n      mstore\n        /* \"#utility.yul\":8773:8775   */\n      0x21\n        /* \"#utility.yul\":8753:8771   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8746:8776   */\n      mstore\n        /* \"#utility.yul\":8812:8846   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8792:8810   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8785:8847   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8863:8881   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8856:8887   */\n      mstore\n        /* \"#utility.yul\":8904:8923   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_191\n        /* \"#utility.yul\":8532:8929   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9808:9875  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9946:9968  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9980  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9971:9989  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10007:10031  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9136:9138   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9118:9139   */\n      mstore\n        /* \"#utility.yul\":9175:9177   */\n      0x22\n        /* \"#utility.yul\":9155:9173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9148:9178   */\n      mstore\n        /* \"#utility.yul\":9214:9248   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":9194:9212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9187:9249   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":9265:9283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9258:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9326   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_191\n        /* \"#utility.yul\":8934:9332   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9999:10070  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10113  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10125:10148  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10148  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10241:10253  _totalSupply */\n      0x35\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10241:10263  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10104:10122  _balances[account] */\n      swap2\n      swap3\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10289:10326  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11560  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11573:11578  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11580:11587  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11572  allowance */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11563:11588  allowance(owner, spender) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11536:11588  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11618  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11602:11639  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11598:11841  if (currentAllowance != type(uint256).max) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11683:11689  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11679  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11689  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9539:9541   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9521:9542   */\n      mstore\n        /* \"#utility.yul\":9578:9580   */\n      0x1d\n        /* \"#utility.yul\":9558:9576   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9551:9581   */\n      mstore\n        /* \"#utility.yul\":9617:9648   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9597:9615   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9590:9649   */\n      mstore\n        /* \"#utility.yul\":9666:9684   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_191\n        /* \"#utility.yul\":9337:9690   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11655:11723  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11779  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11781:11788  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11815  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11806  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11790:11815  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11773  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11816  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11526:11847  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11436:11847  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2139:2286  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_326\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2279  __ERC20_init_unchained(name_, symbol_) */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2264:2269  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2271:2278  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2263  __ERC20_init_unchained */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2279  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":615:680  function __ERC20Burnable_init() internal onlyInitializing {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_326\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":615:680  function __ERC20Burnable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2380:2509  function __WithSupervisedTransfers_init() internal onlyInitializing {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_326\n      jump\t// in\n    tag_335:\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2458:2502  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2458:2468  _grantRole */\n      tag_186\n        /* \"contracts/utils/WithSupervisedTransfers.sol\":2458:2502  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8878:9413  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8961:8982  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10309:10311   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10291:10312   */\n      mstore\n        /* \"#utility.yul\":10348:10350   */\n      0x1f\n        /* \"#utility.yul\":10328:10346   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10321:10351   */\n      mstore\n        /* \"#utility.yul\":10387:10420   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":10367:10385   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10360:10421   */\n      mstore\n        /* \"#utility.yul\":10438:10456   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":10107:10462   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8953:9018  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9105:9111  amount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9089:9101  _totalSupply */\n      0x35\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9089:9111  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_345\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_345:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9275  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9275  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9257:9285  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1549:1574   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9347  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Alvara.sol\":3328:3648  function _transfer(... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/Alvara.sol\":3461:3476  _greyList[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/Alvara.sol\":3461:3470  _greyList */\n      0xfc\n        /* \"contracts/tokens/Alvara.sol\":3461:3476  _greyList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/Alvara.sol\":3457:3595  if (_greyList[from]) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"contracts/tokens/Alvara.sol\":3503:3521  ActionRestricted() */\n      mload(0x40)\n      shl(0xe2, 0x3991fca9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/Alvara.sol\":3457:3595  if (_greyList[from]) {... */\n    tag_349:\n        /* \"contracts/tokens/Alvara.sol\":3608:3641  super._transfer(from, to, amount) */\n      tag_185\n        /* \"contracts/tokens/Alvara.sol\":3624:3628  from */\n      dup4\n        /* \"contracts/tokens/Alvara.sol\":3630:3632  to */\n      dup4\n        /* \"contracts/tokens/Alvara.sol\":3634:3640  amount */\n      dup4\n        /* \"contracts/tokens/Alvara.sol\":3608:3623  super._transfer */\n      tag_351\n        /* \"contracts/tokens/Alvara.sol\":3608:3641  super._transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4173:4674  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4269:4273  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4275:4282  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4268  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4256:4668  if (!hasRole(role, account)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4475:4482  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4474  StringsUpgradeable.toHexString */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_357\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4593:4597  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4600:4602  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4584  StringsUpgradeable.toHexString */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4351:4625  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_359\n      swap3\n      swap2\n      swap1\n      tag_360\n      jump\t// in\n    tag_359:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4299:4657  revert(... */\n      dup3\n      mstore\n      tag_191\n      swap2\n      0x04\n      add\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2451  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_326\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2409  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2417  _name = name_ */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2412:2417  name_ */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2409  _name */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2417  _name = name_ */\n      tag_369\n      jump\t// in\n    tag_368:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2434  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2444  _symbol = symbol_ */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2437:2444  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2434  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2427:2444  _symbol = symbol_ */\n      tag_369\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7814:8602  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7910:7928  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13742:13744   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13724:13745   */\n      mstore\n        /* \"#utility.yul\":13781:13783   */\n      0x25\n        /* \"#utility.yul\":13761:13779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13754:13784   */\n      mstore\n        /* \"#utility.yul\":13820:13854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13800:13818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13793:13855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13871:13889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13864:13899   */\n      mstore\n        /* \"#utility.yul\":13916:13935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_191\n        /* \"#utility.yul\":13540:13941   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7902:7970  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7988:8004  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14148:14150   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14130:14151   */\n      mstore\n        /* \"#utility.yul\":14187:14189   */\n      0x23\n        /* \"#utility.yul\":14167:14185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14160:14190   */\n      mstore\n        /* \"#utility.yul\":14226:14260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14206:14224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14199:14261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":14277:14295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14270:14303   */\n      mstore\n        /* \"#utility.yul\":14320:14339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":13946:14345   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7980:8044  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_375:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8104:8123  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8135  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8126:8141  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8159:8180  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14552:14554   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14534:14555   */\n      mstore\n        /* \"#utility.yul\":14591:14593   */\n      0x26\n        /* \"#utility.yul\":14571:14589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14564:14594   */\n      mstore\n        /* \"#utility.yul\":14630:14664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14610:14628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14603:14665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":14681:14699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14674:14710   */\n      mstore\n        /* \"#utility.yul\":14727:14746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_191\n        /* \"#utility.yul\":14350:14752   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8151:8223  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8266  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8272  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8295  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8257:8295  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8485  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8472:8495  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_382\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8289:8295  amount */\n      dup7\n        /* \"#utility.yul\":1549:1574   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1522:1540   */\n      add\n      swap1\n        /* \"#utility.yul\":1403:1580   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8521:8547  Transfer(from, to, amount) */\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8558:8595  _afterTokenTransfer(from, to, amount) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_149\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_241\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_388\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_204\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_390\n      jumpi\n      tag_390\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_392\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_392:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_394\n      jumpi\n      tag_394\n      tag_395\n      jump\t// in\n    tag_394:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_397\n      jumpi\n      tag_397\n      tag_395\n      jump\t// in\n    tag_397:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_241\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_402\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_204\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_399\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_404\n      jumpi\n      tag_404\n      tag_395\n      jump\t// in\n    tag_404:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_406\n      jumpi\n      tag_406\n      tag_395\n      jump\t// in\n    tag_406:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      tag_407\n      dup2\n      tag_408\n      jump\t// in\n    tag_407:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_398)\n    tag_399:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15232:15234   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15214:15235   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15251:15269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15244:15274   */\n      mstore\n        /* \"#utility.yul\":15310:15344   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":15290:15308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15283:15345   */\n      mstore\n        /* \"#utility.yul\":15362:15380   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_191\n        /* \"#utility.yul\":15030:15386   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_40:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_422:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:915   */\n    tag_47:\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup3\n        /* \"#utility.yul\":672:685   */\n      mload\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":705:714   */\n      dup5\n        /* \"#utility.yul\":701:719   */\n      add\n        /* \"#utility.yul\":694:728   */\n      mstore\n        /* \"#utility.yul\":780:786   */\n      dup1\n        /* \"#utility.yul\":775:777   */\n      0x20\n        /* \"#utility.yul\":767:773   */\n      dup6\n        /* \"#utility.yul\":763:778   */\n      add\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":737:787   */\n      mcopy\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":822:828   */\n      dup3\n        /* \"#utility.yul\":811:820   */\n      dup6\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":803:834   */\n      add\n        /* \"#utility.yul\":796:838   */\n      mstore\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":899:901   */\n      0x1f\n        /* \"#utility.yul\":895:902   */\n      not\n        /* \"#utility.yul\":890:892   */\n      0x1f\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:903   */\n      and\n        /* \"#utility.yul\":863:872   */\n      dup5\n        /* \"#utility.yul\":859:904   */\n      add\n        /* \"#utility.yul\":855:909   */\n      add\n        /* \"#utility.yul\":847:909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":497:915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1093   */\n    tag_412:\n        /* \"#utility.yul\":988:1008   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1037:1068   */\n      dup2\n      and\n        /* \"#utility.yul\":1027:1069   */\n      dup2\n      eq\n        /* \"#utility.yul\":1017:1087   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1073:1085   */\n      revert\n        /* \"#utility.yul\":1017:1087   */\n    tag_427:\n        /* \"#utility.yul\":920:1093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1398   */\n    tag_50:\n        /* \"#utility.yul\":1166:1172   */\n      0x00\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1227:1229   */\n      0x40\n        /* \"#utility.yul\":1215:1224   */\n      dup4\n        /* \"#utility.yul\":1206:1213   */\n      dup6\n        /* \"#utility.yul\":1202:1225   */\n      sub\n        /* \"#utility.yul\":1198:1230   */\n      slt\n        /* \"#utility.yul\":1195:1247   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":1243:1244   */\n      0x00\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1245   */\n      revert\n        /* \"#utility.yul\":1195:1247   */\n    tag_429:\n        /* \"#utility.yul\":1266:1295   */\n      tag_430\n        /* \"#utility.yul\":1285:1294   */\n      dup4\n        /* \"#utility.yul\":1266:1295   */\n      tag_412\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1256:1295   */\n      swap5\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1349:1367   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1336:1368   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1398   */\n      jump\t// out\n        /* \"#utility.yul\":1585:1959   */\n    tag_59:\n        /* \"#utility.yul\":1662:1668   */\n      0x00\n        /* \"#utility.yul\":1670:1676   */\n      0x00\n        /* \"#utility.yul\":1678:1684   */\n      0x00\n        /* \"#utility.yul\":1731:1733   */\n      0x60\n        /* \"#utility.yul\":1719:1728   */\n      dup5\n        /* \"#utility.yul\":1710:1717   */\n      dup7\n        /* \"#utility.yul\":1706:1729   */\n      sub\n        /* \"#utility.yul\":1702:1734   */\n      slt\n        /* \"#utility.yul\":1699:1751   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1737:1749   */\n      revert\n        /* \"#utility.yul\":1699:1751   */\n    tag_433:\n        /* \"#utility.yul\":1770:1799   */\n      tag_434\n        /* \"#utility.yul\":1789:1798   */\n      dup5\n        /* \"#utility.yul\":1770:1799   */\n      tag_412\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1760:1799   */\n      swap3\n      pop\n        /* \"#utility.yul\":1818:1856   */\n      tag_435\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"#utility.yul\":1841:1850   */\n      dup6\n        /* \"#utility.yul\":1837:1855   */\n      add\n        /* \"#utility.yul\":1818:1856   */\n      tag_412\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1585:1959   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1808:1856   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1910:1928   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1897:1929   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1585:1959   */\n      jump\t// out\n        /* \"#utility.yul\":1964:2190   */\n    tag_64:\n        /* \"#utility.yul\":2023:2029   */\n      0x00\n        /* \"#utility.yul\":2076:2078   */\n      0x20\n        /* \"#utility.yul\":2064:2073   */\n      dup3\n        /* \"#utility.yul\":2055:2062   */\n      dup5\n        /* \"#utility.yul\":2051:2074   */\n      sub\n        /* \"#utility.yul\":2047:2079   */\n      slt\n        /* \"#utility.yul\":2044:2096   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2092:2093   */\n      0x00\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2082:2094   */\n      revert\n        /* \"#utility.yul\":2044:2096   */\n    tag_437:\n      pop\n        /* \"#utility.yul\":2137:2160   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1964:2190   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2677   */\n    tag_70:\n        /* \"#utility.yul\":2445:2451   */\n      0x00\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_440:\n        /* \"#utility.yul\":2567:2590   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2633:2671   */\n      tag_441\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      dup5\n      add\n        /* \"#utility.yul\":2633:2671   */\n      tag_412\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2623:2671   */\n      swap1\n      pop\n        /* \"#utility.yul\":2377:2677   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2871:3057   */\n    tag_81:\n        /* \"#utility.yul\":2930:2936   */\n      0x00\n        /* \"#utility.yul\":2983:2985   */\n      0x20\n        /* \"#utility.yul\":2971:2980   */\n      dup3\n        /* \"#utility.yul\":2962:2969   */\n      dup5\n        /* \"#utility.yul\":2958:2981   */\n      sub\n        /* \"#utility.yul\":2954:2986   */\n      slt\n        /* \"#utility.yul\":2951:3003   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":2996:2997   */\n      0x00\n        /* \"#utility.yul\":2989:3001   */\n      revert\n        /* \"#utility.yul\":2951:3003   */\n    tag_444:\n        /* \"#utility.yul\":3022:3051   */\n      tag_409\n        /* \"#utility.yul\":3041:3050   */\n      dup3\n        /* \"#utility.yul\":3022:3051   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":3490:3750   */\n    tag_140:\n        /* \"#utility.yul\":3558:3564   */\n      0x00\n        /* \"#utility.yul\":3566:3572   */\n      0x00\n        /* \"#utility.yul\":3619:3621   */\n      0x40\n        /* \"#utility.yul\":3607:3616   */\n      dup4\n        /* \"#utility.yul\":3598:3605   */\n      dup6\n        /* \"#utility.yul\":3594:3617   */\n      sub\n        /* \"#utility.yul\":3590:3622   */\n      slt\n        /* \"#utility.yul\":3587:3639   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":3635:3636   */\n      0x00\n        /* \"#utility.yul\":3632:3633   */\n      0x00\n        /* \"#utility.yul\":3625:3637   */\n      revert\n        /* \"#utility.yul\":3587:3639   */\n    tag_450:\n        /* \"#utility.yul\":3658:3687   */\n      tag_451\n        /* \"#utility.yul\":3677:3686   */\n      dup4\n        /* \"#utility.yul\":3658:3687   */\n      tag_412\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3648:3687   */\n      swap2\n      pop\n        /* \"#utility.yul\":3706:3744   */\n      tag_441\n        /* \"#utility.yul\":3740:3742   */\n      0x20\n        /* \"#utility.yul\":3729:3738   */\n      dup5\n        /* \"#utility.yul\":3725:3743   */\n      add\n        /* \"#utility.yul\":3706:3744   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":3755:4031   */\n    tag_145:\n        /* \"#utility.yul\":3813:3819   */\n      0x00\n        /* \"#utility.yul\":3866:3868   */\n      0x20\n        /* \"#utility.yul\":3854:3863   */\n      dup3\n        /* \"#utility.yul\":3845:3852   */\n      dup5\n        /* \"#utility.yul\":3841:3864   */\n      sub\n        /* \"#utility.yul\":3837:3869   */\n      slt\n        /* \"#utility.yul\":3834:3886   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3882:3883   */\n      0x00\n        /* \"#utility.yul\":3879:3880   */\n      0x00\n        /* \"#utility.yul\":3872:3884   */\n      revert\n        /* \"#utility.yul\":3834:3886   */\n    tag_454:\n        /* \"#utility.yul\":3921:3930   */\n      dup2\n        /* \"#utility.yul\":3908:3931   */\n      calldataload\n        /* \"#utility.yul\":3971:3981   */\n      0xffffffff\n        /* \"#utility.yul\":3964:3969   */\n      dup2\n        /* \"#utility.yul\":3960:3982   */\n      and\n        /* \"#utility.yul\":3953:3958   */\n      dup2\n        /* \"#utility.yul\":3950:3983   */\n      eq\n        /* \"#utility.yul\":3940:4001   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":3997:3998   */\n      0x00\n        /* \"#utility.yul\":3994:3995   */\n      0x00\n        /* \"#utility.yul\":3987:3999   */\n      revert\n        /* \"#utility.yul\":4036:4416   */\n    tag_153:\n        /* \"#utility.yul\":4115:4116   */\n      0x01\n        /* \"#utility.yul\":4111:4123   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4158:4170   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4179:4240   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":4233:4237   */\n      0x7f\n        /* \"#utility.yul\":4225:4231   */\n      dup3\n        /* \"#utility.yul\":4221:4238   */\n      and\n        /* \"#utility.yul\":4211:4238   */\n      swap2\n      pop\n        /* \"#utility.yul\":4179:4240   */\n    tag_457:\n        /* \"#utility.yul\":4286:4288   */\n      0x20\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4275:4289   */\n      lt\n        /* \"#utility.yul\":4255:4273   */\n      dup2\n        /* \"#utility.yul\":4252:4290   */\n      sub\n        /* \"#utility.yul\":4249:4410   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4332:4342   */\n      0x4e487b71\n        /* \"#utility.yul\":4327:4330   */\n      0xe0\n        /* \"#utility.yul\":4323:4343   */\n      shl\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4313:4344   */\n      mstore\n        /* \"#utility.yul\":4367:4371   */\n      0x22\n        /* \"#utility.yul\":4364:4365   */\n      0x04\n        /* \"#utility.yul\":4357:4372   */\n      mstore\n        /* \"#utility.yul\":4395:4399   */\n      0x24\n        /* \"#utility.yul\":4392:4393   */\n      0x00\n        /* \"#utility.yul\":4385:4400   */\n      revert\n        /* \"#utility.yul\":4249:4410   */\n    tag_458:\n      pop\n        /* \"#utility.yul\":4036:4416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4837:4964   */\n    tag_413:\n        /* \"#utility.yul\":4898:4908   */\n      0x4e487b71\n        /* \"#utility.yul\":4893:4896   */\n      0xe0\n        /* \"#utility.yul\":4889:4909   */\n      shl\n        /* \"#utility.yul\":4886:4887   */\n      0x00\n        /* \"#utility.yul\":4879:4910   */\n      mstore\n        /* \"#utility.yul\":4929:4933   */\n      0x11\n        /* \"#utility.yul\":4926:4927   */\n      0x04\n        /* \"#utility.yul\":4919:4934   */\n      mstore\n        /* \"#utility.yul\":4953:4957   */\n      0x24\n        /* \"#utility.yul\":4950:4951   */\n      0x00\n        /* \"#utility.yul\":4943:4958   */\n      revert\n        /* \"#utility.yul\":4969:5094   */\n    tag_204:\n        /* \"#utility.yul\":5034:5043   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5055:5065   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5052:5088   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":5068:5086   */\n      tag_149\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":5514:5889   */\n    tag_414:\n        /* \"#utility.yul\":5602:5603   */\n      0x01\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5634:5883   */\n    tag_466:\n        /* \"#utility.yul\":5655:5656   */\n      0x01\n        /* \"#utility.yul\":5645:5653   */\n      dup5\n        /* \"#utility.yul\":5642:5657   */\n      gt\n        /* \"#utility.yul\":5634:5883   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":5705:5709   */\n      dup1\n        /* \"#utility.yul\":5700:5703   */\n      dup6\n        /* \"#utility.yul\":5696:5710   */\n      div\n        /* \"#utility.yul\":5690:5694   */\n      dup2\n        /* \"#utility.yul\":5687:5711   */\n      gt\n        /* \"#utility.yul\":5684:5734   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5714:5732   */\n      tag_470\n      tag_413\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":5764:5765   */\n      0x01\n        /* \"#utility.yul\":5754:5762   */\n      dup5\n        /* \"#utility.yul\":5750:5766   */\n      and\n        /* \"#utility.yul\":5747:5796   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5778:5794   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":5747:5796   */\n    tag_471:\n        /* \"#utility.yul\":5861:5862   */\n      0x01\n        /* \"#utility.yul\":5857:5873   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":5817:5832   */\n      dup1\n      mul\n        /* \"#utility.yul\":5634:5883   */\n      jump(tag_466)\n    tag_468:\n        /* \"#utility.yul\":5514:5889   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6796   */\n    tag_415:\n        /* \"#utility.yul\":5943:5948   */\n      0x00\n        /* \"#utility.yul\":5973:5981   */\n      dup3\n        /* \"#utility.yul\":5963:6043   */\n      tag_473\n      jumpi\n      pop\n        /* \"#utility.yul\":6014:6015   */\n      0x01\n        /* \"#utility.yul\":6028:6033   */\n      jump(tag_149)\n        /* \"#utility.yul\":5963:6043   */\n    tag_473:\n        /* \"#utility.yul\":6062:6066   */\n      dup2\n        /* \"#utility.yul\":6052:6128   */\n      tag_474\n      jumpi\n      pop\n        /* \"#utility.yul\":6099:6100   */\n      0x00\n        /* \"#utility.yul\":6113:6118   */\n      jump(tag_149)\n        /* \"#utility.yul\":6052:6128   */\n    tag_474:\n        /* \"#utility.yul\":6144:6148   */\n      dup2\n        /* \"#utility.yul\":6162:6163   */\n      0x01\n        /* \"#utility.yul\":6157:6216   */\n      dup2\n      eq\n      tag_476\n      jumpi\n        /* \"#utility.yul\":6230:6231   */\n      0x02\n        /* \"#utility.yul\":6225:6399   */\n      dup2\n      eq\n      tag_477\n      jumpi\n        /* \"#utility.yul\":6137:6399   */\n      jump(tag_475)\n        /* \"#utility.yul\":6157:6216   */\n    tag_476:\n        /* \"#utility.yul\":6187:6188   */\n      0x01\n        /* \"#utility.yul\":6178:6188   */\n      swap2\n      pop\n        /* \"#utility.yul\":6201:6206   */\n      pop\n      jump(tag_149)\n        /* \"#utility.yul\":6225:6399   */\n    tag_477:\n        /* \"#utility.yul\":6262:6265   */\n      0xff\n        /* \"#utility.yul\":6252:6260   */\n      dup5\n        /* \"#utility.yul\":6249:6266   */\n      gt\n        /* \"#utility.yul\":6246:6289   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6269:6287   */\n      tag_479\n      tag_413\n      jump\t// in\n    tag_479:\n      pop\n      pop\n        /* \"#utility.yul\":6325:6326   */\n      0x01\n        /* \"#utility.yul\":6311:6327   */\n      dup3\n      shl\n        /* \"#utility.yul\":6384:6389   */\n      jump(tag_149)\n        /* \"#utility.yul\":6137:6399   */\n    tag_475:\n      pop\n        /* \"#utility.yul\":6483:6485   */\n      0x20\n        /* \"#utility.yul\":6473:6481   */\n      dup4\n        /* \"#utility.yul\":6470:6486   */\n      lt\n        /* \"#utility.yul\":6464:6467   */\n      0x0133\n        /* \"#utility.yul\":6458:6462   */\n      dup4\n        /* \"#utility.yul\":6455:6468   */\n      lt\n        /* \"#utility.yul\":6451:6487   */\n      and\n        /* \"#utility.yul\":6445:6447   */\n      0x4e\n        /* \"#utility.yul\":6435:6443   */\n      dup5\n        /* \"#utility.yul\":6432:6448   */\n      lt\n        /* \"#utility.yul\":6427:6429   */\n      0x0b\n        /* \"#utility.yul\":6421:6425   */\n      dup5\n        /* \"#utility.yul\":6418:6430   */\n      lt\n        /* \"#utility.yul\":6414:6449   */\n      and\n        /* \"#utility.yul\":6411:6488   */\n      or\n        /* \"#utility.yul\":6408:6611   */\n      iszero\n      tag_480\n      jumpi\n      pop\n        /* \"#utility.yul\":6520:6539   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":6596:6601   */\n      jump(tag_149)\n        /* \"#utility.yul\":6408:6611   */\n    tag_480:\n        /* \"#utility.yul\":6643:6685   */\n      tag_481\n      not(0x00)\n        /* \"#utility.yul\":6668:6676   */\n      dup5\n        /* \"#utility.yul\":6662:6666   */\n      dup5\n        /* \"#utility.yul\":6643:6685   */\n      tag_414\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6721:6727   */\n      dup1\n        /* \"#utility.yul\":6717:6718   */\n      0x00\n        /* \"#utility.yul\":6713:6719   */\n      not\n        /* \"#utility.yul\":6709:6728   */\n      div\n        /* \"#utility.yul\":6700:6707   */\n      dup3\n        /* \"#utility.yul\":6697:6729   */\n      gt\n        /* \"#utility.yul\":6694:6752   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6732:6750   */\n      tag_483\n      tag_413\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6770:6790   */\n      mul\n      swap4\n        /* \"#utility.yul\":5894:6796   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:6941   */\n    tag_239:\n        /* \"#utility.yul\":6859:6864   */\n      0x00\n        /* \"#utility.yul\":6888:6935   */\n      tag_409\n        /* \"#utility.yul\":6929:6933   */\n      0xff\n        /* \"#utility.yul\":6919:6927   */\n      dup5\n        /* \"#utility.yul\":6915:6934   */\n      and\n        /* \"#utility.yul\":6909:6913   */\n      dup4\n        /* \"#utility.yul\":6888:6935   */\n      tag_415\n      jump\t// in\n        /* \"#utility.yul\":6946:7114   */\n    tag_241:\n        /* \"#utility.yul\":7019:7028   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7050:7059   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7067:7082   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7061:7083   */\n      dup5\n      eq\n        /* \"#utility.yul\":7047:7084   */\n      or\n        /* \"#utility.yul\":7037:7108   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":7088:7106   */\n      tag_149\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":9695:10102   */\n    tag_326:\n        /* \"#utility.yul\":9897:9899   */\n      0x20\n        /* \"#utility.yul\":9879:9900   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9936:9938   */\n      0x2b\n        /* \"#utility.yul\":9916:9934   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9909:9939   */\n      mstore\n        /* \"#utility.yul\":9975:10009   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":9970:9972   */\n      0x40\n        /* \"#utility.yul\":9955:9973   */\n      dup3\n      add\n        /* \"#utility.yul\":9948:10010   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":10041:10043   */\n      0x60\n        /* \"#utility.yul\":10026:10044   */\n      dup3\n      add\n        /* \"#utility.yul\":10019:10060   */\n      mstore\n        /* \"#utility.yul\":10092:10095   */\n      0x80\n        /* \"#utility.yul\":10077:10096   */\n      add\n      swap1\n        /* \"#utility.yul\":9695:10102   */\n      jump\t// out\n        /* \"#utility.yul\":10467:10679   */\n    tag_416:\n        /* \"#utility.yul\":10509:10512   */\n      0x00\n        /* \"#utility.yul\":10547:10552   */\n      dup2\n        /* \"#utility.yul\":10541:10553   */\n      mload\n        /* \"#utility.yul\":10591:10597   */\n      dup1\n        /* \"#utility.yul\":10584:10588   */\n      0x20\n        /* \"#utility.yul\":10577:10582   */\n      dup5\n        /* \"#utility.yul\":10573:10589   */\n      add\n        /* \"#utility.yul\":10568:10571   */\n      dup6\n        /* \"#utility.yul\":10562:10598   */\n      mcopy\n        /* \"#utility.yul\":10653:10654   */\n      0x00\n        /* \"#utility.yul\":10617:10633   */\n      swap4\n      add\n        /* \"#utility.yul\":10642:10655   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":10617:10633   */\n      swap1\n      swap2\n        /* \"#utility.yul\":10467:10679   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10684:11279   */\n    tag_360:\n        /* \"#utility.yul\":11095:11120   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":11090:11093   */\n      dup2\n        /* \"#utility.yul\":11083:11121   */\n      mstore\n        /* \"#utility.yul\":11065:11068   */\n      0x00\n        /* \"#utility.yul\":11140:11179   */\n      tag_500\n        /* \"#utility.yul\":11175:11177   */\n      0x17\n        /* \"#utility.yul\":11170:11173   */\n      dup4\n        /* \"#utility.yul\":11166:11178   */\n      add\n        /* \"#utility.yul\":11158:11164   */\n      dup6\n        /* \"#utility.yul\":11140:11179   */\n      tag_416\n      jump\t// in\n    tag_500:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":11195:11197   */\n      dup2\n        /* \"#utility.yul\":11188:11219   */\n      mstore\n        /* \"#utility.yul\":11235:11273   */\n      tag_501\n        /* \"#utility.yul\":11269:11271   */\n      0x11\n        /* \"#utility.yul\":11265:11267   */\n      dup3\n        /* \"#utility.yul\":11261:11272   */\n      add\n        /* \"#utility.yul\":11253:11259   */\n      dup6\n        /* \"#utility.yul\":11235:11273   */\n      tag_416\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11228:11273   */\n      swap6\n        /* \"#utility.yul\":10684:11279   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11284:11411   */\n    tag_391:\n        /* \"#utility.yul\":11345:11355   */\n      0x4e487b71\n        /* \"#utility.yul\":11340:11343   */\n      0xe0\n        /* \"#utility.yul\":11336:11356   */\n      shl\n        /* \"#utility.yul\":11333:11334   */\n      0x00\n        /* \"#utility.yul\":11326:11357   */\n      mstore\n        /* \"#utility.yul\":11376:11380   */\n      0x41\n        /* \"#utility.yul\":11373:11374   */\n      0x04\n        /* \"#utility.yul\":11366:11381   */\n      mstore\n        /* \"#utility.yul\":11400:11404   */\n      0x24\n        /* \"#utility.yul\":11397:11398   */\n      0x00\n        /* \"#utility.yul\":11390:11405   */\n      revert\n        /* \"#utility.yul\":11542:12060   */\n    tag_418:\n        /* \"#utility.yul\":11644:11646   */\n      0x1f\n        /* \"#utility.yul\":11639:11642   */\n      dup3\n        /* \"#utility.yul\":11636:11647   */\n      gt\n        /* \"#utility.yul\":11633:12054   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":11680:11685   */\n      dup1\n        /* \"#utility.yul\":11677:11678   */\n      0x00\n        /* \"#utility.yul\":11670:11686   */\n      mstore\n        /* \"#utility.yul\":11724:11728   */\n      0x20\n        /* \"#utility.yul\":11721:11722   */\n      0x00\n        /* \"#utility.yul\":11711:11729   */\n      keccak256\n        /* \"#utility.yul\":11794:11796   */\n      0x1f\n        /* \"#utility.yul\":11782:11792   */\n      dup5\n        /* \"#utility.yul\":11778:11797   */\n      add\n        /* \"#utility.yul\":11775:11776   */\n      0x05\n        /* \"#utility.yul\":11771:11798   */\n      shr\n        /* \"#utility.yul\":11765:11769   */\n      dup2\n        /* \"#utility.yul\":11761:11799   */\n      add\n        /* \"#utility.yul\":11830:11834   */\n      0x20\n        /* \"#utility.yul\":11818:11828   */\n      dup6\n        /* \"#utility.yul\":11815:11835   */\n      lt\n        /* \"#utility.yul\":11812:11859   */\n      iszero\n      tag_506\n      jumpi\n      pop\n        /* \"#utility.yul\":11853:11857   */\n      dup1\n        /* \"#utility.yul\":11812:11859   */\n    tag_506:\n        /* \"#utility.yul\":11908:11910   */\n      0x1f\n        /* \"#utility.yul\":11903:11906   */\n      dup5\n        /* \"#utility.yul\":11899:11911   */\n      add\n        /* \"#utility.yul\":11896:11897   */\n      0x05\n        /* \"#utility.yul\":11892:11912   */\n      shr\n        /* \"#utility.yul\":11886:11890   */\n      dup3\n        /* \"#utility.yul\":11882:11913   */\n      add\n        /* \"#utility.yul\":11872:11913   */\n      swap2\n      pop\n        /* \"#utility.yul\":11963:12044   */\n    tag_507:\n        /* \"#utility.yul\":11981:11983   */\n      dup2\n        /* \"#utility.yul\":11974:11979   */\n      dup2\n        /* \"#utility.yul\":11971:11984   */\n      lt\n        /* \"#utility.yul\":11963:12044   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":12040:12041   */\n      0x00\n        /* \"#utility.yul\":12026:12042   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12007:12008   */\n      0x01\n        /* \"#utility.yul\":11996:12009   */\n      add\n        /* \"#utility.yul\":11963:12044   */\n      jump(tag_507)\n    tag_509:\n        /* \"#utility.yul\":11967:11970   */\n      pop\n      pop\n        /* \"#utility.yul\":11542:12060   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:13535   */\n    tag_369:\n        /* \"#utility.yul\":12362:12365   */\n      dup2\n        /* \"#utility.yul\":12356:12366   */\n      mload\n        /* \"#utility.yul\":12389:12407   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12381:12387   */\n      dup2\n        /* \"#utility.yul\":12378:12408   */\n      gt\n        /* \"#utility.yul\":12375:12431   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":12411:12429   */\n      tag_513\n      tag_391\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12440:12537   */\n      tag_514\n        /* \"#utility.yul\":12530:12536   */\n      dup2\n        /* \"#utility.yul\":12490:12528   */\n      tag_515\n        /* \"#utility.yul\":12522:12526   */\n      dup5\n        /* \"#utility.yul\":12516:12527   */\n      sload\n        /* \"#utility.yul\":12490:12528   */\n      tag_153\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12484:12488   */\n      dup5\n        /* \"#utility.yul\":12440:12537   */\n      tag_418\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12586:12590   */\n      0x20\n        /* \"#utility.yul\":12617:12619   */\n      0x1f\n        /* \"#utility.yul\":12606:12620   */\n      dup3\n      gt\n        /* \"#utility.yul\":12634:12635   */\n      0x01\n        /* \"#utility.yul\":12629:13278   */\n      dup2\n      eq\n      tag_517\n      jumpi\n        /* \"#utility.yul\":13322:13323   */\n      0x00\n        /* \"#utility.yul\":13339:13345   */\n      dup4\n        /* \"#utility.yul\":13336:13425   */\n      iszero\n      tag_518\n      jumpi\n      pop\n        /* \"#utility.yul\":13391:13410   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":13385:13411   */\n      mload\n        /* \"#utility.yul\":13336:13425   */\n    tag_518:\n      not(0x00)\n        /* \"#utility.yul\":12193:12194   */\n      0x03\n        /* \"#utility.yul\":12189:12200   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12185:12209   */\n      shr\n        /* \"#utility.yul\":12181:12210   */\n      not\n        /* \"#utility.yul\":12171:12211   */\n      and\n        /* \"#utility.yul\":12217:12218   */\n      0x01\n        /* \"#utility.yul\":12213:12224   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":12168:12225   */\n      or\n        /* \"#utility.yul\":13438:13519   */\n      dup5\n      sstore\n        /* \"#utility.yul\":12599:13529   */\n      jump(tag_509)\n        /* \"#utility.yul\":12629:13278   */\n    tag_517:\n        /* \"#utility.yul\":11489:11490   */\n      0x00\n        /* \"#utility.yul\":11482:11496   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":11526:11530   */\n      0x20\n        /* \"#utility.yul\":11513:11531   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12665:12685   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":12783:13005   */\n    tag_521:\n        /* \"#utility.yul\":12797:12804   */\n      dup3\n        /* \"#utility.yul\":12794:12795   */\n      dup2\n        /* \"#utility.yul\":12791:12805   */\n      lt\n        /* \"#utility.yul\":12783:13005   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12879:12898   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12873:12899   */\n      mload\n        /* \"#utility.yul\":12858:12900   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12986:12990   */\n      0x20\n        /* \"#utility.yul\":12971:12991   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":12939:12940   */\n      0x01\n        /* \"#utility.yul\":12927:12941   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":12813:12825   */\n      add\n        /* \"#utility.yul\":12783:13005   */\n      jump(tag_521)\n    tag_523:\n        /* \"#utility.yul\":12787:12790   */\n      pop\n        /* \"#utility.yul\":13033:13039   */\n      dup5\n        /* \"#utility.yul\":13024:13031   */\n      dup3\n        /* \"#utility.yul\":13021:13040   */\n      lt\n        /* \"#utility.yul\":13018:13219   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":13094:13113   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":13088:13114   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13177:13178   */\n      0x03\n        /* \"#utility.yul\":13173:13187   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":13189:13192   */\n      0xf8\n        /* \"#utility.yul\":13169:13193   */\n      and\n        /* \"#utility.yul\":13165:13202   */\n      shr\n        /* \"#utility.yul\":13161:13203   */\n      not\n        /* \"#utility.yul\":13146:13204   */\n      and\n        /* \"#utility.yul\":13131:13205   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13018:13219   */\n    tag_524:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13265:13266   */\n      0x01\n        /* \"#utility.yul\":13249:13263   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13245:13267   */\n      add\n        /* \"#utility.yul\":13232:13268   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12236:13535   */\n      jump\t// out\n        /* \"#utility.yul\":14757:14884   */\n    tag_395:\n        /* \"#utility.yul\":14818:14828   */\n      0x4e487b71\n        /* \"#utility.yul\":14813:14816   */\n      0xe0\n        /* \"#utility.yul\":14809:14829   */\n      shl\n        /* \"#utility.yul\":14806:14807   */\n      0x00\n        /* \"#utility.yul\":14799:14830   */\n      mstore\n        /* \"#utility.yul\":14849:14853   */\n      0x32\n        /* \"#utility.yul\":14846:14847   */\n      0x04\n        /* \"#utility.yul\":14839:14854   */\n      mstore\n        /* \"#utility.yul\":14873:14877   */\n      0x24\n        /* \"#utility.yul\":14870:14871   */\n      0x00\n        /* \"#utility.yul\":14863:14878   */\n      revert\n        /* \"#utility.yul\":14889:15025   */\n    tag_408:\n        /* \"#utility.yul\":14928:14931   */\n      0x00\n        /* \"#utility.yul\":14956:14961   */\n      dup2\n        /* \"#utility.yul\":14946:14985   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":14965:14983   */\n      tag_531\n      tag_413\n      jump\t// in\n    tag_531:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":15001:15019   */\n      add\n      swap1\n        /* \"#utility.yul\":14889:15025   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d425106bd83823a2750a9a3f439963bd87ed4ec854cbbd904f169966229fa7f664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3049": {
									"entryPoint": null,
									"id": 3049,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_559": {
									"entryPoint": 25,
									"id": 559,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:608:16",
										"nodeType": "YulBlock",
										"src": "0:608:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:229:16",
													"nodeType": "YulBlock",
													"src": "188:229:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:16",
																		"nodeType": "YulLiteral",
																		"src": "216:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:16"
																},
																"nativeSrc": "198:21:16",
																"nodeType": "YulFunctionCall",
																"src": "198:21:16"
															},
															"nativeSrc": "198:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:16",
																				"nodeType": "YulLiteral",
																				"src": "250:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:16"
																		},
																		"nativeSrc": "235:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:16",
																		"nodeType": "YulLiteral",
																		"src": "255:2:16",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:16"
																},
																"nativeSrc": "228:30:16",
																"nodeType": "YulFunctionCall",
																"src": "228:30:16"
															},
															"nativeSrc": "228:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:16",
																				"nodeType": "YulLiteral",
																				"src": "289:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:16"
																		},
																		"nativeSrc": "274:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:16"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nativeSrc": "294:34:16",
																		"nodeType": "YulLiteral",
																		"src": "294:34:16",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:16"
																},
																"nativeSrc": "267:62:16",
																"nodeType": "YulFunctionCall",
																"src": "267:62:16"
															},
															"nativeSrc": "267:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "349:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "360:2:16",
																				"nodeType": "YulLiteral",
																				"src": "360:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "345:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:16"
																		},
																		"nativeSrc": "345:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:16"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "365:9:16",
																		"nodeType": "YulLiteral",
																		"src": "365:9:16",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "338:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:16"
																},
																"nativeSrc": "338:37:16",
																"nodeType": "YulFunctionCall",
																"src": "338:37:16"
															},
															"nativeSrc": "338:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "338:37:16"
														},
														{
															"nativeSrc": "384:27:16",
															"nodeType": "YulAssignment",
															"src": "384:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "396:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "407:3:16",
																		"nodeType": "YulLiteral",
																		"src": "407:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "392:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:16"
																},
																"nativeSrc": "392:19:16",
																"nodeType": "YulFunctionCall",
																"src": "392:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "384:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:403:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:16",
														"nodeType": "YulTypedName",
														"src": "165:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:16",
														"nodeType": "YulTypedName",
														"src": "179:4:16",
														"type": ""
													}
												],
												"src": "14:403:16"
											},
											{
												"body": {
													"nativeSrc": "519:87:16",
													"nodeType": "YulBlock",
													"src": "519:87:16",
													"statements": [
														{
															"nativeSrc": "529:26:16",
															"nodeType": "YulAssignment",
															"src": "529:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "541:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:2:16",
																		"nodeType": "YulLiteral",
																		"src": "552:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "537:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:16"
																},
																"nativeSrc": "537:18:16",
																"nodeType": "YulFunctionCall",
																"src": "537:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "529:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "571:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "586:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "594:4:16",
																				"nodeType": "YulLiteral",
																				"src": "594:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "582:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:16"
																		},
																		"nativeSrc": "582:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "564:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:16"
																},
																"nativeSrc": "564:36:16",
																"nodeType": "YulFunctionCall",
																"src": "564:36:16"
															},
															"nativeSrc": "564:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "564:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "422:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "488:9:16",
														"nodeType": "YulTypedName",
														"src": "488:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "499:6:16",
														"nodeType": "YulTypedName",
														"src": "499:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "510:4:16",
														"nodeType": "YulTypedName",
														"src": "510:4:16",
														"type": ""
													}
												],
												"src": "422:184:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5060156019565b60d3565b5f54610100900460ff161560835760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff9081161460d1575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6119c7806100e05f395ff3fe608060405234801561000f575f5ffd5b50600436106101bb575f3560e01c806370a08231116100f3578063a64a92a811610093578063d547741f1161006e578063d547741f146103db578063dbd192d4146103ee578063dd62ed3e14610415578063e90cdd1c14610428575f5ffd5b8063a64a92a814610378578063a9059cbb146103a3578063bd39a2a8146103b6575f5ffd5b806391d14854116100ce57806391d148541461034357806395d89b4114610356578063a217fddf1461035e578063a457c2d714610365575f5ffd5b806370a082311461030057806379cc6790146103285780638129fc1c1461033b575f5ffd5b8063313ce5671161015e578063395093511161013957806339509351146102a057806342966c68146102b35780634e695cca146102c65780636e4af83e146102ed575f5ffd5b8063313ce5671461026b57806336568abe1461027a57806338f5a5e41461028d575f5ffd5b806318160ddd1161019957806318160ddd1461020f57806323b872dd14610221578063248a9ca3146102345780632f2ff15d14610256575f5ffd5b806301ffc9a7146101bf57806306fdde03146101e7578063095ea7b3146101fc575b5f5ffd5b6101d26101cd3660046114a9565b61043b565b60405190151581526020015b60405180910390f35b6101ef610471565b6040516101de91906114d0565b6101d261020a366004611520565b610501565b6035545b6040519081526020016101de565b6101d261022f366004611548565b610518565b610213610242366004611582565b5f90815260c9602052604090206001015490565b610269610264366004611599565b6105dc565b005b604051601281526020016101de565b610269610288366004611599565b610605565b61026961029b3660046115c3565b610688565b6101d26102ae366004611520565b610737565b6102696102c1366004611582565b610758565b6102137f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b081565b6102696102fb3660046115c3565b610765565b61021361030e3660046115c3565b6001600160a01b03165f9081526033602052604090205490565b610269610336366004611520565b610810565b610269610825565b6101d2610351366004611599565b61099e565b6101ef6109c8565b6102135f81565b6101d2610373366004611520565b6109d7565b6101d26103863660046115c3565b6001600160a01b03165f90815260fc602052604090205460ff1690565b6101d26103b1366004611520565b610a5c565b60fb546103c69063ffffffff1681565b60405163ffffffff90911681526020016101de565b6102696103e9366004611599565b610a69565b6102137f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f81565b6102136104233660046115dc565b610a8d565b610269610436366004611604565b610ab7565b5f6001600160e01b03198216637965db0b60e01b148061046b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606036805461048090611627565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90611627565b80156104f75780601f106104ce576101008083540402835291602001916104f7565b820191905f5260205f20905b8154815290600101906020018083116104da57829003601f168201915b5050505050905090565b5f3361050e818585610b54565b5060019392505050565b60fb545f9084908490839063ffffffff16158061053c575060fb5463ffffffff1642105b905080156105c6575f61054f818561099e565b8061055f575061055f5f8461099e565b8061056f575061056f5f3361099e565b9050801580156105a657506105a47f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b08461099e565b155b156105c45760405163afae8e9760e01b815260040160405180910390fd5b505b6105d1878787610c77565b979650505050505050565b5f82815260c960205260409020600101546105f681610c8f565b6106008383610c99565b505050565b6001600160a01b038116331461067a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106848282610d1e565b5050565b7f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f6106b281610c8f565b6001600160a01b0382165f90815260fc602052604090205460ff16156106eb57604051631482985760e31b815260040160405180910390fd5b6001600160a01b0382165f81815260fc6020526040808220805460ff19166001179055517f4f03d75a12f5f2153536f14e57d9477eff6be012215a22e894dbc840db1c8f7e9190a25050565b5f3361050e8185856107498383610a8d565b6107539190611673565b610b54565b6107623382610d84565b50565b7f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f61078f81610c8f565b6001600160a01b0382165f90815260fc602052604090205460ff166107c7576040516317c33b6560e01b815260040160405180910390fd5b6001600160a01b0382165f81815260fc6020526040808220805460ff19169055517f43a926d6828be5aecd76c987f92b63201c077e5ebf44ea16eecd0f2342bf53199190a25050565b61081b823383610eb6565b6106848282610d84565b5f54610100900460ff161580801561084357505f54600160ff909116105b8061085c5750303b15801561085c57505f5460ff166001145b6108bf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610671565b5f805460ff1916600117905580156108e0575f805461ff0019166101001790555b61092460405180604001604052806006815260200165416c7661726160d01b81525060405180604001604052806004815260200163414c564160e01b815250610f2e565b61092c610f5e565b610934610f86565b610957336109446012600a611769565b61095290630bebc200611777565b610fb6565b8015610762575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b5f91825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606037805461048090611627565b5f33816109e48286610a8d565b905083811015610a445760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610671565b610a518286868403610b54565b506001949350505050565b5f3361050e818585611075565b5f82815260c96020526040902060010154610a8381610c8f565b6106008383610d1e565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b5f610ac181610c8f565b60fb5463ffffffff1615801590610ae0575060fb5463ffffffff164210155b15610afe57604051636f555ee160e11b815260040160405180910390fd5b60405163ffffffff831681527f0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d69060200160405180910390a15060fb805463ffffffff191663ffffffff92909216919091179055565b6001600160a01b038316610bb65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610671565b6001600160a01b038216610c175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610671565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f33610c84858285610eb6565b610a51858585611075565b61076281336110b9565b610ca3828261099e565b610684575f82815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610cda3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610d28828261099e565b15610684575f82815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216610de45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610671565b6001600160a01b0382165f9081526033602052604090205481811015610e575760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610671565b6001600160a01b0383165f8181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b5f610ec18484610a8d565b90505f198114610f285781811015610f1b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610671565b610f288484848403610b54565b50505050565b5f54610100900460ff16610f545760405162461bcd60e51b81526004016106719061178e565b6106848282611112565b5f54610100900460ff16610f845760405162461bcd60e51b81526004016106719061178e565b565b5f54610100900460ff16610fac5760405162461bcd60e51b81526004016106719061178e565b610f845f33610c99565b6001600160a01b03821661100c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610671565b8060355f82825461101d9190611673565b90915550506001600160a01b0382165f818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383165f90815260fc602052604090205460ff16156110ae57604051633991fca960e21b815260040160405180910390fd5b610600838383611151565b6110c3828261099e565b610684576110d0816112fa565b6110db83602061130c565b6040516020016110ec9291906117f0565b60408051601f198184030181529082905262461bcd60e51b8252610671916004016114d0565b5f54610100900460ff166111385760405162461bcd60e51b81526004016106719061178e565b603661114483826118ad565b50603761060082826118ad565b6001600160a01b0383166111b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610671565b6001600160a01b0382166112175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610671565b6001600160a01b0383165f908152603360205260409020548181101561128e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610671565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112ed9086815260200190565b60405180910390a3610f28565b606061046b6001600160a01b03831660145b60605f61131a836002611777565b611325906002611673565b67ffffffffffffffff81111561133d5761133d61184e565b6040519080825280601f01601f191660200182016040528015611367576020820181803683370190505b509050600360fc1b815f8151811061138157611381611968565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106113af576113af611968565b60200101906001600160f81b03191690815f1a9053505f6113d1846002611777565b6113dc906001611673565b90505b6001811115611453576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061141057611410611968565b1a60f81b82828151811061142657611426611968565b60200101906001600160f81b03191690815f1a90535060049490941c9361144c8161197c565b90506113df565b5083156114a25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610671565b9392505050565b5f602082840312156114b9575f5ffd5b81356001600160e01b0319811681146114a2575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461151b575f5ffd5b919050565b5f5f60408385031215611531575f5ffd5b61153a83611505565b946020939093013593505050565b5f5f5f6060848603121561155a575f5ffd5b61156384611505565b925061157160208501611505565b929592945050506040919091013590565b5f60208284031215611592575f5ffd5b5035919050565b5f5f604083850312156115aa575f5ffd5b823591506115ba60208401611505565b90509250929050565b5f602082840312156115d3575f5ffd5b6114a282611505565b5f5f604083850312156115ed575f5ffd5b6115f683611505565b91506115ba60208401611505565b5f60208284031215611614575f5ffd5b813563ffffffff811681146114a2575f5ffd5b600181811c9082168061163b57607f821691505b60208210810361165957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561046b5761046b61165f565b6001815b60018411156116c1578085048111156116a5576116a561165f565b60018416156116b357908102905b60019390931c92800261168a565b935093915050565b5f826116d75750600161046b565b816116e357505f61046b565b81600181146116f957600281146117035761171f565b600191505061046b565b60ff8411156117145761171461165f565b50506001821b61046b565b5060208310610133831016604e8410600b8410161715611742575081810a61046b565b61174e5f198484611686565b805f19048211156117615761176161165f565b029392505050565b5f6114a260ff8416836116c9565b808202811582820484141761046b5761046b61165f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f61182160178301856117d9565b7001034b99036b4b9b9b4b733903937b6329607d1b815261184560118201856117d9565b95945050505050565b634e487b7160e01b5f52604160045260245ffd5b601f82111561060057805f5260205f20601f840160051c810160208510156118875750805b601f840160051c820191505b818110156118a6575f8155600101611893565b5050505050565b815167ffffffffffffffff8111156118c7576118c761184e565b6118db816118d58454611627565b84611862565b6020601f82116001811461190d575f83156118f65750848201515b5f19600385901b1c1916600184901b1784556118a6565b5f84815260208120601f198516915b8281101561193c578785015182556020948501946001909201910161191c565b508482101561195957868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b5f8161198a5761198a61165f565b505f19019056fea2646970667358221220d425106bd83823a2750a9a3f439963bd87ed4ec854cbbd904f169966229fa7f664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x15 PUSH1 0x19 JUMP JUMPDEST PUSH1 0xD3 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH1 0xD1 JUMPI PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH2 0x19C7 DUP1 PUSH2 0xE0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA64A92A8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xDBD192D4 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xE90CDD1C EQ PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA64A92A8 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xBD39A2A8 EQ PUSH2 0x3B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x365 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x33B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x4E695CCA EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x6E4AF83E EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x38F5A5E4 EQ PUSH2 0x28D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x269 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x213 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH2 0x3C6 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x269 PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x46B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0x1627 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x1627 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0xB54 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH0 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF AND ISZERO DUP1 PUSH2 0x53C JUMPI POP PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 PUSH2 0x54F DUP2 DUP6 PUSH2 0x99E JUMP JUMPDEST DUP1 PUSH2 0x55F JUMPI POP PUSH2 0x55F PUSH0 DUP5 PUSH2 0x99E JUMP JUMPDEST DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F PUSH0 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI POP PUSH2 0x5A4 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP5 PUSH2 0x99E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAFAE8E97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x5D1 DUP8 DUP8 DUP8 PUSH2 0xC77 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5F6 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xC99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0xD1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F PUSH2 0x6B2 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x14829857 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x4F03D75A12F5F2153536F14E57D9477EFF6BE012215A22E894DBC840DB1C8F7E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x749 DUP4 DUP4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x762 CALLER DUP3 PUSH2 0xD84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F PUSH2 0x78F DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x17C33B65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x43A926D6828BE5AECD76C987F92B63201C077E5EBF44EA16EECD0F2342BF5319 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x81B DUP3 CALLER DUP4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0xD84 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x843 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x85C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85C JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x924 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x416C76617261 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x414C5641 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x92C PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x934 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x957 CALLER PUSH2 0x944 PUSH1 0x12 PUSH1 0xA PUSH2 0x1769 JUMP JUMPDEST PUSH2 0x952 SWAP1 PUSH4 0xBEBC200 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x9E4 DUP3 DUP7 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH2 0xA51 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB54 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA83 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xAC1 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAE0 JUMPI POP PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F555EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xE210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0xFB DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xC84 DUP6 DUP3 DUP6 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xA51 DUP6 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x762 DUP2 CALLER PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0xCA3 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCDA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xD28 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST ISZERO PUSH2 0x684 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC1 DUP5 DUP5 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xF28 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST PUSH2 0xF28 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB54 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xF84 PUSH0 CALLER PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3991FCA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 DUP4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x10C3 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH2 0x10D0 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x10DB DUP4 PUSH1 0x20 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10EC SWAP3 SWAP2 SWAP1 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x671 SWAP2 PUSH1 0x4 ADD PUSH2 0x14D0 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x36 PUSH2 0x1144 DUP4 DUP3 PUSH2 0x18AD JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x600 DUP3 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x12ED SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x46B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x131A DUP4 PUSH1 0x2 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1325 SWAP1 PUSH1 0x2 PUSH2 0x1673 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1367 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1381 JUMPI PUSH2 0x1381 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13AF JUMPI PUSH2 0x13AF PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x13D1 DUP5 PUSH1 0x2 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x13DC SWAP1 PUSH1 0x1 PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1453 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1410 JUMPI PUSH2 0x1410 PUSH2 0x1968 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1426 JUMPI PUSH2 0x1426 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x144C DUP2 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP PUSH2 0x13DF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x151B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1531 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153A DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x155A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1563 DUP5 PUSH2 0x1505 JUMP JUMPDEST SWAP3 POP PUSH2 0x1571 PUSH1 0x20 DUP6 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1592 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x15BA PUSH1 0x20 DUP5 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14A2 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15F6 DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BA PUSH1 0x20 DUP5 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1614 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x163B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x165F JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x16C1 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x16A5 JUMPI PUSH2 0x16A5 PUSH2 0x165F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x16B3 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x168A JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16D7 JUMPI POP PUSH1 0x1 PUSH2 0x46B JUMP JUMPDEST DUP2 PUSH2 0x16E3 JUMPI POP PUSH0 PUSH2 0x46B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16F9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1703 JUMPI PUSH2 0x171F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1714 PUSH2 0x165F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1742 JUMPI POP DUP2 DUP2 EXP PUSH2 0x46B JUMP JUMPDEST PUSH2 0x174E PUSH0 NOT DUP5 DUP5 PUSH2 0x1686 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1761 PUSH2 0x165F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A2 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x16C9 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x165F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x1821 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x1845 PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x600 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1887 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1893 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C7 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x18D5 DUP5 SLOAD PUSH2 0x1627 JUMP JUMPDEST DUP5 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x190D JUMPI PUSH0 DUP4 ISZERO PUSH2 0x18F6 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x18A6 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x191C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1959 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x198A JUMPI PUSH2 0x198A PUSH2 0x165F JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x25 LT PUSH12 0xD83823A2750A9A3F439963BD DUP8 0xED 0x4E 0xC8 SLOAD 0xCB 0xBD SWAP1 0x4F AND SWAP10 PUSH7 0x229FA7F664736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "370:3597:14:-:0;;;1646:81;;;;;;;;;-1:-1:-1;1670:22:14;:20;:22::i;:::-;370:3597;;5939:280:2;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:2;;216:2:16;5998:66:2;;;198:21:16;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:16;;;338:37;392:19;;5998:66:2;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:2;6140:15;6125:30;;;;;;6174:28;;564:36:16;;;6174:28:2;;552:2:16;537:18;6174:28:2;;;;;;;6074:139;5939:280::o;422:184:16:-;370:3597:14;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ALLOWED_TRANSFER_FROM_ROLE_3225": {
									"entryPoint": null,
									"id": 3225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GREYLIST_MANAGER_ROLE_3026": {
									"entryPoint": null,
									"id": 3026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Burnable_init_1288": {
									"entryPoint": 3934,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_626": {
									"entryPoint": 3886,
									"id": 626,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_644": {
									"entryPoint": 4370,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__WithSupervisedTransfers_init_3294": {
									"entryPoint": 3974,
									"id": 3294,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1185": {
									"entryPoint": null,
									"id": 1185,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1120": {
									"entryPoint": 2900,
									"id": 1120,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1174": {
									"entryPoint": null,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1075": {
									"entryPoint": 3460,
									"id": 1075,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_108": {
									"entryPoint": 3215,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_147": {
									"entryPoint": 4281,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_299": {
									"entryPoint": 3225,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1003": {
									"entryPoint": 4022,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1717": {
									"entryPoint": null,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_330": {
									"entryPoint": 3358,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_1163": {
									"entryPoint": 3766,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_3176": {
									"entryPoint": 4213,
									"id": 3176,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_946": {
									"entryPoint": 4433,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToGreyList_3106": {
									"entryPoint": 1672,
									"id": 3106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_741": {
									"entryPoint": 2701,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_766": {
									"entryPoint": 1281,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1328": {
									"entryPoint": 2064,
									"id": 1328,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1307": {
									"entryPoint": 1880,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_674": {
									"entryPoint": null,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_869": {
									"entryPoint": 2519,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_182": {
									"entryPoint": 1500,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_95": {
									"entryPoint": 2462,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_828": {
									"entryPoint": 1847,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_3078": {
									"entryPoint": 2085,
									"id": 3078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_1377": {
									"entryPoint": null,
									"id": 1377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGreyListed_3148": {
									"entryPoint": null,
									"id": 3148,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@listingTimestamp_3227": {
									"entryPoint": null,
									"id": 3227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_654": {
									"entryPoint": 1137,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromGreyList_3135": {
									"entryPoint": 1893,
									"id": 3135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_225": {
									"entryPoint": 1541,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_202": {
									"entryPoint": 2665,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setListingTimestamp_3325": {
									"entryPoint": 2743,
									"id": 3325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_2008": {
									"entryPoint": null,
									"id": 2008,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 1083,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_664": {
									"entryPoint": 2504,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_1923": {
									"entryPoint": 4876,
									"id": 1923,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1943": {
									"entryPoint": 4858,
									"id": 1943,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3201": {
									"entryPoint": 1304,
									"id": 3201,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_799": {
									"entryPoint": 3191,
									"id": 799,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_723": {
									"entryPoint": 2652,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15388:16",
										"nodeType": "YulBlock",
										"src": "0:15388:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:16",
													"nodeType": "YulBlock",
													"src": "83:217:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:16",
																"nodeType": "YulBlock",
																"src": "129:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:16",
																					"nodeType": "YulLiteral",
																					"src": "138:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:16",
																					"nodeType": "YulLiteral",
																					"src": "141:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:16"
																			},
																			"nativeSrc": "131:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:16"
																		},
																		"nativeSrc": "131:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:16"
																		},
																		"nativeSrc": "100:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:16",
																		"nodeType": "YulLiteral",
																		"src": "125:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:16"
																},
																"nativeSrc": "96:32:16",
																"nodeType": "YulFunctionCall",
																"src": "96:32:16"
															},
															"nativeSrc": "93:52:16",
															"nodeType": "YulIf",
															"src": "93:52:16"
														},
														{
															"nativeSrc": "154:36:16",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:16"
																},
																"nativeSrc": "167:23:16",
																"nodeType": "YulFunctionCall",
																"src": "167:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:16",
																	"nodeType": "YulTypedName",
																	"src": "158:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:16",
																"nodeType": "YulBlock",
																"src": "254:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:16",
																					"nodeType": "YulLiteral",
																					"src": "263:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:16",
																					"nodeType": "YulLiteral",
																					"src": "266:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:16"
																			},
																			"nativeSrc": "256:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:16"
																		},
																		"nativeSrc": "256:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:16",
																								"nodeType": "YulLiteral",
																								"src": "234:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:16",
																								"nodeType": "YulLiteral",
																								"src": "239:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:16"
																						},
																						"nativeSrc": "230:20:16",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:16"
																				},
																				"nativeSrc": "219:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:16"
																		},
																		"nativeSrc": "209:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:16"
																},
																"nativeSrc": "202:51:16",
																"nodeType": "YulFunctionCall",
																"src": "202:51:16"
															},
															"nativeSrc": "199:71:16",
															"nodeType": "YulIf",
															"src": "199:71:16"
														},
														{
															"nativeSrc": "279:15:16",
															"nodeType": "YulAssignment",
															"src": "279:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:16",
																"nodeType": "YulIdentifier",
																"src": "289:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:16",
														"nodeType": "YulTypedName",
														"src": "49:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:16",
														"nodeType": "YulTypedName",
														"src": "60:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:16",
														"nodeType": "YulTypedName",
														"src": "72:6:16",
														"type": ""
													}
												],
												"src": "14:286:16"
											},
											{
												"body": {
													"nativeSrc": "400:92:16",
													"nodeType": "YulBlock",
													"src": "400:92:16",
													"statements": [
														{
															"nativeSrc": "410:26:16",
															"nodeType": "YulAssignment",
															"src": "410:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:16",
																		"nodeType": "YulLiteral",
																		"src": "433:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:16"
																},
																"nativeSrc": "418:18:16",
																"nodeType": "YulFunctionCall",
																"src": "418:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:16"
																				},
																				"nativeSrc": "470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:16"
																		},
																		"nativeSrc": "463:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:16"
																},
																"nativeSrc": "445:41:16",
																"nodeType": "YulFunctionCall",
																"src": "445:41:16"
															},
															"nativeSrc": "445:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:16",
														"nodeType": "YulTypedName",
														"src": "369:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:16",
														"nodeType": "YulTypedName",
														"src": "380:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:16",
														"nodeType": "YulTypedName",
														"src": "391:4:16",
														"type": ""
													}
												],
												"src": "305:187:16"
											},
											{
												"body": {
													"nativeSrc": "618:297:16",
													"nodeType": "YulBlock",
													"src": "618:297:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "635:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "646:2:16",
																		"nodeType": "YulLiteral",
																		"src": "646:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:16"
																},
																"nativeSrc": "628:21:16",
																"nodeType": "YulFunctionCall",
																"src": "628:21:16"
															},
															"nativeSrc": "628:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "628:21:16"
														},
														{
															"nativeSrc": "658:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "658:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "678:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "672:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "672:5:16"
																},
																"nativeSrc": "672:13:16",
																"nodeType": "YulFunctionCall",
																"src": "672:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:16",
																	"nodeType": "YulTypedName",
																	"src": "662:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:16",
																				"nodeType": "YulLiteral",
																				"src": "716:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:16"
																		},
																		"nativeSrc": "701:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "721:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:16"
																},
																"nativeSrc": "694:34:16",
																"nodeType": "YulFunctionCall",
																"src": "694:34:16"
															},
															"nativeSrc": "694:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "694:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:16",
																				"nodeType": "YulLiteral",
																				"src": "758:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:16"
																		},
																		"nativeSrc": "743:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "767:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:2:16",
																				"nodeType": "YulLiteral",
																				"src": "775:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:16"
																		},
																		"nativeSrc": "763:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "763:15:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "780:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "737:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:16"
																},
																"nativeSrc": "737:50:16",
																"nodeType": "YulFunctionCall",
																"src": "737:50:16"
															},
															"nativeSrc": "737:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "737:50:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "811:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "811:9:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "822:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "822:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "807:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:16"
																				},
																				"nativeSrc": "807:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:16",
																				"nodeType": "YulLiteral",
																				"src": "831:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "803:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:16"
																		},
																		"nativeSrc": "803:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "803:31:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:1:16",
																		"nodeType": "YulLiteral",
																		"src": "836:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:16"
																},
																"nativeSrc": "796:42:16",
																"nodeType": "YulFunctionCall",
																"src": "796:42:16"
															},
															"nativeSrc": "796:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "796:42:16"
														},
														{
															"nativeSrc": "847:62:16",
															"nodeType": "YulAssignment",
															"src": "847:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "863:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "863:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "882:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "882:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "890:2:16",
																								"nodeType": "YulLiteral",
																								"src": "890:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "878:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:16"
																						},
																						"nativeSrc": "878:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "878:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:2:16",
																								"nodeType": "YulLiteral",
																								"src": "899:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "895:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:16"
																						},
																						"nativeSrc": "895:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "895:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "874:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:16"
																				},
																				"nativeSrc": "874:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "874:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:16"
																		},
																		"nativeSrc": "859:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "859:45:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:16",
																		"nodeType": "YulLiteral",
																		"src": "906:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "855:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:16"
																},
																"nativeSrc": "855:54:16",
																"nodeType": "YulFunctionCall",
																"src": "855:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "847:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "847:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "497:418:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "587:9:16",
														"nodeType": "YulTypedName",
														"src": "587:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "598:6:16",
														"nodeType": "YulTypedName",
														"src": "598:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "609:4:16",
														"nodeType": "YulTypedName",
														"src": "609:4:16",
														"type": ""
													}
												],
												"src": "497:418:16"
											},
											{
												"body": {
													"nativeSrc": "969:124:16",
													"nodeType": "YulBlock",
													"src": "969:124:16",
													"statements": [
														{
															"nativeSrc": "979:29:16",
															"nodeType": "YulAssignment",
															"src": "979:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1001:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "988:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:16"
																},
																"nativeSrc": "988:20:16",
																"nodeType": "YulFunctionCall",
																"src": "988:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1071:16:16",
																"nodeType": "YulBlock",
																"src": "1071:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1080:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1083:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1073:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:16"
																			},
																			"nativeSrc": "1073:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:16"
																		},
																		"nativeSrc": "1073:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1030:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1030:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1041:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1056:3:16",
																										"nodeType": "YulLiteral",
																										"src": "1056:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1061:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1061:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1052:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1052:3:16"
																								},
																								"nativeSrc": "1052:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1052:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1065:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1065:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1048:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1048:3:16"
																						},
																						"nativeSrc": "1048:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1048:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1037:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1037:3:16"
																				},
																				"nativeSrc": "1037:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1037:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1027:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1027:2:16"
																		},
																		"nativeSrc": "1027:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1020:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:16"
																},
																"nativeSrc": "1020:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1020:50:16"
															},
															"nativeSrc": "1017:70:16",
															"nodeType": "YulIf",
															"src": "1017:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "920:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "948:6:16",
														"nodeType": "YulTypedName",
														"src": "948:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "959:5:16",
														"nodeType": "YulTypedName",
														"src": "959:5:16",
														"type": ""
													}
												],
												"src": "920:173:16"
											},
											{
												"body": {
													"nativeSrc": "1185:213:16",
													"nodeType": "YulBlock",
													"src": "1185:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1231:16:16",
																"nodeType": "YulBlock",
																"src": "1231:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1240:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1243:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1233:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:16"
																			},
																			"nativeSrc": "1233:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:16"
																		},
																		"nativeSrc": "1233:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1206:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1206:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1215:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1202:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:16"
																		},
																		"nativeSrc": "1202:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1198:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:16"
																},
																"nativeSrc": "1198:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1198:32:16"
															},
															"nativeSrc": "1195:52:16",
															"nodeType": "YulIf",
															"src": "1195:52:16"
														},
														{
															"nativeSrc": "1256:39:16",
															"nodeType": "YulAssignment",
															"src": "1256:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1285:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1266:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1266:18:16"
																},
																"nativeSrc": "1266:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1266:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																}
															]
														},
														{
															"nativeSrc": "1304:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1304:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1317:1:16",
																"nodeType": "YulLiteral",
																"src": "1317:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1308:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1308:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1327:41:16",
															"nodeType": "YulAssignment",
															"src": "1327:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1353:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1364:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1364:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1349:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:16"
																		},
																		"nativeSrc": "1349:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1336:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1336:12:16"
																},
																"nativeSrc": "1336:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1336:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1327:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1327:5:16"
																}
															]
														},
														{
															"nativeSrc": "1377:15:16",
															"nodeType": "YulAssignment",
															"src": "1377:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1387:5:16",
																"nodeType": "YulIdentifier",
																"src": "1387:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1377:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1098:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1143:9:16",
														"nodeType": "YulTypedName",
														"src": "1143:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1154:7:16",
														"nodeType": "YulTypedName",
														"src": "1154:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1166:6:16",
														"nodeType": "YulTypedName",
														"src": "1166:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1174:6:16",
														"nodeType": "YulTypedName",
														"src": "1174:6:16",
														"type": ""
													}
												],
												"src": "1098:300:16"
											},
											{
												"body": {
													"nativeSrc": "1504:76:16",
													"nodeType": "YulBlock",
													"src": "1504:76:16",
													"statements": [
														{
															"nativeSrc": "1514:26:16",
															"nodeType": "YulAssignment",
															"src": "1514:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1526:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1526:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1522:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:16"
																},
																"nativeSrc": "1522:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1522:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1514:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1514:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1556:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1556:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1567:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1549:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:16"
																},
																"nativeSrc": "1549:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1549:25:16"
															},
															"nativeSrc": "1549:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1549:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1403:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1473:9:16",
														"nodeType": "YulTypedName",
														"src": "1473:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1484:6:16",
														"nodeType": "YulTypedName",
														"src": "1484:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1495:4:16",
														"nodeType": "YulTypedName",
														"src": "1495:4:16",
														"type": ""
													}
												],
												"src": "1403:177:16"
											},
											{
												"body": {
													"nativeSrc": "1689:270:16",
													"nodeType": "YulBlock",
													"src": "1689:270:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1735:16:16",
																"nodeType": "YulBlock",
																"src": "1735:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1744:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1747:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1737:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:16"
																			},
																			"nativeSrc": "1737:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1737:12:16"
																		},
																		"nativeSrc": "1737:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1710:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1710:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1706:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1706:3:16"
																		},
																		"nativeSrc": "1706:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1706:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1731:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1731:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1702:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1702:3:16"
																},
																"nativeSrc": "1702:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:16"
															},
															"nativeSrc": "1699:52:16",
															"nodeType": "YulIf",
															"src": "1699:52:16"
														},
														{
															"nativeSrc": "1760:39:16",
															"nodeType": "YulAssignment",
															"src": "1760:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1789:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1789:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1770:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1770:18:16"
																},
																"nativeSrc": "1770:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1770:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1760:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:16"
																}
															]
														},
														{
															"nativeSrc": "1808:48:16",
															"nodeType": "YulAssignment",
															"src": "1808:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1841:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1841:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1852:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1852:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1837:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:16"
																		},
																		"nativeSrc": "1837:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1818:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1818:18:16"
																},
																"nativeSrc": "1818:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1818:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1808:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:16"
																}
															]
														},
														{
															"nativeSrc": "1865:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1865:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1878:1:16",
																"nodeType": "YulLiteral",
																"src": "1878:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1869:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1869:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1888:41:16",
															"nodeType": "YulAssignment",
															"src": "1888:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1914:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1925:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1925:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:16"
																		},
																		"nativeSrc": "1910:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1897:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:16"
																},
																"nativeSrc": "1897:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1897:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1888:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:16"
																}
															]
														},
														{
															"nativeSrc": "1938:15:16",
															"nodeType": "YulAssignment",
															"src": "1938:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1948:5:16",
																"nodeType": "YulIdentifier",
																"src": "1948:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1938:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1585:374:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1639:9:16",
														"nodeType": "YulTypedName",
														"src": "1639:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1650:7:16",
														"nodeType": "YulTypedName",
														"src": "1650:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1662:6:16",
														"nodeType": "YulTypedName",
														"src": "1662:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1670:6:16",
														"nodeType": "YulTypedName",
														"src": "1670:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1678:6:16",
														"nodeType": "YulTypedName",
														"src": "1678:6:16",
														"type": ""
													}
												],
												"src": "1585:374:16"
											},
											{
												"body": {
													"nativeSrc": "2034:156:16",
													"nodeType": "YulBlock",
													"src": "2034:156:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2080:16:16",
																"nodeType": "YulBlock",
																"src": "2080:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2089:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2092:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2082:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:16"
																			},
																			"nativeSrc": "2082:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2082:12:16"
																		},
																		"nativeSrc": "2082:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2082:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2055:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2055:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2064:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2064:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2051:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:16"
																		},
																		"nativeSrc": "2051:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2076:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2076:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2047:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:16"
																},
																"nativeSrc": "2047:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2047:32:16"
															},
															"nativeSrc": "2044:52:16",
															"nodeType": "YulIf",
															"src": "2044:52:16"
														},
														{
															"nativeSrc": "2105:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2105:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2118:1:16",
																"nodeType": "YulLiteral",
																"src": "2118:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2109:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2109:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2128:32:16",
															"nodeType": "YulAssignment",
															"src": "2128:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2150:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2137:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2137:12:16"
																},
																"nativeSrc": "2137:23:16",
																"nodeType": "YulFunctionCall",
																"src": "2137:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2128:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2128:5:16"
																}
															]
														},
														{
															"nativeSrc": "2169:15:16",
															"nodeType": "YulAssignment",
															"src": "2169:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2179:5:16",
																"nodeType": "YulIdentifier",
																"src": "2179:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2169:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1964:226:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2000:9:16",
														"nodeType": "YulTypedName",
														"src": "2000:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2011:7:16",
														"nodeType": "YulTypedName",
														"src": "2011:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2023:6:16",
														"nodeType": "YulTypedName",
														"src": "2023:6:16",
														"type": ""
													}
												],
												"src": "1964:226:16"
											},
											{
												"body": {
													"nativeSrc": "2296:76:16",
													"nodeType": "YulBlock",
													"src": "2296:76:16",
													"statements": [
														{
															"nativeSrc": "2306:26:16",
															"nodeType": "YulAssignment",
															"src": "2306:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2318:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2314:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:16"
																},
																"nativeSrc": "2314:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2314:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2359:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2341:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:16"
																},
																"nativeSrc": "2341:25:16",
																"nodeType": "YulFunctionCall",
																"src": "2341:25:16"
															},
															"nativeSrc": "2341:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "2341:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2195:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2265:9:16",
														"nodeType": "YulTypedName",
														"src": "2265:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2276:6:16",
														"nodeType": "YulTypedName",
														"src": "2276:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2287:4:16",
														"nodeType": "YulTypedName",
														"src": "2287:4:16",
														"type": ""
													}
												],
												"src": "2195:177:16"
											},
											{
												"body": {
													"nativeSrc": "2464:213:16",
													"nodeType": "YulBlock",
													"src": "2464:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:16:16",
																"nodeType": "YulBlock",
																"src": "2510:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2519:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2522:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2512:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:16"
																			},
																			"nativeSrc": "2512:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:16"
																		},
																		"nativeSrc": "2512:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:16"
																		},
																		"nativeSrc": "2481:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:16"
																},
																"nativeSrc": "2477:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:16"
															},
															"nativeSrc": "2474:52:16",
															"nodeType": "YulIf",
															"src": "2474:52:16"
														},
														{
															"nativeSrc": "2535:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2535:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2548:1:16",
																"nodeType": "YulLiteral",
																"src": "2548:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2539:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2539:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2558:32:16",
															"nodeType": "YulAssignment",
															"src": "2558:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2580:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2580:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2567:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2567:12:16"
																},
																"nativeSrc": "2567:23:16",
																"nodeType": "YulFunctionCall",
																"src": "2567:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2558:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2558:5:16"
																}
															]
														},
														{
															"nativeSrc": "2599:15:16",
															"nodeType": "YulAssignment",
															"src": "2599:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2609:5:16",
																"nodeType": "YulIdentifier",
																"src": "2609:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2599:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:16"
																}
															]
														},
														{
															"nativeSrc": "2623:48:16",
															"nodeType": "YulAssignment",
															"src": "2623:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:16"
																		},
																		"nativeSrc": "2652:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2633:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2633:18:16"
																},
																"nativeSrc": "2633:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2633:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2623:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2377:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2422:9:16",
														"nodeType": "YulTypedName",
														"src": "2422:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2433:7:16",
														"nodeType": "YulTypedName",
														"src": "2433:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2445:6:16",
														"nodeType": "YulTypedName",
														"src": "2445:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2453:6:16",
														"nodeType": "YulTypedName",
														"src": "2453:6:16",
														"type": ""
													}
												],
												"src": "2377:300:16"
											},
											{
												"body": {
													"nativeSrc": "2779:87:16",
													"nodeType": "YulBlock",
													"src": "2779:87:16",
													"statements": [
														{
															"nativeSrc": "2789:26:16",
															"nodeType": "YulAssignment",
															"src": "2789:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2801:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2801:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2812:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2812:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2797:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2797:3:16"
																},
																"nativeSrc": "2797:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2797:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2789:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2789:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2831:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2846:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2846:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2854:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2854:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2842:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:16"
																		},
																		"nativeSrc": "2842:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2842:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2824:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:16"
																},
																"nativeSrc": "2824:36:16",
																"nodeType": "YulFunctionCall",
																"src": "2824:36:16"
															},
															"nativeSrc": "2824:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "2824:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2682:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2748:9:16",
														"nodeType": "YulTypedName",
														"src": "2748:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2759:6:16",
														"nodeType": "YulTypedName",
														"src": "2759:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2770:4:16",
														"nodeType": "YulTypedName",
														"src": "2770:4:16",
														"type": ""
													}
												],
												"src": "2682:184:16"
											},
											{
												"body": {
													"nativeSrc": "2941:116:16",
													"nodeType": "YulBlock",
													"src": "2941:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2987:16:16",
																"nodeType": "YulBlock",
																"src": "2987:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2996:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2996:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2999:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2989:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:16"
																			},
																			"nativeSrc": "2989:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2989:12:16"
																		},
																		"nativeSrc": "2989:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2989:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2962:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2962:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2971:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2971:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2958:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:16"
																		},
																		"nativeSrc": "2958:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2983:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2983:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2954:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:16"
																},
																"nativeSrc": "2954:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2954:32:16"
															},
															"nativeSrc": "2951:52:16",
															"nodeType": "YulIf",
															"src": "2951:52:16"
														},
														{
															"nativeSrc": "3012:39:16",
															"nodeType": "YulAssignment",
															"src": "3012:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3041:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3022:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:16"
																},
																"nativeSrc": "3022:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3022:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3012:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2871:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2907:9:16",
														"nodeType": "YulTypedName",
														"src": "2907:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2918:7:16",
														"nodeType": "YulTypedName",
														"src": "2918:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2930:6:16",
														"nodeType": "YulTypedName",
														"src": "2930:6:16",
														"type": ""
													}
												],
												"src": "2871:186:16"
											},
											{
												"body": {
													"nativeSrc": "3132:156:16",
													"nodeType": "YulBlock",
													"src": "3132:156:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3178:16:16",
																"nodeType": "YulBlock",
																"src": "3178:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3187:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3187:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3190:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3190:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3180:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:16"
																			},
																			"nativeSrc": "3180:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3180:12:16"
																		},
																		"nativeSrc": "3180:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3153:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3153:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3162:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3149:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:16"
																		},
																		"nativeSrc": "3149:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3174:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3174:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3145:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:16"
																},
																"nativeSrc": "3145:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3145:32:16"
															},
															"nativeSrc": "3142:52:16",
															"nodeType": "YulIf",
															"src": "3142:52:16"
														},
														{
															"nativeSrc": "3203:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3203:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3216:1:16",
																"nodeType": "YulLiteral",
																"src": "3216:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3207:5:16",
																	"nodeType": "YulTypedName",
																	"src": "3207:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3226:32:16",
															"nodeType": "YulAssignment",
															"src": "3226:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3248:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3248:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3235:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3235:12:16"
																},
																"nativeSrc": "3235:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3235:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3226:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3226:5:16"
																}
															]
														},
														{
															"nativeSrc": "3267:15:16",
															"nodeType": "YulAssignment",
															"src": "3267:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "3277:5:16",
																"nodeType": "YulIdentifier",
																"src": "3277:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3267:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3062:226:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3098:9:16",
														"nodeType": "YulTypedName",
														"src": "3098:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3109:7:16",
														"nodeType": "YulTypedName",
														"src": "3109:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3121:6:16",
														"nodeType": "YulTypedName",
														"src": "3121:6:16",
														"type": ""
													}
												],
												"src": "3062:226:16"
											},
											{
												"body": {
													"nativeSrc": "3392:93:16",
													"nodeType": "YulBlock",
													"src": "3392:93:16",
													"statements": [
														{
															"nativeSrc": "3402:26:16",
															"nodeType": "YulAssignment",
															"src": "3402:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3414:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3414:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3425:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3425:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3410:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3410:3:16"
																},
																"nativeSrc": "3410:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3410:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3402:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3402:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3444:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3444:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3459:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3459:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3467:10:16",
																				"nodeType": "YulLiteral",
																				"src": "3467:10:16",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3455:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:16"
																		},
																		"nativeSrc": "3455:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3437:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:16"
																},
																"nativeSrc": "3437:42:16",
																"nodeType": "YulFunctionCall",
																"src": "3437:42:16"
															},
															"nativeSrc": "3437:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "3437:42:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "3293:192:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3361:9:16",
														"nodeType": "YulTypedName",
														"src": "3361:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3372:6:16",
														"nodeType": "YulTypedName",
														"src": "3372:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3383:4:16",
														"nodeType": "YulTypedName",
														"src": "3383:4:16",
														"type": ""
													}
												],
												"src": "3293:192:16"
											},
											{
												"body": {
													"nativeSrc": "3577:173:16",
													"nodeType": "YulBlock",
													"src": "3577:173:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3623:16:16",
																"nodeType": "YulBlock",
																"src": "3623:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3632:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3632:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3635:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3635:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3625:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3625:6:16"
																			},
																			"nativeSrc": "3625:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3625:12:16"
																		},
																		"nativeSrc": "3625:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3625:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3607:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3594:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:16"
																		},
																		"nativeSrc": "3594:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3594:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3619:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3619:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3590:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3590:3:16"
																},
																"nativeSrc": "3590:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3590:32:16"
															},
															"nativeSrc": "3587:52:16",
															"nodeType": "YulIf",
															"src": "3587:52:16"
														},
														{
															"nativeSrc": "3648:39:16",
															"nodeType": "YulAssignment",
															"src": "3648:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3677:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3658:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3658:18:16"
																},
																"nativeSrc": "3658:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3658:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3648:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3648:6:16"
																}
															]
														},
														{
															"nativeSrc": "3696:48:16",
															"nodeType": "YulAssignment",
															"src": "3696:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3740:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3740:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3725:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3725:3:16"
																		},
																		"nativeSrc": "3725:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3725:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3706:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3706:18:16"
																},
																"nativeSrc": "3706:38:16",
																"nodeType": "YulFunctionCall",
																"src": "3706:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3696:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3490:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:16",
														"nodeType": "YulTypedName",
														"src": "3535:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:16",
														"nodeType": "YulTypedName",
														"src": "3546:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:16",
														"nodeType": "YulTypedName",
														"src": "3558:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:16",
														"nodeType": "YulTypedName",
														"src": "3566:6:16",
														"type": ""
													}
												],
												"src": "3490:260:16"
											},
											{
												"body": {
													"nativeSrc": "3824:207:16",
													"nodeType": "YulBlock",
													"src": "3824:207:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3870:16:16",
																"nodeType": "YulBlock",
																"src": "3870:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3879:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3879:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3882:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3882:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3872:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3872:6:16"
																			},
																			"nativeSrc": "3872:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3872:12:16"
																		},
																		"nativeSrc": "3872:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3872:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3845:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3845:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3854:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3854:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3841:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:16"
																		},
																		"nativeSrc": "3841:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3841:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3866:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3866:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3837:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:16"
																},
																"nativeSrc": "3837:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3837:32:16"
															},
															"nativeSrc": "3834:52:16",
															"nodeType": "YulIf",
															"src": "3834:52:16"
														},
														{
															"nativeSrc": "3895:36:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3895:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3921:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3921:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3908:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3908:12:16"
																},
																"nativeSrc": "3908:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3908:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3899:5:16",
																	"nodeType": "YulTypedName",
																	"src": "3899:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3985:16:16",
																"nodeType": "YulBlock",
																"src": "3985:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3994:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3994:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3997:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3997:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3987:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3987:6:16"
																			},
																			"nativeSrc": "3987:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3987:12:16"
																		},
																		"nativeSrc": "3987:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3987:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3953:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3953:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3964:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3964:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3971:10:16",
																						"nodeType": "YulLiteral",
																						"src": "3971:10:16",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3960:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3960:3:16"
																				},
																				"nativeSrc": "3960:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3960:22:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3950:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3950:2:16"
																		},
																		"nativeSrc": "3950:33:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:33:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3943:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3943:6:16"
																},
																"nativeSrc": "3943:41:16",
																"nodeType": "YulFunctionCall",
																"src": "3943:41:16"
															},
															"nativeSrc": "3940:61:16",
															"nodeType": "YulIf",
															"src": "3940:61:16"
														},
														{
															"nativeSrc": "4010:15:16",
															"nodeType": "YulAssignment",
															"src": "4010:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4020:5:16",
																"nodeType": "YulIdentifier",
																"src": "4020:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4010:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "3755:276:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3790:9:16",
														"nodeType": "YulTypedName",
														"src": "3790:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3801:7:16",
														"nodeType": "YulTypedName",
														"src": "3801:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3813:6:16",
														"nodeType": "YulTypedName",
														"src": "3813:6:16",
														"type": ""
													}
												],
												"src": "3755:276:16"
											},
											{
												"body": {
													"nativeSrc": "4091:325:16",
													"nodeType": "YulBlock",
													"src": "4091:325:16",
													"statements": [
														{
															"nativeSrc": "4101:22:16",
															"nodeType": "YulAssignment",
															"src": "4101:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4115:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4115:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4118:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4111:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:16"
																},
																"nativeSrc": "4111:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4111:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4101:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:16"
																}
															]
														},
														{
															"nativeSrc": "4132:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4132:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4162:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4162:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4168:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4158:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4158:3:16"
																},
																"nativeSrc": "4158:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4158:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4136:18:16",
																	"nodeType": "YulTypedName",
																	"src": "4136:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4209:31:16",
																"nodeType": "YulBlock",
																"src": "4209:31:16",
																"statements": [
																	{
																		"nativeSrc": "4211:27:16",
																		"nodeType": "YulAssignment",
																		"src": "4211:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4225:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4225:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4233:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4233:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4221:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4221:3:16"
																			},
																			"nativeSrc": "4221:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4221:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4211:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4211:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4189:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4189:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4182:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:16"
																},
																"nativeSrc": "4182:26:16",
																"nodeType": "YulFunctionCall",
																"src": "4182:26:16"
															},
															"nativeSrc": "4179:61:16",
															"nodeType": "YulIf",
															"src": "4179:61:16"
														},
														{
															"body": {
																"nativeSrc": "4299:111:16",
																"nodeType": "YulBlock",
																"src": "4299:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4320:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4320:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4327:3:16",
																							"nodeType": "YulLiteral",
																							"src": "4327:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4332:10:16",
																							"nodeType": "YulLiteral",
																							"src": "4332:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4323:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4323:3:16"
																					},
																					"nativeSrc": "4323:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4323:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4313:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4313:6:16"
																			},
																			"nativeSrc": "4313:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4313:31:16"
																		},
																		"nativeSrc": "4313:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4313:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4364:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4367:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4367:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4357:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:16"
																			},
																			"nativeSrc": "4357:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4357:15:16"
																		},
																		"nativeSrc": "4357:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4392:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4392:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4395:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4395:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4385:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4385:6:16"
																			},
																			"nativeSrc": "4385:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4385:15:16"
																		},
																		"nativeSrc": "4385:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4385:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4255:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4255:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4278:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4278:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4286:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4286:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4275:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4275:2:16"
																		},
																		"nativeSrc": "4275:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4275:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4252:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4252:2:16"
																},
																"nativeSrc": "4252:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4252:38:16"
															},
															"nativeSrc": "4249:161:16",
															"nodeType": "YulIf",
															"src": "4249:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4036:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4071:4:16",
														"nodeType": "YulTypedName",
														"src": "4071:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4080:6:16",
														"nodeType": "YulTypedName",
														"src": "4080:6:16",
														"type": ""
													}
												],
												"src": "4036:380:16"
											},
											{
												"body": {
													"nativeSrc": "4595:237:16",
													"nodeType": "YulBlock",
													"src": "4595:237:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4612:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4612:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4605:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:16"
																},
																"nativeSrc": "4605:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4605:21:16"
															},
															"nativeSrc": "4605:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "4605:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4646:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4657:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4657:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:16"
																		},
																		"nativeSrc": "4642:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4642:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4662:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4662:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4635:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4635:6:16"
																},
																"nativeSrc": "4635:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4635:30:16"
															},
															"nativeSrc": "4635:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "4635:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4696:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4696:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4681:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:16"
																		},
																		"nativeSrc": "4681:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:18:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "4701:34:16",
																		"nodeType": "YulLiteral",
																		"src": "4701:34:16",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4674:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:16"
																},
																"nativeSrc": "4674:62:16",
																"nodeType": "YulFunctionCall",
																"src": "4674:62:16"
															},
															"nativeSrc": "4674:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "4674:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:16"
																		},
																		"nativeSrc": "4752:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:18:16"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "4772:17:16",
																		"nodeType": "YulLiteral",
																		"src": "4772:17:16",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4745:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:16"
																},
																"nativeSrc": "4745:45:16",
																"nodeType": "YulFunctionCall",
																"src": "4745:45:16"
															},
															"nativeSrc": "4745:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "4745:45:16"
														},
														{
															"nativeSrc": "4799:27:16",
															"nodeType": "YulAssignment",
															"src": "4799:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4811:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4811:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4822:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4822:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4807:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:16"
																},
																"nativeSrc": "4807:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4807:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4799:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4799:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4421:411:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4572:9:16",
														"nodeType": "YulTypedName",
														"src": "4572:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4586:4:16",
														"nodeType": "YulTypedName",
														"src": "4586:4:16",
														"type": ""
													}
												],
												"src": "4421:411:16"
											},
											{
												"body": {
													"nativeSrc": "4869:95:16",
													"nodeType": "YulBlock",
													"src": "4869:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4886:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4886:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4893:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4893:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4898:10:16",
																				"nodeType": "YulLiteral",
																				"src": "4898:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4889:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:16"
																		},
																		"nativeSrc": "4889:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4889:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4879:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:16"
																},
																"nativeSrc": "4879:31:16",
																"nodeType": "YulFunctionCall",
																"src": "4879:31:16"
															},
															"nativeSrc": "4879:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "4879:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4926:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4926:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4929:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4929:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4919:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4919:6:16"
																},
																"nativeSrc": "4919:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4919:15:16"
															},
															"nativeSrc": "4919:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4919:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4950:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4950:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4953:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4953:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4943:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:16"
																},
																"nativeSrc": "4943:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4943:15:16"
															},
															"nativeSrc": "4943:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4943:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4837:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4837:127:16"
											},
											{
												"body": {
													"nativeSrc": "5017:77:16",
													"nodeType": "YulBlock",
													"src": "5017:77:16",
													"statements": [
														{
															"nativeSrc": "5027:16:16",
															"nodeType": "YulAssignment",
															"src": "5027:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5038:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5038:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5041:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5041:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5034:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:16"
																},
																"nativeSrc": "5034:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5034:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5027:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5066:22:16",
																"nodeType": "YulBlock",
																"src": "5066:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5068:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5068:16:16"
																			},
																			"nativeSrc": "5068:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5068:18:16"
																		},
																		"nativeSrc": "5068:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5068:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5058:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5058:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5061:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5061:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5055:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5055:2:16"
																},
																"nativeSrc": "5055:10:16",
																"nodeType": "YulFunctionCall",
																"src": "5055:10:16"
															},
															"nativeSrc": "5052:36:16",
															"nodeType": "YulIf",
															"src": "5052:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4969:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5000:1:16",
														"nodeType": "YulTypedName",
														"src": "5000:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5003:1:16",
														"nodeType": "YulTypedName",
														"src": "5003:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5009:3:16",
														"nodeType": "YulTypedName",
														"src": "5009:3:16",
														"type": ""
													}
												],
												"src": "4969:125:16"
											},
											{
												"body": {
													"nativeSrc": "5273:236:16",
													"nodeType": "YulBlock",
													"src": "5273:236:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5290:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5290:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5301:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5301:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5283:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5283:6:16"
																},
																"nativeSrc": "5283:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5283:21:16"
															},
															"nativeSrc": "5283:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5283:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5324:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5324:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5335:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5335:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5320:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5320:3:16"
																		},
																		"nativeSrc": "5320:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5320:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:16",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5313:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:16"
																},
																"nativeSrc": "5313:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5313:30:16"
															},
															"nativeSrc": "5313:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5313:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5363:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5363:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5374:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5374:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5359:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:16"
																		},
																		"nativeSrc": "5359:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5359:18:16"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "5379:34:16",
																		"nodeType": "YulLiteral",
																		"src": "5379:34:16",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5352:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:16"
																},
																"nativeSrc": "5352:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5352:62:16"
															},
															"nativeSrc": "5352:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "5352:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5434:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5434:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5445:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5445:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5430:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5430:3:16"
																		},
																		"nativeSrc": "5430:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5430:18:16"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5450:16:16",
																		"nodeType": "YulLiteral",
																		"src": "5450:16:16",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5423:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5423:6:16"
																},
																"nativeSrc": "5423:44:16",
																"nodeType": "YulFunctionCall",
																"src": "5423:44:16"
															},
															"nativeSrc": "5423:44:16",
															"nodeType": "YulExpressionStatement",
															"src": "5423:44:16"
														},
														{
															"nativeSrc": "5476:27:16",
															"nodeType": "YulAssignment",
															"src": "5476:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5488:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5488:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5499:3:16",
																		"nodeType": "YulLiteral",
																		"src": "5499:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5484:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5484:3:16"
																},
																"nativeSrc": "5484:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5484:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5476:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5476:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5099:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5250:9:16",
														"nodeType": "YulTypedName",
														"src": "5250:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5264:4:16",
														"nodeType": "YulTypedName",
														"src": "5264:4:16",
														"type": ""
													}
												],
												"src": "5099:410:16"
											},
											{
												"body": {
													"nativeSrc": "5583:306:16",
													"nodeType": "YulBlock",
													"src": "5583:306:16",
													"statements": [
														{
															"nativeSrc": "5593:10:16",
															"nodeType": "YulAssignment",
															"src": "5593:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5602:1:16",
																"nodeType": "YulLiteral",
																"src": "5602:1:16",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5593:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5593:5:16"
																}
															]
														},
														{
															"nativeSrc": "5612:13:16",
															"nodeType": "YulAssignment",
															"src": "5612:13:16",
															"value": {
																"name": "_base",
																"nativeSrc": "5620:5:16",
																"nodeType": "YulIdentifier",
																"src": "5620:5:16"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5612:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5612:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5670:213:16",
																"nodeType": "YulBlock",
																"src": "5670:213:16",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5712:22:16",
																			"nodeType": "YulBlock",
																			"src": "5712:22:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5714:16:16",
																							"nodeType": "YulIdentifier",
																							"src": "5714:16:16"
																						},
																						"nativeSrc": "5714:18:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5714:18:16"
																					},
																					"nativeSrc": "5714:18:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "5714:18:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5690:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "5690:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5700:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5700:3:16"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5705:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5705:4:16"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5696:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5696:3:16"
																					},
																					"nativeSrc": "5696:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5696:14:16"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5687:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5687:2:16"
																			},
																			"nativeSrc": "5687:24:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5687:24:16"
																		},
																		"nativeSrc": "5684:50:16",
																		"nodeType": "YulIf",
																		"src": "5684:50:16"
																	},
																	{
																		"body": {
																			"nativeSrc": "5767:29:16",
																			"nodeType": "YulBlock",
																			"src": "5767:29:16",
																			"statements": [
																				{
																					"nativeSrc": "5769:25:16",
																					"nodeType": "YulAssignment",
																					"src": "5769:25:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "5782:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "5782:5:16"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "5789:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "5789:4:16"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "5778:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5778:3:16"
																						},
																						"nativeSrc": "5778:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5778:16:16"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5769:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "5769:5:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5754:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "5754:8:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5764:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5764:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5750:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5750:3:16"
																			},
																			"nativeSrc": "5750:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5750:16:16"
																		},
																		"nativeSrc": "5747:49:16",
																		"nodeType": "YulIf",
																		"src": "5747:49:16"
																	},
																	{
																		"nativeSrc": "5809:23:16",
																		"nodeType": "YulAssignment",
																		"src": "5809:23:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5821:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "5821:4:16"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "5827:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "5827:4:16"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "5817:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5817:3:16"
																			},
																			"nativeSrc": "5817:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5817:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "5809:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5809:4:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5845:28:16",
																		"nodeType": "YulAssignment",
																		"src": "5845:28:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5861:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:16",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5864:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "5864:8:16"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "5857:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5857:3:16"
																			},
																			"nativeSrc": "5857:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5857:16:16"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5845:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "5845:8:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5645:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "5645:8:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5655:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5655:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5642:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5642:2:16"
																},
																"nativeSrc": "5642:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5642:15:16"
															},
															"nativeSrc": "5634:249:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5658:3:16",
																"nodeType": "YulBlock",
																"src": "5658:3:16",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5638:3:16",
																"nodeType": "YulBlock",
																"src": "5638:3:16",
																"statements": []
															},
															"src": "5634:249:16"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5514:375:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "5542:5:16",
														"nodeType": "YulTypedName",
														"src": "5542:5:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5549:8:16",
														"nodeType": "YulTypedName",
														"src": "5549:8:16",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5559:3:16",
														"nodeType": "YulTypedName",
														"src": "5559:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5567:5:16",
														"nodeType": "YulTypedName",
														"src": "5567:5:16",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5574:4:16",
														"nodeType": "YulTypedName",
														"src": "5574:4:16",
														"type": ""
													}
												],
												"src": "5514:375:16"
											},
											{
												"body": {
													"nativeSrc": "5953:843:16",
													"nodeType": "YulBlock",
													"src": "5953:843:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5991:52:16",
																"nodeType": "YulBlock",
																"src": "5991:52:16",
																"statements": [
																	{
																		"nativeSrc": "6005:10:16",
																		"nodeType": "YulAssignment",
																		"src": "6005:10:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6014:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6014:1:16",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6005:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6005:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6028:5:16",
																		"nodeType": "YulLeave",
																		"src": "6028:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5973:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "5973:8:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5966:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:16"
																},
																"nativeSrc": "5966:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5966:16:16"
															},
															"nativeSrc": "5963:80:16",
															"nodeType": "YulIf",
															"src": "5963:80:16"
														},
														{
															"body": {
																"nativeSrc": "6076:52:16",
																"nodeType": "YulBlock",
																"src": "6076:52:16",
																"statements": [
																	{
																		"nativeSrc": "6090:10:16",
																		"nodeType": "YulAssignment",
																		"src": "6090:10:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6099:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6099:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6090:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6090:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6113:5:16",
																		"nodeType": "YulLeave",
																		"src": "6113:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6062:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6062:4:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6055:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:16"
																},
																"nativeSrc": "6055:12:16",
																"nodeType": "YulFunctionCall",
																"src": "6055:12:16"
															},
															"nativeSrc": "6052:76:16",
															"nodeType": "YulIf",
															"src": "6052:76:16"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6164:52:16",
																		"nodeType": "YulBlock",
																		"src": "6164:52:16",
																		"statements": [
																			{
																				"nativeSrc": "6178:10:16",
																				"nodeType": "YulAssignment",
																				"src": "6178:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6187:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6187:1:16",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6178:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6178:5:16"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6201:5:16",
																				"nodeType": "YulLeave",
																				"src": "6201:5:16"
																			}
																		]
																	},
																	"nativeSrc": "6157:59:16",
																	"nodeType": "YulCase",
																	"src": "6157:59:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6162:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6232:167:16",
																		"nodeType": "YulBlock",
																		"src": "6232:167:16",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6267:22:16",
																					"nodeType": "YulBlock",
																					"src": "6267:22:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6269:16:16",
																									"nodeType": "YulIdentifier",
																									"src": "6269:16:16"
																								},
																								"nativeSrc": "6269:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "6269:18:16"
																							},
																							"nativeSrc": "6269:18:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "6269:18:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6252:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6252:8:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6262:3:16",
																							"nodeType": "YulLiteral",
																							"src": "6262:3:16",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6249:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "6249:2:16"
																					},
																					"nativeSrc": "6249:17:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:17:16"
																				},
																				"nativeSrc": "6246:43:16",
																				"nodeType": "YulIf",
																				"src": "6246:43:16"
																			},
																			{
																				"nativeSrc": "6302:25:16",
																				"nodeType": "YulAssignment",
																				"src": "6302:25:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6315:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6315:8:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6325:1:16",
																							"nodeType": "YulLiteral",
																							"src": "6325:1:16",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6311:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6311:3:16"
																					},
																					"nativeSrc": "6311:16:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6311:16:16"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6302:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6302:5:16"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6340:11:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6340:11:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6350:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "6344:2:16",
																						"nodeType": "YulTypedName",
																						"src": "6344:2:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6364:7:16",
																				"nodeType": "YulAssignment",
																				"src": "6364:7:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6370:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6370:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "6364:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "6364:2:16"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6384:5:16",
																				"nodeType": "YulLeave",
																				"src": "6384:5:16"
																			}
																		]
																	},
																	"nativeSrc": "6225:174:16",
																	"nodeType": "YulCase",
																	"src": "6225:174:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6230:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6230:1:16",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6144:4:16",
																"nodeType": "YulIdentifier",
																"src": "6144:4:16"
															},
															"nativeSrc": "6137:262:16",
															"nodeType": "YulSwitch",
															"src": "6137:262:16"
														},
														{
															"body": {
																"nativeSrc": "6497:114:16",
																"nodeType": "YulBlock",
																"src": "6497:114:16",
																"statements": [
																	{
																		"nativeSrc": "6511:28:16",
																		"nodeType": "YulAssignment",
																		"src": "6511:28:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6524:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "6524:4:16"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6530:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "6530:8:16"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "6520:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6520:3:16"
																			},
																			"nativeSrc": "6520:19:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6520:19:16"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6511:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6511:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6552:11:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6552:11:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6562:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6562:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "6556:2:16",
																				"nodeType": "YulTypedName",
																				"src": "6556:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6576:7:16",
																		"nodeType": "YulAssignment",
																		"src": "6576:7:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6582:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6582:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "6576:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "6576:2:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6596:5:16",
																		"nodeType": "YulLeave",
																		"src": "6596:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6421:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6421:4:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6427:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6427:2:16",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6418:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6418:2:16"
																				},
																				"nativeSrc": "6418:12:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6418:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6435:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6435:8:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6445:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6445:2:16",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6432:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:16"
																				},
																				"nativeSrc": "6432:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6432:16:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6414:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:16"
																		},
																		"nativeSrc": "6414:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6414:35:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6458:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6458:4:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6464:3:16",
																						"nodeType": "YulLiteral",
																						"src": "6464:3:16",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6455:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6455:2:16"
																				},
																				"nativeSrc": "6455:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6455:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6473:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6473:8:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6483:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6483:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6470:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:16"
																				},
																				"nativeSrc": "6470:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6470:16:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6451:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:16"
																		},
																		"nativeSrc": "6451:36:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6451:36:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6411:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6411:2:16"
																},
																"nativeSrc": "6411:77:16",
																"nodeType": "YulFunctionCall",
																"src": "6411:77:16"
															},
															"nativeSrc": "6408:203:16",
															"nodeType": "YulIf",
															"src": "6408:203:16"
														},
														{
															"nativeSrc": "6620:65:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6620:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6662:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6662:4:16"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6668:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "6668:8:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6682:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6682:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6678:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:16"
																		},
																		"nativeSrc": "6678:6:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:6:16"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "6643:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6643:18:16"
																},
																"nativeSrc": "6643:42:16",
																"nodeType": "YulFunctionCall",
																"src": "6643:42:16"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "6624:7:16",
																	"nodeType": "YulTypedName",
																	"src": "6624:7:16",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "6633:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6633:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6730:22:16",
																"nodeType": "YulBlock",
																"src": "6730:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6732:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "6732:16:16"
																			},
																			"nativeSrc": "6732:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6732:18:16"
																		},
																		"nativeSrc": "6732:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6732:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6700:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "6700:7:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6717:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6717:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6713:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6713:3:16"
																				},
																				"nativeSrc": "6713:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6713:6:16"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "6721:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6721:6:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6709:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:16"
																		},
																		"nativeSrc": "6709:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6709:19:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6697:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6697:2:16"
																},
																"nativeSrc": "6697:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6697:32:16"
															},
															"nativeSrc": "6694:58:16",
															"nodeType": "YulIf",
															"src": "6694:58:16"
														},
														{
															"nativeSrc": "6761:29:16",
															"nodeType": "YulAssignment",
															"src": "6761:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6774:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "6774:7:16"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "6783:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6783:6:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6770:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:16"
																},
																"nativeSrc": "6770:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6770:20:16"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6761:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6761:5:16"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "5894:902:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5924:4:16",
														"nodeType": "YulTypedName",
														"src": "5924:4:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5930:8:16",
														"nodeType": "YulTypedName",
														"src": "5930:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5943:5:16",
														"nodeType": "YulTypedName",
														"src": "5943:5:16",
														"type": ""
													}
												],
												"src": "5894:902:16"
											},
											{
												"body": {
													"nativeSrc": "6869:72:16",
													"nodeType": "YulBlock",
													"src": "6869:72:16",
													"statements": [
														{
															"nativeSrc": "6879:56:16",
															"nodeType": "YulAssignment",
															"src": "6879:56:16",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6909:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6909:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6919:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "6919:8:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6929:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6929:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6915:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:16"
																		},
																		"nativeSrc": "6915:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6915:19:16"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "6888:20:16",
																	"nodeType": "YulIdentifier",
																	"src": "6888:20:16"
																},
																"nativeSrc": "6888:47:16",
																"nodeType": "YulFunctionCall",
																"src": "6888:47:16"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6879:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6879:5:16"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6801:140:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6840:4:16",
														"nodeType": "YulTypedName",
														"src": "6840:4:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6846:8:16",
														"nodeType": "YulTypedName",
														"src": "6846:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6859:5:16",
														"nodeType": "YulTypedName",
														"src": "6859:5:16",
														"type": ""
													}
												],
												"src": "6801:140:16"
											},
											{
												"body": {
													"nativeSrc": "6998:116:16",
													"nodeType": "YulBlock",
													"src": "6998:116:16",
													"statements": [
														{
															"nativeSrc": "7008:20:16",
															"nodeType": "YulAssignment",
															"src": "7008:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7023:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7026:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7026:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7019:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:16"
																},
																"nativeSrc": "7019:9:16",
																"nodeType": "YulFunctionCall",
																"src": "7019:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7008:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "7008:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7086:22:16",
																"nodeType": "YulBlock",
																"src": "7086:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7088:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:16"
																			},
																			"nativeSrc": "7088:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:16"
																		},
																		"nativeSrc": "7088:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7057:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "7057:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7050:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "7050:6:16"
																				},
																				"nativeSrc": "7050:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7050:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7064:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "7064:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7071:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "7071:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7080:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7080:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7067:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7067:3:16"
																						},
																						"nativeSrc": "7067:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7067:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7061:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7061:2:16"
																				},
																				"nativeSrc": "7061:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7061:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7047:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7047:2:16"
																		},
																		"nativeSrc": "7047:37:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:37:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7040:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:16"
																},
																"nativeSrc": "7040:45:16",
																"nodeType": "YulFunctionCall",
																"src": "7040:45:16"
															},
															"nativeSrc": "7037:71:16",
															"nodeType": "YulIf",
															"src": "7037:71:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6946:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6977:1:16",
														"nodeType": "YulTypedName",
														"src": "6977:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6980:1:16",
														"nodeType": "YulTypedName",
														"src": "6980:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6986:7:16",
														"nodeType": "YulTypedName",
														"src": "6986:7:16",
														"type": ""
													}
												],
												"src": "6946:168:16"
											},
											{
												"body": {
													"nativeSrc": "7226:87:16",
													"nodeType": "YulBlock",
													"src": "7226:87:16",
													"statements": [
														{
															"nativeSrc": "7236:26:16",
															"nodeType": "YulAssignment",
															"src": "7236:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7248:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7248:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7259:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7259:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7244:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7244:3:16"
																},
																"nativeSrc": "7244:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7244:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7236:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7236:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7278:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7278:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7293:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7301:4:16",
																				"nodeType": "YulLiteral",
																				"src": "7301:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7289:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7289:3:16"
																		},
																		"nativeSrc": "7289:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7271:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:16"
																},
																"nativeSrc": "7271:36:16",
																"nodeType": "YulFunctionCall",
																"src": "7271:36:16"
															},
															"nativeSrc": "7271:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "7271:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7119:194:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7195:9:16",
														"nodeType": "YulTypedName",
														"src": "7195:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7206:6:16",
														"nodeType": "YulTypedName",
														"src": "7206:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7217:4:16",
														"nodeType": "YulTypedName",
														"src": "7217:4:16",
														"type": ""
													}
												],
												"src": "7119:194:16"
											},
											{
												"body": {
													"nativeSrc": "7492:227:16",
													"nodeType": "YulBlock",
													"src": "7492:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7509:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7520:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7502:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:16"
																},
																"nativeSrc": "7502:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7502:21:16"
															},
															"nativeSrc": "7502:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7502:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7543:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7543:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7554:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7554:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7539:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7539:3:16"
																		},
																		"nativeSrc": "7539:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7539:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7559:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7559:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7532:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:16"
																},
																"nativeSrc": "7532:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7532:30:16"
															},
															"nativeSrc": "7532:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7532:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7582:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7582:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7593:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7593:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7578:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:16"
																		},
																		"nativeSrc": "7578:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7578:18:16"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "7598:34:16",
																		"nodeType": "YulLiteral",
																		"src": "7598:34:16",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7571:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7571:6:16"
																},
																"nativeSrc": "7571:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7571:62:16"
															},
															"nativeSrc": "7571:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "7571:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7653:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7653:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7664:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7664:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7649:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:16"
																		},
																		"nativeSrc": "7649:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7649:18:16"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "7669:7:16",
																		"nodeType": "YulLiteral",
																		"src": "7669:7:16",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7642:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:16"
																},
																"nativeSrc": "7642:35:16",
																"nodeType": "YulFunctionCall",
																"src": "7642:35:16"
															},
															"nativeSrc": "7642:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "7642:35:16"
														},
														{
															"nativeSrc": "7686:27:16",
															"nodeType": "YulAssignment",
															"src": "7686:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7698:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7698:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7709:3:16",
																		"nodeType": "YulLiteral",
																		"src": "7709:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7694:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7694:3:16"
																},
																"nativeSrc": "7694:19:16",
																"nodeType": "YulFunctionCall",
																"src": "7694:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7686:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7686:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7318:401:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7469:9:16",
														"nodeType": "YulTypedName",
														"src": "7469:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7483:4:16",
														"nodeType": "YulTypedName",
														"src": "7483:4:16",
														"type": ""
													}
												],
												"src": "7318:401:16"
											},
											{
												"body": {
													"nativeSrc": "7898:226:16",
													"nodeType": "YulBlock",
													"src": "7898:226:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7915:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7915:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7926:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7926:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7908:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7908:6:16"
																},
																"nativeSrc": "7908:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7908:21:16"
															},
															"nativeSrc": "7908:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7908:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7949:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7949:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7960:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7960:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7945:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:16"
																		},
																		"nativeSrc": "7945:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7945:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7965:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7965:2:16",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7938:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:16"
																},
																"nativeSrc": "7938:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7938:30:16"
															},
															"nativeSrc": "7938:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7938:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7988:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7999:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7999:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7984:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:16"
																		},
																		"nativeSrc": "7984:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8004:34:16",
																		"nodeType": "YulLiteral",
																		"src": "8004:34:16",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7977:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:16"
																},
																"nativeSrc": "7977:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7977:62:16"
															},
															"nativeSrc": "7977:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "7977:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:16"
																		},
																		"nativeSrc": "8055:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:16"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8075:6:16",
																		"nodeType": "YulLiteral",
																		"src": "8075:6:16",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:16"
																},
																"nativeSrc": "8048:34:16",
																"nodeType": "YulFunctionCall",
																"src": "8048:34:16"
															},
															"nativeSrc": "8048:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "8048:34:16"
														},
														{
															"nativeSrc": "8091:27:16",
															"nodeType": "YulAssignment",
															"src": "8091:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8103:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8103:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:3:16",
																		"nodeType": "YulLiteral",
																		"src": "8114:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8099:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8099:3:16"
																},
																"nativeSrc": "8099:19:16",
																"nodeType": "YulFunctionCall",
																"src": "8099:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8091:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8091:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7724:400:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7875:9:16",
														"nodeType": "YulTypedName",
														"src": "7875:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7889:4:16",
														"nodeType": "YulTypedName",
														"src": "7889:4:16",
														"type": ""
													}
												],
												"src": "7724:400:16"
											},
											{
												"body": {
													"nativeSrc": "8303:224:16",
													"nodeType": "YulBlock",
													"src": "8303:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8320:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8331:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8313:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:16"
																},
																"nativeSrc": "8313:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8313:21:16"
															},
															"nativeSrc": "8313:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8313:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8354:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8354:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8365:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8365:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8350:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8350:3:16"
																		},
																		"nativeSrc": "8350:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8350:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8370:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8370:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8343:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:16"
																},
																"nativeSrc": "8343:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8343:30:16"
															},
															"nativeSrc": "8343:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8343:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8404:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8389:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:16"
																		},
																		"nativeSrc": "8389:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "8409:34:16",
																		"nodeType": "YulLiteral",
																		"src": "8409:34:16",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8382:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:16"
																},
																"nativeSrc": "8382:62:16",
																"nodeType": "YulFunctionCall",
																"src": "8382:62:16"
															},
															"nativeSrc": "8382:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "8382:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8464:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8475:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8475:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8460:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:16"
																		},
																		"nativeSrc": "8460:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8460:18:16"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "8480:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8480:4:16",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8453:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:16"
																},
																"nativeSrc": "8453:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8453:32:16"
															},
															"nativeSrc": "8453:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "8453:32:16"
														},
														{
															"nativeSrc": "8494:27:16",
															"nodeType": "YulAssignment",
															"src": "8494:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8506:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8506:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8517:3:16",
																		"nodeType": "YulLiteral",
																		"src": "8517:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8502:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:16"
																},
																"nativeSrc": "8502:19:16",
																"nodeType": "YulFunctionCall",
																"src": "8502:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8494:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8494:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8129:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8280:9:16",
														"nodeType": "YulTypedName",
														"src": "8280:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8294:4:16",
														"nodeType": "YulTypedName",
														"src": "8294:4:16",
														"type": ""
													}
												],
												"src": "8129:398:16"
											},
											{
												"body": {
													"nativeSrc": "8706:223:16",
													"nodeType": "YulBlock",
													"src": "8706:223:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8723:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8723:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8734:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8734:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8716:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8716:6:16"
																},
																"nativeSrc": "8716:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8716:21:16"
															},
															"nativeSrc": "8716:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8716:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8757:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8768:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8753:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:16"
																		},
																		"nativeSrc": "8753:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8773:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8773:2:16",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8746:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:16"
																},
																"nativeSrc": "8746:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8746:30:16"
															},
															"nativeSrc": "8746:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8746:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8796:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8796:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8807:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8807:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8792:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8792:3:16"
																		},
																		"nativeSrc": "8792:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8792:18:16"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "8812:34:16",
																		"nodeType": "YulLiteral",
																		"src": "8812:34:16",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8785:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8785:6:16"
																},
																"nativeSrc": "8785:62:16",
																"nodeType": "YulFunctionCall",
																"src": "8785:62:16"
															},
															"nativeSrc": "8785:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "8785:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8867:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8867:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8878:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8878:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8863:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8863:3:16"
																		},
																		"nativeSrc": "8863:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8863:18:16"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "8883:3:16",
																		"nodeType": "YulLiteral",
																		"src": "8883:3:16",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8856:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8856:6:16"
																},
																"nativeSrc": "8856:31:16",
																"nodeType": "YulFunctionCall",
																"src": "8856:31:16"
															},
															"nativeSrc": "8856:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "8856:31:16"
														},
														{
															"nativeSrc": "8896:27:16",
															"nodeType": "YulAssignment",
															"src": "8896:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8908:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8908:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8919:3:16",
																		"nodeType": "YulLiteral",
																		"src": "8919:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8904:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:16"
																},
																"nativeSrc": "8904:19:16",
																"nodeType": "YulFunctionCall",
																"src": "8904:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8896:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8896:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8532:397:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8683:9:16",
														"nodeType": "YulTypedName",
														"src": "8683:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8697:4:16",
														"nodeType": "YulTypedName",
														"src": "8697:4:16",
														"type": ""
													}
												],
												"src": "8532:397:16"
											},
											{
												"body": {
													"nativeSrc": "9108:224:16",
													"nodeType": "YulBlock",
													"src": "9108:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9125:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9125:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9136:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9136:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9118:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9118:6:16"
																},
																"nativeSrc": "9118:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9118:21:16"
															},
															"nativeSrc": "9118:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9118:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9159:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9159:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9170:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9170:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9155:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9155:3:16"
																		},
																		"nativeSrc": "9155:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9155:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9175:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9175:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9148:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9148:6:16"
																},
																"nativeSrc": "9148:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9148:30:16"
															},
															"nativeSrc": "9148:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9148:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9209:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9209:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9194:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9194:3:16"
																		},
																		"nativeSrc": "9194:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9194:18:16"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "9214:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9214:34:16",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:16"
																},
																"nativeSrc": "9187:62:16",
																"nodeType": "YulFunctionCall",
																"src": "9187:62:16"
															},
															"nativeSrc": "9187:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "9187:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9269:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9280:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9280:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9265:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:16"
																		},
																		"nativeSrc": "9265:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9265:18:16"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "9285:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9285:4:16",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9258:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:16"
																},
																"nativeSrc": "9258:32:16",
																"nodeType": "YulFunctionCall",
																"src": "9258:32:16"
															},
															"nativeSrc": "9258:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "9258:32:16"
														},
														{
															"nativeSrc": "9299:27:16",
															"nodeType": "YulAssignment",
															"src": "9299:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9311:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9311:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9322:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9307:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:16"
																},
																"nativeSrc": "9307:19:16",
																"nodeType": "YulFunctionCall",
																"src": "9307:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9299:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8934:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9085:9:16",
														"nodeType": "YulTypedName",
														"src": "9085:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9099:4:16",
														"nodeType": "YulTypedName",
														"src": "9099:4:16",
														"type": ""
													}
												],
												"src": "8934:398:16"
											},
											{
												"body": {
													"nativeSrc": "9511:179:16",
													"nodeType": "YulBlock",
													"src": "9511:179:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9528:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9528:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9539:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9539:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9521:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9521:6:16"
																},
																"nativeSrc": "9521:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9521:21:16"
															},
															"nativeSrc": "9521:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9521:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9562:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9562:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9573:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9573:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9558:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9558:3:16"
																		},
																		"nativeSrc": "9558:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9558:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9578:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9578:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9551:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9551:6:16"
																},
																"nativeSrc": "9551:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9551:30:16"
															},
															"nativeSrc": "9551:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9551:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9601:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9601:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9612:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9612:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9597:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9597:3:16"
																		},
																		"nativeSrc": "9597:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9597:18:16"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9617:31:16",
																		"nodeType": "YulLiteral",
																		"src": "9617:31:16",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9590:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9590:6:16"
																},
																"nativeSrc": "9590:59:16",
																"nodeType": "YulFunctionCall",
																"src": "9590:59:16"
															},
															"nativeSrc": "9590:59:16",
															"nodeType": "YulExpressionStatement",
															"src": "9590:59:16"
														},
														{
															"nativeSrc": "9658:26:16",
															"nodeType": "YulAssignment",
															"src": "9658:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9670:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9670:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9681:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9681:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9666:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9666:3:16"
																},
																"nativeSrc": "9666:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9666:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9658:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9658:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9337:353:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:16",
														"nodeType": "YulTypedName",
														"src": "9488:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9502:4:16",
														"nodeType": "YulTypedName",
														"src": "9502:4:16",
														"type": ""
													}
												],
												"src": "9337:353:16"
											},
											{
												"body": {
													"nativeSrc": "9869:233:16",
													"nodeType": "YulBlock",
													"src": "9869:233:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9886:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9886:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9897:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9897:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9879:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9879:6:16"
																},
																"nativeSrc": "9879:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9879:21:16"
															},
															"nativeSrc": "9879:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9879:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9920:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9920:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9931:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9931:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9916:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9916:3:16"
																		},
																		"nativeSrc": "9916:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9936:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:16",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9909:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:16"
																},
																"nativeSrc": "9909:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9909:30:16"
															},
															"nativeSrc": "9909:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9909:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9959:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9959:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9970:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9970:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9955:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:16"
																		},
																		"nativeSrc": "9955:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9955:18:16"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "9975:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9975:34:16",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9948:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:16"
																},
																"nativeSrc": "9948:62:16",
																"nodeType": "YulFunctionCall",
																"src": "9948:62:16"
															},
															"nativeSrc": "9948:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "9948:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10030:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10030:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10041:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10041:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10026:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10026:3:16"
																		},
																		"nativeSrc": "10026:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10026:18:16"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "10046:13:16",
																		"nodeType": "YulLiteral",
																		"src": "10046:13:16",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10019:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10019:6:16"
																},
																"nativeSrc": "10019:41:16",
																"nodeType": "YulFunctionCall",
																"src": "10019:41:16"
															},
															"nativeSrc": "10019:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "10019:41:16"
														},
														{
															"nativeSrc": "10069:27:16",
															"nodeType": "YulAssignment",
															"src": "10069:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10081:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10081:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:3:16",
																		"nodeType": "YulLiteral",
																		"src": "10092:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10077:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10077:3:16"
																},
																"nativeSrc": "10077:19:16",
																"nodeType": "YulFunctionCall",
																"src": "10077:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10069:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10069:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9695:407:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9846:9:16",
														"nodeType": "YulTypedName",
														"src": "9846:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9860:4:16",
														"nodeType": "YulTypedName",
														"src": "9860:4:16",
														"type": ""
													}
												],
												"src": "9695:407:16"
											},
											{
												"body": {
													"nativeSrc": "10281:181:16",
													"nodeType": "YulBlock",
													"src": "10281:181:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10298:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10298:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10309:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10309:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10291:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10291:6:16"
																},
																"nativeSrc": "10291:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10291:21:16"
															},
															"nativeSrc": "10291:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10291:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10332:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10343:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10343:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10328:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:16"
																		},
																		"nativeSrc": "10328:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10328:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10348:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10321:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10321:6:16"
																},
																"nativeSrc": "10321:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10321:30:16"
															},
															"nativeSrc": "10321:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "10321:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10371:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10371:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10382:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10382:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10367:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:16"
																		},
																		"nativeSrc": "10367:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10367:18:16"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "10387:33:16",
																		"nodeType": "YulLiteral",
																		"src": "10387:33:16",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10360:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:16"
																},
																"nativeSrc": "10360:61:16",
																"nodeType": "YulFunctionCall",
																"src": "10360:61:16"
															},
															"nativeSrc": "10360:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "10360:61:16"
														},
														{
															"nativeSrc": "10430:26:16",
															"nodeType": "YulAssignment",
															"src": "10430:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10442:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10442:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10453:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10453:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10438:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10438:3:16"
																},
																"nativeSrc": "10438:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10438:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10430:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10430:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10107:355:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10258:9:16",
														"nodeType": "YulTypedName",
														"src": "10258:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10272:4:16",
														"nodeType": "YulTypedName",
														"src": "10272:4:16",
														"type": ""
													}
												],
												"src": "10107:355:16"
											},
											{
												"body": {
													"nativeSrc": "10517:162:16",
													"nodeType": "YulBlock",
													"src": "10517:162:16",
													"statements": [
														{
															"nativeSrc": "10527:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10527:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10547:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10547:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10541:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10541:5:16"
																},
																"nativeSrc": "10541:12:16",
																"nodeType": "YulFunctionCall",
																"src": "10541:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10531:6:16",
																	"nodeType": "YulTypedName",
																	"src": "10531:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10568:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10568:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10577:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "10577:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10584:4:16",
																				"nodeType": "YulLiteral",
																				"src": "10584:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10573:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10573:3:16"
																		},
																		"nativeSrc": "10573:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10573:16:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10591:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10591:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10562:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10562:5:16"
																},
																"nativeSrc": "10562:36:16",
																"nodeType": "YulFunctionCall",
																"src": "10562:36:16"
															},
															"nativeSrc": "10562:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "10562:36:16"
														},
														{
															"nativeSrc": "10607:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10607:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10621:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10621:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10626:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10626:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10617:3:16"
																},
																"nativeSrc": "10617:16:16",
																"nodeType": "YulFunctionCall",
																"src": "10617:16:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10611:2:16",
																	"nodeType": "YulTypedName",
																	"src": "10611:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10649:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "10649:2:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10653:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10653:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10642:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:16"
																},
																"nativeSrc": "10642:13:16",
																"nodeType": "YulFunctionCall",
																"src": "10642:13:16"
															},
															"nativeSrc": "10642:13:16",
															"nodeType": "YulExpressionStatement",
															"src": "10642:13:16"
														},
														{
															"nativeSrc": "10664:9:16",
															"nodeType": "YulAssignment",
															"src": "10664:9:16",
															"value": {
																"name": "_1",
																"nativeSrc": "10671:2:16",
																"nodeType": "YulIdentifier",
																"src": "10671:2:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10664:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10664:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "10467:212:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10494:5:16",
														"nodeType": "YulTypedName",
														"src": "10494:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10501:3:16",
														"nodeType": "YulTypedName",
														"src": "10501:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10509:3:16",
														"nodeType": "YulTypedName",
														"src": "10509:3:16",
														"type": ""
													}
												],
												"src": "10467:212:16"
											},
											{
												"body": {
													"nativeSrc": "11073:206:16",
													"nodeType": "YulBlock",
													"src": "11073:206:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11090:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11090:3:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "11095:25:16",
																		"nodeType": "YulLiteral",
																		"src": "11095:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11083:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:16"
																},
																"nativeSrc": "11083:38:16",
																"nodeType": "YulFunctionCall",
																"src": "11083:38:16"
															},
															"nativeSrc": "11083:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "11083:38:16"
														},
														{
															"nativeSrc": "11130:49:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11130:49:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11158:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11158:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11170:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11170:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11175:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11175:2:16",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11166:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11166:3:16"
																		},
																		"nativeSrc": "11166:12:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11166:12:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11140:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11140:17:16"
																},
																"nativeSrc": "11140:39:16",
																"nodeType": "YulFunctionCall",
																"src": "11140:39:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11134:2:16",
																	"nodeType": "YulTypedName",
																	"src": "11134:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11195:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "11195:2:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "11199:19:16",
																		"nodeType": "YulLiteral",
																		"src": "11199:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11188:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11188:6:16"
																},
																"nativeSrc": "11188:31:16",
																"nodeType": "YulFunctionCall",
																"src": "11188:31:16"
															},
															"nativeSrc": "11188:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "11188:31:16"
														},
														{
															"nativeSrc": "11228:45:16",
															"nodeType": "YulAssignment",
															"src": "11228:45:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11253:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11253:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "11265:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11265:2:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11269:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11269:2:16",
																				"type": "",
																				"value": "17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11261:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11261:3:16"
																		},
																		"nativeSrc": "11261:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11261:11:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11235:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11235:17:16"
																},
																"nativeSrc": "11235:38:16",
																"nodeType": "YulFunctionCall",
																"src": "11235:38:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11228:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11228:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10684:595:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11041:3:16",
														"nodeType": "YulTypedName",
														"src": "11041:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11046:6:16",
														"nodeType": "YulTypedName",
														"src": "11046:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11054:6:16",
														"nodeType": "YulTypedName",
														"src": "11054:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11065:3:16",
														"nodeType": "YulTypedName",
														"src": "11065:3:16",
														"type": ""
													}
												],
												"src": "10684:595:16"
											},
											{
												"body": {
													"nativeSrc": "11316:95:16",
													"nodeType": "YulBlock",
													"src": "11316:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11333:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11333:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11340:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11340:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11345:10:16",
																				"nodeType": "YulLiteral",
																				"src": "11345:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11336:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11336:3:16"
																		},
																		"nativeSrc": "11336:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11336:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:16"
																},
																"nativeSrc": "11326:31:16",
																"nodeType": "YulFunctionCall",
																"src": "11326:31:16"
															},
															"nativeSrc": "11326:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "11326:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11373:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11373:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11376:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11376:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11366:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:16"
																},
																"nativeSrc": "11366:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11366:15:16"
															},
															"nativeSrc": "11366:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11366:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11397:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11397:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11400:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11400:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11390:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11390:6:16"
																},
																"nativeSrc": "11390:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11390:15:16"
															},
															"nativeSrc": "11390:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11390:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11284:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "11284:127:16"
											},
											{
												"body": {
													"nativeSrc": "11472:65:16",
													"nodeType": "YulBlock",
													"src": "11472:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11489:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11489:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11492:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11492:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11482:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:16"
																},
																"nativeSrc": "11482:14:16",
																"nodeType": "YulFunctionCall",
																"src": "11482:14:16"
															},
															"nativeSrc": "11482:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "11482:14:16"
														},
														{
															"nativeSrc": "11505:26:16",
															"nodeType": "YulAssignment",
															"src": "11505:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11523:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11523:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11526:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11526:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11513:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "11513:9:16"
																},
																"nativeSrc": "11513:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11513:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11505:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11505:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "11416:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11455:3:16",
														"nodeType": "YulTypedName",
														"src": "11455:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11463:4:16",
														"nodeType": "YulTypedName",
														"src": "11463:4:16",
														"type": ""
													}
												],
												"src": "11416:121:16"
											},
											{
												"body": {
													"nativeSrc": "11623:437:16",
													"nodeType": "YulBlock",
													"src": "11623:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11656:398:16",
																"nodeType": "YulBlock",
																"src": "11656:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11677:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "11680:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "11680:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11670:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11670:6:16"
																			},
																			"nativeSrc": "11670:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11670:16:16"
																		},
																		"nativeSrc": "11670:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11670:16:16"
																	},
																	{
																		"nativeSrc": "11699:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11699:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11721:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11721:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11724:4:16",
																					"nodeType": "YulLiteral",
																					"src": "11724:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "11711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11711:9:16"
																			},
																			"nativeSrc": "11711:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11711:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "11703:4:16",
																				"nodeType": "YulTypedName",
																				"src": "11703:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11742:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11742:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11765:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "11765:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11775:1:16",
																							"nodeType": "YulLiteral",
																							"src": "11775:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "11782:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "11782:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11794:2:16",
																									"nodeType": "YulLiteral",
																									"src": "11794:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11778:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "11778:3:16"
																							},
																							"nativeSrc": "11778:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "11778:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11771:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "11771:3:16"
																					},
																					"nativeSrc": "11771:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11771:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11761:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11761:3:16"
																			},
																			"nativeSrc": "11761:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11761:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11746:11:16",
																				"nodeType": "YulTypedName",
																				"src": "11746:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11836:23:16",
																			"nodeType": "YulBlock",
																			"src": "11836:23:16",
																			"statements": [
																				{
																					"nativeSrc": "11838:19:16",
																					"nodeType": "YulAssignment",
																					"src": "11838:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "11853:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "11853:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11838:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "11838:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11818:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "11818:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11830:4:16",
																					"nodeType": "YulLiteral",
																					"src": "11830:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11815:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11815:2:16"
																			},
																			"nativeSrc": "11815:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11815:20:16"
																		},
																		"nativeSrc": "11812:47:16",
																		"nodeType": "YulIf",
																		"src": "11812:47:16"
																	},
																	{
																		"nativeSrc": "11872:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11872:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11886:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "11886:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11896:1:16",
																							"nodeType": "YulLiteral",
																							"src": "11896:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11903:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "11903:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11908:2:16",
																									"nodeType": "YulLiteral",
																									"src": "11908:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11899:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "11899:3:16"
																							},
																							"nativeSrc": "11899:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "11899:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11892:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "11892:3:16"
																					},
																					"nativeSrc": "11892:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11892:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11882:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11882:3:16"
																			},
																			"nativeSrc": "11882:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11882:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11876:2:16",
																				"nodeType": "YulTypedName",
																				"src": "11876:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11926:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11926:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "11939:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "11939:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "11930:5:16",
																				"nodeType": "YulTypedName",
																				"src": "11930:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12024:20:16",
																			"nodeType": "YulBlock",
																			"src": "12024:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12033:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "12033:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12040:1:16",
																								"nodeType": "YulLiteral",
																								"src": "12040:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12026:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "12026:6:16"
																						},
																						"nativeSrc": "12026:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "12026:16:16"
																					},
																					"nativeSrc": "12026:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "12026:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11974:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "11974:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11981:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "11981:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11971:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11971:2:16"
																			},
																			"nativeSrc": "11971:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11971:13:16"
																		},
																		"nativeSrc": "11963:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "11985:26:16",
																			"nodeType": "YulBlock",
																			"src": "11985:26:16",
																			"statements": [
																				{
																					"nativeSrc": "11987:22:16",
																					"nodeType": "YulAssignment",
																					"src": "11987:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12000:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "12000:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12007:1:16",
																								"nodeType": "YulLiteral",
																								"src": "12007:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11996:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "11996:3:16"
																						},
																						"nativeSrc": "11996:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "11996:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "11987:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "11987:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "11967:3:16",
																			"nodeType": "YulBlock",
																			"src": "11967:3:16",
																			"statements": []
																		},
																		"src": "11963:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11639:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11639:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11644:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11644:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11636:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11636:2:16"
																},
																"nativeSrc": "11636:11:16",
																"nodeType": "YulFunctionCall",
																"src": "11636:11:16"
															},
															"nativeSrc": "11633:421:16",
															"nodeType": "YulIf",
															"src": "11633:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "11542:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11595:5:16",
														"nodeType": "YulTypedName",
														"src": "11595:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11602:3:16",
														"nodeType": "YulTypedName",
														"src": "11602:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11607:10:16",
														"nodeType": "YulTypedName",
														"src": "11607:10:16",
														"type": ""
													}
												],
												"src": "11542:518:16"
											},
											{
												"body": {
													"nativeSrc": "12150:81:16",
													"nodeType": "YulBlock",
													"src": "12150:81:16",
													"statements": [
														{
															"nativeSrc": "12160:65:16",
															"nodeType": "YulAssignment",
															"src": "12160:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12175:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "12175:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12193:1:16",
																										"nodeType": "YulLiteral",
																										"src": "12193:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12196:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "12196:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12189:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "12189:3:16"
																								},
																								"nativeSrc": "12189:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12189:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12206:1:16",
																										"nodeType": "YulLiteral",
																										"src": "12206:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12202:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "12202:3:16"
																								},
																								"nativeSrc": "12202:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12202:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12185:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "12185:3:16"
																						},
																						"nativeSrc": "12185:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "12185:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12181:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:16"
																				},
																				"nativeSrc": "12181:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12181:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12171:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12171:3:16"
																		},
																		"nativeSrc": "12171:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12171:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12217:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12217:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12220:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "12220:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12213:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12213:3:16"
																		},
																		"nativeSrc": "12213:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12213:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12168:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12168:2:16"
																},
																"nativeSrc": "12168:57:16",
																"nodeType": "YulFunctionCall",
																"src": "12168:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12160:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12160:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12065:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12127:4:16",
														"nodeType": "YulTypedName",
														"src": "12127:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12133:3:16",
														"nodeType": "YulTypedName",
														"src": "12133:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12141:4:16",
														"nodeType": "YulTypedName",
														"src": "12141:4:16",
														"type": ""
													}
												],
												"src": "12065:166:16"
											},
											{
												"body": {
													"nativeSrc": "12332:1203:16",
													"nodeType": "YulBlock",
													"src": "12332:1203:16",
													"statements": [
														{
															"nativeSrc": "12342:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12342:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12362:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12362:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12356:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "12356:5:16"
																},
																"nativeSrc": "12356:10:16",
																"nodeType": "YulFunctionCall",
																"src": "12356:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12346:6:16",
																	"nodeType": "YulTypedName",
																	"src": "12346:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12409:22:16",
																"nodeType": "YulBlock",
																"src": "12409:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12411:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12411:16:16"
																			},
																			"nativeSrc": "12411:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12411:18:16"
																		},
																		"nativeSrc": "12411:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12411:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12381:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12381:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:18:16",
																		"nodeType": "YulLiteral",
																		"src": "12389:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12378:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12378:2:16"
																},
																"nativeSrc": "12378:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12378:30:16"
															},
															"nativeSrc": "12375:56:16",
															"nodeType": "YulIf",
															"src": "12375:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12484:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12484:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12522:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "12522:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12516:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "12516:5:16"
																				},
																				"nativeSrc": "12516:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12516:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12490:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "12490:25:16"
																		},
																		"nativeSrc": "12490:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12490:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12530:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12530:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "12440:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12440:43:16"
																},
																"nativeSrc": "12440:97:16",
																"nodeType": "YulFunctionCall",
																"src": "12440:97:16"
															},
															"nativeSrc": "12440:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "12440:97:16"
														},
														{
															"nativeSrc": "12546:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12546:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "12563:1:16",
																"nodeType": "YulLiteral",
																"src": "12563:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12550:9:16",
																	"nodeType": "YulTypedName",
																	"src": "12550:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12573:17:16",
															"nodeType": "YulAssignment",
															"src": "12573:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "12586:4:16",
																"nodeType": "YulLiteral",
																"src": "12586:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12573:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "12573:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12636:642:16",
																		"nodeType": "YulBlock",
																		"src": "12636:642:16",
																		"statements": [
																			{
																				"nativeSrc": "12650:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12650:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12669:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "12669:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12681:2:16",
																									"nodeType": "YulLiteral",
																									"src": "12681:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12677:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "12677:3:16"
																							},
																							"nativeSrc": "12677:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "12677:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12665:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "12665:3:16"
																					},
																					"nativeSrc": "12665:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12665:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12654:7:16",
																						"nodeType": "YulTypedName",
																						"src": "12654:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12698:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12698:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12742:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "12742:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "12712:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "12712:29:16"
																					},
																					"nativeSrc": "12712:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12712:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12702:6:16",
																						"nodeType": "YulTypedName",
																						"src": "12702:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12760:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12760:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12769:1:16",
																					"nodeType": "YulLiteral",
																					"src": "12769:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12764:1:16",
																						"nodeType": "YulTypedName",
																						"src": "12764:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12840:165:16",
																					"nodeType": "YulBlock",
																					"src": "12840:165:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12865:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "12865:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12883:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "12883:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12888:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "12888:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12879:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "12879:3:16"
																												},
																												"nativeSrc": "12879:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "12879:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12873:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "12873:5:16"
																										},
																										"nativeSrc": "12873:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "12873:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12858:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "12858:6:16"
																								},
																								"nativeSrc": "12858:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12858:42:16"
																							},
																							"nativeSrc": "12858:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "12858:42:16"
																						},
																						{
																							"nativeSrc": "12917:24:16",
																							"nodeType": "YulAssignment",
																							"src": "12917:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12931:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "12931:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12939:1:16",
																										"nodeType": "YulLiteral",
																										"src": "12939:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12927:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "12927:3:16"
																								},
																								"nativeSrc": "12927:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12927:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12917:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "12917:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12958:33:16",
																							"nodeType": "YulAssignment",
																							"src": "12958:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12975:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "12975:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12986:4:16",
																										"nodeType": "YulLiteral",
																										"src": "12986:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12971:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "12971:3:16"
																								},
																								"nativeSrc": "12971:20:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12971:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12958:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "12958:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12794:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "12794:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12797:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "12797:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12791:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "12791:2:16"
																					},
																					"nativeSrc": "12791:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12791:14:16"
																				},
																				"nativeSrc": "12783:222:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12806:21:16",
																					"nodeType": "YulBlock",
																					"src": "12806:21:16",
																					"statements": [
																						{
																							"nativeSrc": "12808:17:16",
																							"nodeType": "YulAssignment",
																							"src": "12808:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12817:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "12817:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12820:4:16",
																										"nodeType": "YulLiteral",
																										"src": "12820:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12813:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "12813:3:16"
																								},
																								"nativeSrc": "12813:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "12813:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12808:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "12808:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12787:3:16",
																					"nodeType": "YulBlock",
																					"src": "12787:3:16",
																					"statements": []
																				},
																				"src": "12783:222:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "13053:166:16",
																					"nodeType": "YulBlock",
																					"src": "13053:166:16",
																					"statements": [
																						{
																							"nativeSrc": "13071:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13071:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13098:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "13098:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13103:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "13103:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13094:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "13094:3:16"
																										},
																										"nativeSrc": "13094:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "13094:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13088:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "13088:5:16"
																								},
																								"nativeSrc": "13088:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "13088:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13075:9:16",
																									"nodeType": "YulTypedName",
																									"src": "13075:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13138:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "13138:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13150:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "13150:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13177:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "13177:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13180:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "13180:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13173:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "13173:3:16"
																																		},
																																		"nativeSrc": "13173:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13173:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13189:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "13189:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13169:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "13169:3:16"
																																},
																																"nativeSrc": "13169:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "13169:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13199:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "13199:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13195:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "13195:3:16"
																																},
																																"nativeSrc": "13195:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "13195:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13165:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "13165:3:16"
																														},
																														"nativeSrc": "13165:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "13165:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13161:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "13161:3:16"
																												},
																												"nativeSrc": "13161:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "13161:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13146:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "13146:3:16"
																										},
																										"nativeSrc": "13146:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "13146:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13131:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "13131:6:16"
																								},
																								"nativeSrc": "13131:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "13131:74:16"
																							},
																							"nativeSrc": "13131:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "13131:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13024:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "13024:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13033:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "13033:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13021:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "13021:2:16"
																					},
																					"nativeSrc": "13021:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13021:19:16"
																				},
																				"nativeSrc": "13018:201:16",
																				"nodeType": "YulIf",
																				"src": "13018:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13239:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "13239:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13253:1:16",
																											"nodeType": "YulLiteral",
																											"src": "13253:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13256:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "13256:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13249:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "13249:3:16"
																									},
																									"nativeSrc": "13249:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "13249:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13265:1:16",
																									"nodeType": "YulLiteral",
																									"src": "13265:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13245:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "13245:3:16"
																							},
																							"nativeSrc": "13245:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "13245:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13232:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "13232:6:16"
																					},
																					"nativeSrc": "13232:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13232:36:16"
																				},
																				"nativeSrc": "13232:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "13232:36:16"
																			}
																		]
																	},
																	"nativeSrc": "12629:649:16",
																	"nodeType": "YulCase",
																	"src": "12629:649:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12634:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12634:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13295:234:16",
																		"nodeType": "YulBlock",
																		"src": "13295:234:16",
																		"statements": [
																			{
																				"nativeSrc": "13309:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13309:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13322:1:16",
																					"nodeType": "YulLiteral",
																					"src": "13322:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13313:5:16",
																						"nodeType": "YulTypedName",
																						"src": "13313:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13358:67:16",
																					"nodeType": "YulBlock",
																					"src": "13358:67:16",
																					"statements": [
																						{
																							"nativeSrc": "13376:35:16",
																							"nodeType": "YulAssignment",
																							"src": "13376:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13395:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "13395:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13400:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "13400:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13391:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "13391:3:16"
																										},
																										"nativeSrc": "13391:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "13391:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13385:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "13385:5:16"
																								},
																								"nativeSrc": "13385:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "13385:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13376:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "13376:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13339:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "13339:6:16"
																				},
																				"nativeSrc": "13336:89:16",
																				"nodeType": "YulIf",
																				"src": "13336:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13445:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "13445:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13504:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "13504:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13511:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "13511:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13451:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "13451:52:16"
																							},
																							"nativeSrc": "13451:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "13451:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13438:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "13438:6:16"
																					},
																					"nativeSrc": "13438:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13438:81:16"
																				},
																				"nativeSrc": "13438:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "13438:81:16"
																			}
																		]
																	},
																	"nativeSrc": "13287:242:16",
																	"nodeType": "YulCase",
																	"src": "13287:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12609:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12609:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12617:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12606:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12606:2:16"
																},
																"nativeSrc": "12606:14:16",
																"nodeType": "YulFunctionCall",
																"src": "12606:14:16"
															},
															"nativeSrc": "12599:930:16",
															"nodeType": "YulSwitch",
															"src": "12599:930:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12236:1299:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12317:4:16",
														"nodeType": "YulTypedName",
														"src": "12317:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12323:3:16",
														"nodeType": "YulTypedName",
														"src": "12323:3:16",
														"type": ""
													}
												],
												"src": "12236:1299:16"
											},
											{
												"body": {
													"nativeSrc": "13714:227:16",
													"nodeType": "YulBlock",
													"src": "13714:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13731:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13731:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13742:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13742:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13724:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:16"
																},
																"nativeSrc": "13724:21:16",
																"nodeType": "YulFunctionCall",
																"src": "13724:21:16"
															},
															"nativeSrc": "13724:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "13724:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13765:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13765:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13776:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13776:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13761:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13761:3:16"
																		},
																		"nativeSrc": "13761:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13761:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13781:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13781:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13754:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:16"
																},
																"nativeSrc": "13754:30:16",
																"nodeType": "YulFunctionCall",
																"src": "13754:30:16"
															},
															"nativeSrc": "13754:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "13754:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13804:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13804:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13815:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13815:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13800:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13800:3:16"
																		},
																		"nativeSrc": "13800:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13800:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "13820:34:16",
																		"nodeType": "YulLiteral",
																		"src": "13820:34:16",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13793:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13793:6:16"
																},
																"nativeSrc": "13793:62:16",
																"nodeType": "YulFunctionCall",
																"src": "13793:62:16"
															},
															"nativeSrc": "13793:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "13793:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13875:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13875:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13886:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13886:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13871:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13871:3:16"
																		},
																		"nativeSrc": "13871:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13871:18:16"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "13891:7:16",
																		"nodeType": "YulLiteral",
																		"src": "13891:7:16",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13864:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13864:6:16"
																},
																"nativeSrc": "13864:35:16",
																"nodeType": "YulFunctionCall",
																"src": "13864:35:16"
															},
															"nativeSrc": "13864:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "13864:35:16"
														},
														{
															"nativeSrc": "13908:27:16",
															"nodeType": "YulAssignment",
															"src": "13908:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13920:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13920:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13931:3:16",
																		"nodeType": "YulLiteral",
																		"src": "13931:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13916:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13916:3:16"
																},
																"nativeSrc": "13916:19:16",
																"nodeType": "YulFunctionCall",
																"src": "13916:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13908:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13908:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13540:401:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13691:9:16",
														"nodeType": "YulTypedName",
														"src": "13691:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13705:4:16",
														"nodeType": "YulTypedName",
														"src": "13705:4:16",
														"type": ""
													}
												],
												"src": "13540:401:16"
											},
											{
												"body": {
													"nativeSrc": "14120:225:16",
													"nodeType": "YulBlock",
													"src": "14120:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14137:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14137:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14148:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14148:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14130:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14130:6:16"
																},
																"nativeSrc": "14130:21:16",
																"nodeType": "YulFunctionCall",
																"src": "14130:21:16"
															},
															"nativeSrc": "14130:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "14130:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14171:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14171:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14182:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14182:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14167:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14167:3:16"
																		},
																		"nativeSrc": "14167:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14167:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14187:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14187:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14160:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14160:6:16"
																},
																"nativeSrc": "14160:30:16",
																"nodeType": "YulFunctionCall",
																"src": "14160:30:16"
															},
															"nativeSrc": "14160:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "14160:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14210:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14210:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14221:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14221:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14206:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14206:3:16"
																		},
																		"nativeSrc": "14206:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14206:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "14226:34:16",
																		"nodeType": "YulLiteral",
																		"src": "14226:34:16",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14199:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14199:6:16"
																},
																"nativeSrc": "14199:62:16",
																"nodeType": "YulFunctionCall",
																"src": "14199:62:16"
															},
															"nativeSrc": "14199:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "14199:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14281:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14281:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14292:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14292:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14277:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:16"
																		},
																		"nativeSrc": "14277:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14277:18:16"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "14297:5:16",
																		"nodeType": "YulLiteral",
																		"src": "14297:5:16",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14270:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14270:6:16"
																},
																"nativeSrc": "14270:33:16",
																"nodeType": "YulFunctionCall",
																"src": "14270:33:16"
															},
															"nativeSrc": "14270:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "14270:33:16"
														},
														{
															"nativeSrc": "14312:27:16",
															"nodeType": "YulAssignment",
															"src": "14312:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14324:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14324:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14335:3:16",
																		"nodeType": "YulLiteral",
																		"src": "14335:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14320:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14320:3:16"
																},
																"nativeSrc": "14320:19:16",
																"nodeType": "YulFunctionCall",
																"src": "14320:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14312:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14312:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13946:399:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14097:9:16",
														"nodeType": "YulTypedName",
														"src": "14097:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14111:4:16",
														"nodeType": "YulTypedName",
														"src": "14111:4:16",
														"type": ""
													}
												],
												"src": "13946:399:16"
											},
											{
												"body": {
													"nativeSrc": "14524:228:16",
													"nodeType": "YulBlock",
													"src": "14524:228:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14541:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14541:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14552:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14552:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14534:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14534:6:16"
																},
																"nativeSrc": "14534:21:16",
																"nodeType": "YulFunctionCall",
																"src": "14534:21:16"
															},
															"nativeSrc": "14534:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "14534:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14575:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14575:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14586:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14586:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14571:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14571:3:16"
																		},
																		"nativeSrc": "14571:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14571:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14591:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14591:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14564:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14564:6:16"
																},
																"nativeSrc": "14564:30:16",
																"nodeType": "YulFunctionCall",
																"src": "14564:30:16"
															},
															"nativeSrc": "14564:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "14564:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14614:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14614:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14625:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14625:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14610:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14610:3:16"
																		},
																		"nativeSrc": "14610:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14610:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "14630:34:16",
																		"nodeType": "YulLiteral",
																		"src": "14630:34:16",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14603:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14603:6:16"
																},
																"nativeSrc": "14603:62:16",
																"nodeType": "YulFunctionCall",
																"src": "14603:62:16"
															},
															"nativeSrc": "14603:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "14603:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14685:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14685:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14696:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14696:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14681:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14681:3:16"
																		},
																		"nativeSrc": "14681:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14681:18:16"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "14701:8:16",
																		"nodeType": "YulLiteral",
																		"src": "14701:8:16",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14674:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14674:6:16"
																},
																"nativeSrc": "14674:36:16",
																"nodeType": "YulFunctionCall",
																"src": "14674:36:16"
															},
															"nativeSrc": "14674:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "14674:36:16"
														},
														{
															"nativeSrc": "14719:27:16",
															"nodeType": "YulAssignment",
															"src": "14719:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14731:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14731:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14742:3:16",
																		"nodeType": "YulLiteral",
																		"src": "14742:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14727:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14727:3:16"
																},
																"nativeSrc": "14727:19:16",
																"nodeType": "YulFunctionCall",
																"src": "14727:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14719:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14719:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14350:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14501:9:16",
														"nodeType": "YulTypedName",
														"src": "14501:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14515:4:16",
														"nodeType": "YulTypedName",
														"src": "14515:4:16",
														"type": ""
													}
												],
												"src": "14350:402:16"
											},
											{
												"body": {
													"nativeSrc": "14789:95:16",
													"nodeType": "YulBlock",
													"src": "14789:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14806:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14806:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14813:3:16",
																				"nodeType": "YulLiteral",
																				"src": "14813:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14818:10:16",
																				"nodeType": "YulLiteral",
																				"src": "14818:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14809:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14809:3:16"
																		},
																		"nativeSrc": "14809:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14809:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14799:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14799:6:16"
																},
																"nativeSrc": "14799:31:16",
																"nodeType": "YulFunctionCall",
																"src": "14799:31:16"
															},
															"nativeSrc": "14799:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "14799:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14846:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14846:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14849:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14849:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14839:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14839:6:16"
																},
																"nativeSrc": "14839:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14839:15:16"
															},
															"nativeSrc": "14839:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14839:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14870:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14870:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14873:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14873:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14863:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14863:6:16"
																},
																"nativeSrc": "14863:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14863:15:16"
															},
															"nativeSrc": "14863:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14863:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14757:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14757:127:16"
											},
											{
												"body": {
													"nativeSrc": "14936:89:16",
													"nodeType": "YulBlock",
													"src": "14936:89:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "14963:22:16",
																"nodeType": "YulBlock",
																"src": "14963:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14965:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14965:16:16"
																			},
																			"nativeSrc": "14965:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14965:18:16"
																		},
																		"nativeSrc": "14965:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14965:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14956:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14956:5:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14949:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14949:6:16"
																},
																"nativeSrc": "14949:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14949:13:16"
															},
															"nativeSrc": "14946:39:16",
															"nodeType": "YulIf",
															"src": "14946:39:16"
														},
														{
															"nativeSrc": "14994:25:16",
															"nodeType": "YulAssignment",
															"src": "14994:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15005:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15005:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15016:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15016:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15012:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15012:3:16"
																		},
																		"nativeSrc": "15012:6:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15012:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15001:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15001:3:16"
																},
																"nativeSrc": "15001:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15001:18:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14994:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "14889:136:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14918:5:16",
														"nodeType": "YulTypedName",
														"src": "14918:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14928:3:16",
														"nodeType": "YulTypedName",
														"src": "14928:3:16",
														"type": ""
													}
												],
												"src": "14889:136:16"
											},
											{
												"body": {
													"nativeSrc": "15204:182:16",
													"nodeType": "YulBlock",
													"src": "15204:182:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15221:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15221:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15232:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15232:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15214:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15214:6:16"
																},
																"nativeSrc": "15214:21:16",
																"nodeType": "YulFunctionCall",
																"src": "15214:21:16"
															},
															"nativeSrc": "15214:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "15214:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15255:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15255:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15266:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15266:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15251:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15251:3:16"
																		},
																		"nativeSrc": "15251:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15251:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15271:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15271:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15244:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15244:6:16"
																},
																"nativeSrc": "15244:30:16",
																"nodeType": "YulFunctionCall",
																"src": "15244:30:16"
															},
															"nativeSrc": "15244:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "15244:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15294:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15294:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15305:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15305:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15290:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15290:3:16"
																		},
																		"nativeSrc": "15290:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15290:18:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "15310:34:16",
																		"nodeType": "YulLiteral",
																		"src": "15310:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15283:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15283:6:16"
																},
																"nativeSrc": "15283:62:16",
																"nodeType": "YulFunctionCall",
																"src": "15283:62:16"
															},
															"nativeSrc": "15283:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "15283:62:16"
														},
														{
															"nativeSrc": "15354:26:16",
															"nodeType": "YulAssignment",
															"src": "15354:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15366:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15366:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15377:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15377:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15362:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15362:3:16"
																},
																"nativeSrc": "15362:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15362:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15354:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15354:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15030:356:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15181:9:16",
														"nodeType": "YulTypedName",
														"src": "15181:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15195:4:16",
														"nodeType": "YulTypedName",
														"src": "15195:4:16",
														"type": ""
													}
												],
												"src": "15030:356:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let _1 := abi_encode_string(value0, add(pos, 23))\n        mstore(_1, \" is missing role \")\n        end := abi_encode_string(value1, add(_1, 17))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101bb575f3560e01c806370a08231116100f3578063a64a92a811610093578063d547741f1161006e578063d547741f146103db578063dbd192d4146103ee578063dd62ed3e14610415578063e90cdd1c14610428575f5ffd5b8063a64a92a814610378578063a9059cbb146103a3578063bd39a2a8146103b6575f5ffd5b806391d14854116100ce57806391d148541461034357806395d89b4114610356578063a217fddf1461035e578063a457c2d714610365575f5ffd5b806370a082311461030057806379cc6790146103285780638129fc1c1461033b575f5ffd5b8063313ce5671161015e578063395093511161013957806339509351146102a057806342966c68146102b35780634e695cca146102c65780636e4af83e146102ed575f5ffd5b8063313ce5671461026b57806336568abe1461027a57806338f5a5e41461028d575f5ffd5b806318160ddd1161019957806318160ddd1461020f57806323b872dd14610221578063248a9ca3146102345780632f2ff15d14610256575f5ffd5b806301ffc9a7146101bf57806306fdde03146101e7578063095ea7b3146101fc575b5f5ffd5b6101d26101cd3660046114a9565b61043b565b60405190151581526020015b60405180910390f35b6101ef610471565b6040516101de91906114d0565b6101d261020a366004611520565b610501565b6035545b6040519081526020016101de565b6101d261022f366004611548565b610518565b610213610242366004611582565b5f90815260c9602052604090206001015490565b610269610264366004611599565b6105dc565b005b604051601281526020016101de565b610269610288366004611599565b610605565b61026961029b3660046115c3565b610688565b6101d26102ae366004611520565b610737565b6102696102c1366004611582565b610758565b6102137f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b081565b6102696102fb3660046115c3565b610765565b61021361030e3660046115c3565b6001600160a01b03165f9081526033602052604090205490565b610269610336366004611520565b610810565b610269610825565b6101d2610351366004611599565b61099e565b6101ef6109c8565b6102135f81565b6101d2610373366004611520565b6109d7565b6101d26103863660046115c3565b6001600160a01b03165f90815260fc602052604090205460ff1690565b6101d26103b1366004611520565b610a5c565b60fb546103c69063ffffffff1681565b60405163ffffffff90911681526020016101de565b6102696103e9366004611599565b610a69565b6102137f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f81565b6102136104233660046115dc565b610a8d565b610269610436366004611604565b610ab7565b5f6001600160e01b03198216637965db0b60e01b148061046b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606036805461048090611627565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90611627565b80156104f75780601f106104ce576101008083540402835291602001916104f7565b820191905f5260205f20905b8154815290600101906020018083116104da57829003601f168201915b5050505050905090565b5f3361050e818585610b54565b5060019392505050565b60fb545f9084908490839063ffffffff16158061053c575060fb5463ffffffff1642105b905080156105c6575f61054f818561099e565b8061055f575061055f5f8461099e565b8061056f575061056f5f3361099e565b9050801580156105a657506105a47f2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b08461099e565b155b156105c45760405163afae8e9760e01b815260040160405180910390fd5b505b6105d1878787610c77565b979650505050505050565b5f82815260c960205260409020600101546105f681610c8f565b6106008383610c99565b505050565b6001600160a01b038116331461067a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106848282610d1e565b5050565b7f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f6106b281610c8f565b6001600160a01b0382165f90815260fc602052604090205460ff16156106eb57604051631482985760e31b815260040160405180910390fd5b6001600160a01b0382165f81815260fc6020526040808220805460ff19166001179055517f4f03d75a12f5f2153536f14e57d9477eff6be012215a22e894dbc840db1c8f7e9190a25050565b5f3361050e8185856107498383610a8d565b6107539190611673565b610b54565b6107623382610d84565b50565b7f5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f61078f81610c8f565b6001600160a01b0382165f90815260fc602052604090205460ff166107c7576040516317c33b6560e01b815260040160405180910390fd5b6001600160a01b0382165f81815260fc6020526040808220805460ff19169055517f43a926d6828be5aecd76c987f92b63201c077e5ebf44ea16eecd0f2342bf53199190a25050565b61081b823383610eb6565b6106848282610d84565b5f54610100900460ff161580801561084357505f54600160ff909116105b8061085c5750303b15801561085c57505f5460ff166001145b6108bf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610671565b5f805460ff1916600117905580156108e0575f805461ff0019166101001790555b61092460405180604001604052806006815260200165416c7661726160d01b81525060405180604001604052806004815260200163414c564160e01b815250610f2e565b61092c610f5e565b610934610f86565b610957336109446012600a611769565b61095290630bebc200611777565b610fb6565b8015610762575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b5f91825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606037805461048090611627565b5f33816109e48286610a8d565b905083811015610a445760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610671565b610a518286868403610b54565b506001949350505050565b5f3361050e818585611075565b5f82815260c96020526040902060010154610a8381610c8f565b6106008383610d1e565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b5f610ac181610c8f565b60fb5463ffffffff1615801590610ae0575060fb5463ffffffff164210155b15610afe57604051636f555ee160e11b815260040160405180910390fd5b60405163ffffffff831681527f0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d69060200160405180910390a15060fb805463ffffffff191663ffffffff92909216919091179055565b6001600160a01b038316610bb65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610671565b6001600160a01b038216610c175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610671565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f33610c84858285610eb6565b610a51858585611075565b61076281336110b9565b610ca3828261099e565b610684575f82815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610cda3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610d28828261099e565b15610684575f82815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216610de45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610671565b6001600160a01b0382165f9081526033602052604090205481811015610e575760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610671565b6001600160a01b0383165f8181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b5f610ec18484610a8d565b90505f198114610f285781811015610f1b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610671565b610f288484848403610b54565b50505050565b5f54610100900460ff16610f545760405162461bcd60e51b81526004016106719061178e565b6106848282611112565b5f54610100900460ff16610f845760405162461bcd60e51b81526004016106719061178e565b565b5f54610100900460ff16610fac5760405162461bcd60e51b81526004016106719061178e565b610f845f33610c99565b6001600160a01b03821661100c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610671565b8060355f82825461101d9190611673565b90915550506001600160a01b0382165f818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383165f90815260fc602052604090205460ff16156110ae57604051633991fca960e21b815260040160405180910390fd5b610600838383611151565b6110c3828261099e565b610684576110d0816112fa565b6110db83602061130c565b6040516020016110ec9291906117f0565b60408051601f198184030181529082905262461bcd60e51b8252610671916004016114d0565b5f54610100900460ff166111385760405162461bcd60e51b81526004016106719061178e565b603661114483826118ad565b50603761060082826118ad565b6001600160a01b0383166111b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610671565b6001600160a01b0382166112175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610671565b6001600160a01b0383165f908152603360205260409020548181101561128e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610671565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112ed9086815260200190565b60405180910390a3610f28565b606061046b6001600160a01b03831660145b60605f61131a836002611777565b611325906002611673565b67ffffffffffffffff81111561133d5761133d61184e565b6040519080825280601f01601f191660200182016040528015611367576020820181803683370190505b509050600360fc1b815f8151811061138157611381611968565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106113af576113af611968565b60200101906001600160f81b03191690815f1a9053505f6113d1846002611777565b6113dc906001611673565b90505b6001811115611453576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061141057611410611968565b1a60f81b82828151811061142657611426611968565b60200101906001600160f81b03191690815f1a90535060049490941c9361144c8161197c565b90506113df565b5083156114a25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610671565b9392505050565b5f602082840312156114b9575f5ffd5b81356001600160e01b0319811681146114a2575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461151b575f5ffd5b919050565b5f5f60408385031215611531575f5ffd5b61153a83611505565b946020939093013593505050565b5f5f5f6060848603121561155a575f5ffd5b61156384611505565b925061157160208501611505565b929592945050506040919091013590565b5f60208284031215611592575f5ffd5b5035919050565b5f5f604083850312156115aa575f5ffd5b823591506115ba60208401611505565b90509250929050565b5f602082840312156115d3575f5ffd5b6114a282611505565b5f5f604083850312156115ed575f5ffd5b6115f683611505565b91506115ba60208401611505565b5f60208284031215611614575f5ffd5b813563ffffffff811681146114a2575f5ffd5b600181811c9082168061163b57607f821691505b60208210810361165957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561046b5761046b61165f565b6001815b60018411156116c1578085048111156116a5576116a561165f565b60018416156116b357908102905b60019390931c92800261168a565b935093915050565b5f826116d75750600161046b565b816116e357505f61046b565b81600181146116f957600281146117035761171f565b600191505061046b565b60ff8411156117145761171461165f565b50506001821b61046b565b5060208310610133831016604e8410600b8410161715611742575081810a61046b565b61174e5f198484611686565b805f19048211156117615761176161165f565b029392505050565b5f6114a260ff8416836116c9565b808202811582820484141761046b5761046b61165f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f61182160178301856117d9565b7001034b99036b4b9b9b4b733903937b6329607d1b815261184560118201856117d9565b95945050505050565b634e487b7160e01b5f52604160045260245ffd5b601f82111561060057805f5260205f20601f840160051c810160208510156118875750805b601f840160051c820191505b818110156118a6575f8155600101611893565b5050505050565b815167ffffffffffffffff8111156118c7576118c761184e565b6118db816118d58454611627565b84611862565b6020601f82116001811461190d575f83156118f65750848201515b5f19600385901b1c1916600184901b1784556118a6565b5f84815260208120601f198516915b8281101561193c578785015182556020948501946001909201910161191c565b508482101561195957868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b5f8161198a5761198a61165f565b505f19019056fea2646970667358221220d425106bd83823a2750a9a3f439963bd87ed4ec854cbbd904f169966229fa7f664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA64A92A8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xDBD192D4 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xE90CDD1C EQ PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA64A92A8 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xBD39A2A8 EQ PUSH2 0x3B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x365 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x33B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x4E695CCA EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x6E4AF83E EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x38F5A5E4 EQ PUSH2 0x28D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x269 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x213 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH2 0x3C6 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x269 PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x46B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0x1627 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x1627 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0xB54 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH0 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF AND ISZERO DUP1 PUSH2 0x53C JUMPI POP PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 PUSH2 0x54F DUP2 DUP6 PUSH2 0x99E JUMP JUMPDEST DUP1 PUSH2 0x55F JUMPI POP PUSH2 0x55F PUSH0 DUP5 PUSH2 0x99E JUMP JUMPDEST DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F PUSH0 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI POP PUSH2 0x5A4 PUSH32 0x2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0 DUP5 PUSH2 0x99E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAFAE8E97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x5D1 DUP8 DUP8 DUP8 PUSH2 0xC77 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5F6 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xC99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0xD1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F PUSH2 0x6B2 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x14829857 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x4F03D75A12F5F2153536F14E57D9477EFF6BE012215A22E894DBC840DB1C8F7E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x749 DUP4 DUP4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x762 CALLER DUP3 PUSH2 0xD84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F PUSH2 0x78F DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x17C33B65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x43A926D6828BE5AECD76C987F92B63201C077E5EBF44EA16EECD0F2342BF5319 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x81B DUP3 CALLER DUP4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0xD84 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x843 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x85C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85C JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x924 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x416C76617261 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x414C5641 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x92C PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x934 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x957 CALLER PUSH2 0x944 PUSH1 0x12 PUSH1 0xA PUSH2 0x1769 JUMP JUMPDEST PUSH2 0x952 SWAP1 PUSH4 0xBEBC200 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x9E4 DUP3 DUP7 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH2 0xA51 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB54 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA83 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xAC1 DUP2 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAE0 JUMPI POP PUSH1 0xFB SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F555EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xE210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0xFB DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xC84 DUP6 DUP3 DUP6 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xA51 DUP6 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x762 DUP2 CALLER PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0xCA3 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCDA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xD28 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST ISZERO PUSH2 0x684 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC1 DUP5 DUP5 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xF28 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST PUSH2 0xF28 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB54 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x684 DUP3 DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xF84 PUSH0 CALLER PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3991FCA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 DUP4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x10C3 DUP3 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH2 0x10D0 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x10DB DUP4 PUSH1 0x20 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10EC SWAP3 SWAP2 SWAP1 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x671 SWAP2 PUSH1 0x4 ADD PUSH2 0x14D0 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x36 PUSH2 0x1144 DUP4 DUP3 PUSH2 0x18AD JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x600 DUP3 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x12ED SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x46B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x131A DUP4 PUSH1 0x2 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1325 SWAP1 PUSH1 0x2 PUSH2 0x1673 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1367 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1381 JUMPI PUSH2 0x1381 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13AF JUMPI PUSH2 0x13AF PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x13D1 DUP5 PUSH1 0x2 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x13DC SWAP1 PUSH1 0x1 PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1453 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1410 JUMPI PUSH2 0x1410 PUSH2 0x1968 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1426 JUMPI PUSH2 0x1426 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x144C DUP2 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP PUSH2 0x13DF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x671 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x151B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1531 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153A DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x155A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1563 DUP5 PUSH2 0x1505 JUMP JUMPDEST SWAP3 POP PUSH2 0x1571 PUSH1 0x20 DUP6 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1592 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x15BA PUSH1 0x20 DUP5 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14A2 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15F6 DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BA PUSH1 0x20 DUP5 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1614 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x163B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x165F JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x16C1 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x16A5 JUMPI PUSH2 0x16A5 PUSH2 0x165F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x16B3 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x168A JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16D7 JUMPI POP PUSH1 0x1 PUSH2 0x46B JUMP JUMPDEST DUP2 PUSH2 0x16E3 JUMPI POP PUSH0 PUSH2 0x46B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16F9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1703 JUMPI PUSH2 0x171F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1714 PUSH2 0x165F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1742 JUMPI POP DUP2 DUP2 EXP PUSH2 0x46B JUMP JUMPDEST PUSH2 0x174E PUSH0 NOT DUP5 DUP5 PUSH2 0x1686 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1761 PUSH2 0x165F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A2 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x16C9 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x165F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x1821 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x1845 PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x600 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1887 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1893 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C7 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x18D5 DUP5 SLOAD PUSH2 0x1627 JUMP JUMPDEST DUP5 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x190D JUMPI PUSH0 DUP4 ISZERO PUSH2 0x18F6 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x18A6 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x191C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1959 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x198A JUMPI PUSH2 0x198A PUSH2 0x165F JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x25 LT PUSH12 0xD83823A2750A9A3F439963BD DUP8 0xED 0x4E 0xC8 SLOAD 0xCB 0xBD SWAP1 0x4F AND SWAP10 PUSH7 0x229FA7F664736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "370:3597:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:213:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:16;;463:22;445:41;;433:2;418:18;3050:213:0;;;;;;;;2516:98:3;;;:::i;:::-;;;;;;;:::i;4802:197::-;;;;;;:::i;:::-;;:::i;3613:106::-;3700:12;;3613:106;;;1549:25:16;;;1537:2;1522:18;3613:106:3;1403:177:16;3747:218:14;;;;;;:::i;:::-;;:::i;4855:129:0:-;;;;;;:::i;:::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;;4855:129;5280:145;;;;;;:::i;:::-;;:::i;:::-;;3462:91:3;;;3544:2;2824:36:16;;2812:2;2797:18;3462:91:3;2682:184:16;6389:214:0;;;;;;:::i;:::-;;:::i;2187:246:14:-;;;;;;:::i;:::-;;:::i;6212:234:3:-;;;;;;:::i;:::-;;:::i;869:89:5:-;;;;;;:::i;:::-;;:::i;1254:100:15:-;;1315:39;1254:100;;2630:301:14;;;;;;:::i;:::-;;:::i;3777:125:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3877:18:3;3851:7;3877:18;;;:9;:18;;;;;;;3777:125;1264:161:5;;;;;;:::i;:::-;;:::i;1773:220:14:-;;;:::i;3350:145:0:-;;;;;;:::i;:::-;;:::i;2727:102:3:-;;;:::i;2320:49:0:-;;2365:4;2320:49;;6933:427:3;;;;;;:::i;:::-;;:::i;3132:108:14:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3214:18:14;3192:4;3214:18;;;:9;:18;;;;;;;;;3132:108;4098:189:3;;;;;;:::i;:::-;;:::i;1360:30:15:-;;;;;;;;;;;;3467:10:16;3455:23;;;3437:42;;3425:2;3410:18;1360:30:15;3293:192:16;5705:147:0;;;;;;:::i;:::-;;:::i;948:82:14:-;;996:34;948:82;;4345:149:3;;;;;;:::i;:::-;;:::i;2766:355:15:-;;;;;;:::i;:::-;;:::i;3050:213:0:-;3135:4;-1:-1:-1;;;;;;3158:58:0;;-1:-1:-1;;;3158:58:0;;:98;;-1:-1:-1;;;;;;;;;;1189:51:10;;;3220:36:0;3151:105;3050:213;-1:-1:-1;;3050:213:0:o;2516:98:3:-;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;965:10:8;4939:32:3;965:10:8;4955:7:3;4964:6;4939:8;:32::i;:::-;-1:-1:-1;4988:4:3;;4802:197;-1:-1:-1;;;4802:197:3:o;3747:218:14:-;1770:16:15;;3899:4:14;;3880;;3886:2;;3899:4;;1770:16:15;;:21;;:71;;-1:-1:-1;1825:16:15;;;;1807:15;:34;1770:71;1737:104;;1855:25;1851:430;;;1896:29;1928:33;1896:29;1956:4;1928:7;:33::i;:::-;:84;;;-1:-1:-1;1981:31:15;2365:4:0;2009:2:15;1981:7;:31::i;:::-;1928:145;;;-1:-1:-1;2032:41:15;2365:4:0;965:10:8;3350:145:0;:::i;2032:41:15:-;1896:177;;2109:24;2108:25;:85;;;;;2154:39;1315;2190:2;2154:7;:39::i;:::-;2153:40;2108:85;2087:184;;;2233:23;;-1:-1:-1;;;2233:23:15;;;;;;;;;;;2087:184;1882:399;1851:430;3922:36:14::1;3941:4;3947:2;3951:6;3922:18;:36::i;:::-;3915:43:::0;3747:218;-1:-1:-1;;;;;;;3747:218:14:o;5280:145:0:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;-1:-1:-1;;;;;6484:23:0;;965:10:8;6484:23:0;6476:83;;;;-1:-1:-1;;;6476:83:0;;4623:2:16;6476:83:0;;;4605:21:16;4662:2;4642:18;;;4635:30;4701:34;4681:18;;;4674:62;-1:-1:-1;;;4752:18:16;;;4745:45;4807:19;;6476:83:0;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;2187:246:14:-;996:34;2798:16:0;2809:4;2798:10;:16::i;:::-;-1:-1:-1;;;;;2280:18:14;::::1;;::::0;;;:9:::1;:18;::::0;;;;;::::1;;2276:82;;;2321:26;;-1:-1:-1::0;;;2321:26:14::1;;;;;;;;;;;2276:82;-1:-1:-1::0;;;;;2367:18:14;::::1;;::::0;;;:9:::1;:18;::::0;;;;;:25;;-1:-1:-1;;2367:25:14::1;2388:4;2367:25;::::0;;2407:19;::::1;::::0;2367:18;2407:19:::1;2187:246:::0;;:::o;6212:234:3:-;6300:4;965:10:8;6354:64:3;965:10:8;6370:7:3;6407:10;6379:25;965:10:8;6370:7:3;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;869:89:5:-;924:27;965:10:8;944:6:5;924:5;:27::i;:::-;869:89;:::o;2630:301:14:-;996:34;2798:16:0;2809:4;2798:10;:16::i;:::-;-1:-1:-1;;;;;2729:18:14;::::1;;::::0;;;:9:::1;:18;::::0;;;;;::::1;;2724:122;;2770:22;;-1:-1:-1::0;;;2770:22:14::1;;;;;;;;;;;2724:122;-1:-1:-1::0;;;;;2855:18:14;::::1;2876:5;2855:18:::0;;;:9:::1;:18;::::0;;;;;:26;;-1:-1:-1;;2855:26:14::1;::::0;;2896:28;::::1;::::0;2876:5;2896:28:::1;2630:301:::0;;:::o;1264:161:5:-;1340:46;1356:7;965:10:8;1379:6:5;1340:15;:46::i;:::-;1396:22;1402:7;1411:6;1396:5;:22::i;1773:220:14:-;3279:19:2;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:2;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:2;1713:19:7;:23;;;3387:66:2;;-1:-1:-1;3436:12:2;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:2;;5301:2:16;3325:201:2;;;5283:21:16;5340:2;5320:18;;;5313:30;5379:34;5359:18;;;5352:62;-1:-1:-1;;;5430:18:16;;;5423:44;5484:19;;3325:201:2;5099:410:16;3325:201:2;3536:12;:16;;-1:-1:-1;;3536:16:2;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:2;;;;;3562:65;1824:30:14::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1824:30:14::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1824:30:14::1;;::::0;:12:::1;:30::i;:::-;1864:22;:20;:22::i;:::-;1896:32;:30;:32::i;:::-;1939:47;1945:10;1971:14;3544:2:3::0;1971::14::1;:14;:::i;:::-;1957:28;::::0;:11:::1;:28;:::i;:::-;1939:5;:47::i;:::-;3651:14:2::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:2;;;3721:14;;-1:-1:-1;2824:36:16;;3721:14:2;;2812:2:16;2797:18;3721:14:2;;;;;;;3269:483;1773:220:14:o;3350:145:0:-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:0;;;;;;;;;;;;;;;3350:145::o;2727:102:3:-;2783:13;2815:7;2808:14;;;;;:::i;6933:427::-;7026:4;965:10:8;7026:4:3;7107:25;965:10:8;7124:7:3;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;-1:-1:-1;;;7142:85:3;;7520:2:16;7142:85:3;;;7502:21:16;7559:2;7539:18;;;7532:30;7598:34;7578:18;;;7571:62;-1:-1:-1;;;7649:18:16;;;7642:35;7694:19;;7142:85:3;7318:401:16;7142:85:3;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;:::-;-1:-1:-1;7349:4:3;;6933:427;-1:-1:-1;;;;6933:427:3:o;4098:189::-;4177:4;965:10:8;4231:28:3;965:10:8;4248:2:3;4252:6;4231:9;:28::i;5705:147:0:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;4345:149:3:-:0;-1:-1:-1;;;;;4460:18:3;;;4434:7;4460:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4345:149::o;2766:355:15:-;2365:4:0;2798:16;2365:4;2798:10;:16::i;:::-;2895::15::1;::::0;::::1;;:20:::0;;;;:59:::1;;-1:-1:-1::0;2938:16:15::1;::::0;::::1;;2919:15;:35;;2895:59;2891:117;;;2977:20;;-1:-1:-1::0;;;2977:20:15::1;;;;;;;;;;;2891:117;3022:44;::::0;3467:10:16;3455:23;;3437:42;;3022:44:15::1;::::0;3425:2:16;3410:18;3022:44:15::1;;;;;;;-1:-1:-1::0;3076:16:15::1;:38:::0;;-1:-1:-1;;3076:38:15::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2766:355::o;10815:340:3:-;-1:-1:-1;;;;;10916:19:3;;10908:68;;;;-1:-1:-1;;;10908:68:3;;7926:2:16;10908:68:3;;;7908:21:16;7965:2;7945:18;;;7938:30;8004:34;7984:18;;;7977:62;-1:-1:-1;;;8055:18:16;;;8048:34;8099:19;;10908:68:3;7724:400:16;10908:68:3;-1:-1:-1;;;;;10994:21:3;;10986:68;;;;-1:-1:-1;;;10986:68:3;;8331:2:16;10986:68:3;;;8313:21:16;8370:2;8350:18;;;8343:30;8409:34;8389:18;;;8382:62;-1:-1:-1;;;8460:18:16;;;8453:32;8502:19;;10986:68:3;8129:398:16;10986:68:3;-1:-1:-1;;;;;11065:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11116:32;;1549:25:16;;;11116:32:3;;1522:18:16;11116:32:3;;;;;;;10815:340;;;:::o;5561:256::-;5658:4;965:10:8;5714:38:3;5730:4;965:10:8;5745:6:3;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;3789:103:0:-;3855:30;3866:4;965:10:8;3855::0;:30::i;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:0;;;;;;;;;:36;;-1:-1:-1;;8059:36:0;8091:4;8059:36;;;8141:12;965:10:8;;886:96;8141:12:0;-1:-1:-1;;;;;8114:40:0;8132:7;-1:-1:-1;;;;;8114:40:0;8126:4;8114:40;;;;;;;;;;7938:233;;:::o;8342:234::-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8463:29:0;;;;;;;;;;:37;;-1:-1:-1;;8463:37:0;;;8519:40;965:10:8;;8463:12:0;;8519:40;;8495:5;8519:40;8342:234;;:::o;9733:659:3:-;-1:-1:-1;;;;;9816:21:3;;9808:67;;;;-1:-1:-1;;;9808:67:3;;8734:2:16;9808:67:3;;;8716:21:16;8773:2;8753:18;;;8746:30;8812:34;8792:18;;;8785:62;-1:-1:-1;;;8863:18:16;;;8856:31;8904:19;;9808:67:3;8532:397:16;9808:67:3;-1:-1:-1;;;;;9971:18:3;;9946:22;9971:18;;;:9;:18;;;;;;10007:24;;;;9999:71;;;;-1:-1:-1;;;9999:71:3;;9136:2:16;9999:71:3;;;9118:21:16;9175:2;9155:18;;;9148:30;9214:34;9194:18;;;9187:62;-1:-1:-1;;;9265:18:16;;;9258:32;9307:19;;9999:71:3;8934:398:16;9999:71:3;-1:-1:-1;;;;;10104:18:3;;;;;;:9;:18;;;;;;;;10125:23;;;10104:44;;10241:12;:22;;;;;;;10289:37;1549:25:16;;;10104:18:3;;;10289:37;;1522:18:16;10289:37:3;;;;;;;5280:145:0;;;:::o;11436:411:3:-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;-1:-1:-1;;11602:16:3;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;-1:-1:-1;;;11655:68:3;;9539:2:16;11655:68:3;;;9521:21:16;9578:2;9558:18;;;9551:30;9617:31;9597:18;;;9590:59;9666:18;;11655:68:3;9337:353:16;11655:68:3;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11526:321;11436:411;;;:::o;2139:147::-;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;2241:38:3::1;2264:5;2271:7;2241:22;:38::i;615:65:5:-:0;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;615:65:5:o;2380:129:15:-;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;2458:44:15::1;2365:4:0;965:10:8::0;2458::15::1;:44::i;8878:535:3:-:0;-1:-1:-1;;;;;8961:21:3;;8953:65;;;;-1:-1:-1;;;8953:65:3;;10309:2:16;8953:65:3;;;10291:21:16;10348:2;10328:18;;;10321:30;10387:33;10367:18;;;10360:61;10438:18;;8953:65:3;10107:355:16;8953:65:3;9105:6;9089:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9257:18:3;;;;;;:9;:18;;;;;;;;:28;;;;;;9310:37;1549:25:16;;;9310:37:3;;1522:18:16;9310:37:3;;;;;;;6389:214:0;;:::o;3328:320:14:-;-1:-1:-1;;;;;3461:15:14;;;;;;:9;:15;;;;;;;;3457:138;;;3503:18;;-1:-1:-1;;;3503:18:14;;;;;;;;;;;3457:138;3608:33;3624:4;3630:2;3634:6;3608:15;:33::i;4173:501:0:-;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4351:274:0;;;;;;;;;;-1:-1:-1;;;4299:358:0;;;;;;;:::i;2292:159:3:-;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;2404:5:3::1;:13;2412:5:::0;2404;:13:::1;:::i;:::-;-1:-1:-1::0;2427:7:3::1;:17;2437:7:::0;2427;:17:::1;:::i;7814:788::-:0;-1:-1:-1;;;;;7910:18:3;;7902:68;;;;-1:-1:-1;;;7902:68:3;;13742:2:16;7902:68:3;;;13724:21:16;13781:2;13761:18;;;13754:30;13820:34;13800:18;;;13793:62;-1:-1:-1;;;13871:18:16;;;13864:35;13916:19;;7902:68:3;13540:401:16;7902:68:3;-1:-1:-1;;;;;7988:16:3;;7980:64;;;;-1:-1:-1;;;7980:64:3;;14148:2:16;7980:64:3;;;14130:21:16;14187:2;14167:18;;;14160:30;14226:34;14206:18;;;14199:62;-1:-1:-1;;;14277:18:16;;;14270:33;14320:19;;7980:64:3;13946:399:16;7980:64:3;-1:-1:-1;;;;;8126:15:3;;8104:19;8126:15;;;:9;:15;;;;;;8159:21;;;;8151:72;;;;-1:-1:-1;;;8151:72:3;;14552:2:16;8151:72:3;;;14534:21:16;14591:2;14571:18;;;14564:30;14630:34;14610:18;;;14603:62;-1:-1:-1;;;14681:18:16;;;14674:36;14727:19;;8151:72:3;14350:402:16;8151:72:3;-1:-1:-1;;;;;8257:15:3;;;;;;;:9;:15;;;;;;8275:20;;;8257:38;;8472:13;;;;;;;;;;:23;;;;;;8521:26;;;;;;8289:6;1549:25:16;;1537:2;1522:18;;1403:177;8521:26:3;;;;;;;;8558:37;5280:145:0;2473:149:9;2531:13;2563:52;-1:-1:-1;;;;;2575:22:9;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:9;;1984:47;;-1:-1:-1;;;2041:6:9;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:9;;;;;;;;;-1:-1:-1;;;2066:6:9;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:9;;;;;;;;-1:-1:-1;2096:9:9;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:9;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:9;;;;;;;;-1:-1:-1;2207:1:9;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:9;;2228:55;;;;-1:-1:-1;;;2228:55:9;;15232:2:16;2228:55:9;;;15214:21:16;;;15251:18;;;15244:30;15310:34;15290:18;;;15283:62;15362:18;;2228:55:9;15030:356:16;2228:55:9;2307:6;1884:437;-1:-1:-1;;;1884:437:9:o;14:286:16:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:16;;209:43;;199:71;;266:1;263;256:12;497:418;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;780:6;775:2;767:6;763:15;758:2;747:9;743:18;737:50;836:1;831:2;822:6;811:9;807:22;803:31;796:42;906:2;899;895:7;890:2;882:6;878:15;874:29;863:9;859:45;855:54;847:62;;;497:418;;;;:::o;920:173::-;988:20;;-1:-1:-1;;;;;1037:31:16;;1027:42;;1017:70;;1083:1;1080;1073:12;1017:70;920:173;;;:::o;1098:300::-;1166:6;1174;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;:::-;1256:39;1364:2;1349:18;;;;1336:32;;-1:-1:-1;;;1098:300:16:o;1585:374::-;1662:6;1670;1678;1731:2;1719:9;1710:7;1706:23;1702:32;1699:52;;;1747:1;1744;1737:12;1699:52;1770:29;1789:9;1770:29;:::i;:::-;1760:39;;1818:38;1852:2;1841:9;1837:18;1818:38;:::i;:::-;1585:374;;1808:48;;-1:-1:-1;;;1925:2:16;1910:18;;;;1897:32;;1585:374::o;1964:226::-;2023:6;2076:2;2064:9;2055:7;2051:23;2047:32;2044:52;;;2092:1;2089;2082:12;2044:52;-1:-1:-1;2137:23:16;;1964:226;-1:-1:-1;1964:226:16:o;2377:300::-;2445:6;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2567:23;;;-1:-1:-1;2633:38:16;2667:2;2652:18;;2633:38;:::i;:::-;2623:48;;2377:300;;;;;:::o;2871:186::-;2930:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:52;;;2999:1;2996;2989:12;2951:52;3022:29;3041:9;3022:29;:::i;3490:260::-;3558:6;3566;3619:2;3607:9;3598:7;3594:23;3590:32;3587:52;;;3635:1;3632;3625:12;3587:52;3658:29;3677:9;3658:29;:::i;:::-;3648:39;;3706:38;3740:2;3729:9;3725:18;3706:38;:::i;3755:276::-;3813:6;3866:2;3854:9;3845:7;3841:23;3837:32;3834:52;;;3882:1;3879;3872:12;3834:52;3921:9;3908:23;3971:10;3964:5;3960:22;3953:5;3950:33;3940:61;;3997:1;3994;3987:12;4036:380;4115:1;4111:12;;;;4158;;;4179:61;;4233:4;4225:6;4221:17;4211:27;;4179:61;4286:2;4278:6;4275:14;4255:18;4252:38;4249:161;;4332:10;4327:3;4323:20;4320:1;4313:31;4367:4;4364:1;4357:15;4395:4;4392:1;4385:15;4249:161;;4036:380;;;:::o;4837:127::-;4898:10;4893:3;4889:20;4886:1;4879:31;4929:4;4926:1;4919:15;4953:4;4950:1;4943:15;4969:125;5034:9;;;5055:10;;;5052:36;;;5068:18;;:::i;5514:375::-;5602:1;5620:5;5634:249;5655:1;5645:8;5642:15;5634:249;;;5705:4;5700:3;5696:14;5690:4;5687:24;5684:50;;;5714:18;;:::i;:::-;5764:1;5754:8;5750:16;5747:49;;;5778:16;;;;5747:49;5861:1;5857:16;;;;;5817:15;;5634:249;;;5514:375;;;;;;:::o;5894:902::-;5943:5;5973:8;5963:80;;-1:-1:-1;6014:1:16;6028:5;;5963:80;6062:4;6052:76;;-1:-1:-1;6099:1:16;6113:5;;6052:76;6144:4;6162:1;6157:59;;;;6230:1;6225:174;;;;6137:262;;6157:59;6187:1;6178:10;;6201:5;;;6225:174;6262:3;6252:8;6249:17;6246:43;;;6269:18;;:::i;:::-;-1:-1:-1;;6325:1:16;6311:16;;6384:5;;6137:262;;6483:2;6473:8;6470:16;6464:3;6458:4;6455:13;6451:36;6445:2;6435:8;6432:16;6427:2;6421:4;6418:12;6414:35;6411:77;6408:203;;;-1:-1:-1;6520:19:16;;;6596:5;;6408:203;6643:42;-1:-1:-1;;6668:8:16;6662:4;6643:42;:::i;:::-;6721:6;6717:1;6713:6;6709:19;6700:7;6697:32;6694:58;;;6732:18;;:::i;:::-;6770:20;;5894:902;-1:-1:-1;;;5894:902:16:o;6801:140::-;6859:5;6888:47;6929:4;6919:8;6915:19;6909:4;6888:47;:::i;6946:168::-;7019:9;;;7050;;7067:15;;;7061:22;;7047:37;7037:71;;7088:18;;:::i;9695:407::-;9897:2;9879:21;;;9936:2;9916:18;;;9909:30;9975:34;9970:2;9955:18;;9948:62;-1:-1:-1;;;10041:2:16;10026:18;;10019:41;10092:3;10077:19;;9695:407::o;10467:212::-;10509:3;10547:5;10541:12;10591:6;10584:4;10577:5;10573:16;10568:3;10562:36;10653:1;10617:16;;10642:13;;;-1:-1:-1;10617:16:16;;10467:212;-1:-1:-1;10467:212:16:o;10684:595::-;11095:25;11090:3;11083:38;11065:3;11140:39;11175:2;11170:3;11166:12;11158:6;11140:39;:::i;:::-;-1:-1:-1;;;11195:2:16;11188:31;11235:38;11269:2;11265;11261:11;11253:6;11235:38;:::i;:::-;11228:45;10684:595;-1:-1:-1;;;;;10684:595:16:o;11284:127::-;11345:10;11340:3;11336:20;11333:1;11326:31;11376:4;11373:1;11366:15;11400:4;11397:1;11390:15;11542:518;11644:2;11639:3;11636:11;11633:421;;;11680:5;11677:1;11670:16;11724:4;11721:1;11711:18;11794:2;11782:10;11778:19;11775:1;11771:27;11765:4;11761:38;11830:4;11818:10;11815:20;11812:47;;;-1:-1:-1;11853:4:16;11812:47;11908:2;11903:3;11899:12;11896:1;11892:20;11886:4;11882:31;11872:41;;11963:81;11981:2;11974:5;11971:13;11963:81;;;12040:1;12026:16;;12007:1;11996:13;11963:81;;;11967:3;;11542:518;;;:::o;12236:1299::-;12362:3;12356:10;12389:18;12381:6;12378:30;12375:56;;;12411:18;;:::i;:::-;12440:97;12530:6;12490:38;12522:4;12516:11;12490:38;:::i;:::-;12484:4;12440:97;:::i;:::-;12586:4;12617:2;12606:14;;12634:1;12629:649;;;;13322:1;13339:6;13336:89;;;-1:-1:-1;13391:19:16;;;13385:26;13336:89;-1:-1:-1;;12193:1:16;12189:11;;;12185:24;12181:29;12171:40;12217:1;12213:11;;;12168:57;13438:81;;12599:930;;12629:649;11489:1;11482:14;;;11526:4;11513:18;;-1:-1:-1;;12665:20:16;;;12783:222;12797:7;12794:1;12791:14;12783:222;;;12879:19;;;12873:26;12858:42;;12986:4;12971:20;;;;12939:1;12927:14;;;;12813:12;12783:222;;;12787:3;13033:6;13024:7;13021:19;13018:201;;;13094:19;;;13088:26;-1:-1:-1;;13177:1:16;13173:14;;;13189:3;13169:24;13165:37;13161:42;13146:58;13131:74;;13018:201;-1:-1:-1;;;;13265:1:16;13249:14;;;13245:22;13232:36;;-1:-1:-1;12236:1299:16:o;14757:127::-;14818:10;14813:3;14809:20;14806:1;14799:31;14849:4;14846:1;14839:15;14873:4;14870:1;14863:15;14889:136;14928:3;14956:5;14946:39;;14965:18;;:::i;:::-;-1:-1:-1;;;15001:18:16;;14889:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1319800",
								"executionCost": "30960",
								"totalCost": "1350760"
							},
							"external": {
								"ALLOWED_TRANSFER_FROM_ROLE()": "283",
								"DEFAULT_ADMIN_ROLE()": "282",
								"GREYLIST_MANAGER_ROLE()": "260",
								"addToGreyList(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24676",
								"balanceOf(address)": "2580",
								"burn(uint256)": "50811",
								"burnFrom(address,uint256)": "77517",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "27044",
								"getRoleAdmin(bytes32)": "2531",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2695",
								"increaseAllowance(address,uint256)": "27011",
								"initialize()": "infinite",
								"isGreyListed(address)": "2580",
								"listingTimestamp()": "2401",
								"name()": "infinite",
								"removeFromGreyList(address)": "infinite",
								"renounceRole(bytes32,address)": "29064",
								"revokeRole(bytes32,address)": "infinite",
								"setListingTimestamp(uint32)": "infinite",
								"supportsInterface(bytes4)": "470",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "53356",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1646,
									"end": 1727,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1692,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1670,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1670,
									"end": 1692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1670,
									"end": 1692,
									"name": "tag",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1670,
									"end": 1692,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 16,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6109,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6109,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6140,
									"end": 6155,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 2,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "LOG1",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5939,
									"end": 6219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 3967,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d425106bd83823a2750a9a3f439963bd87ed4ec854cbbd904f169966229fa7f664736f6c634300081e0033",
									".code": [
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "A64A92A8"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "DBD192D4"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "DD62ED3E"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "E90CDD1C"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "A64A92A8"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "BD39A2A8"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "A217FDDF"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "A457C2D7"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "79CC6790"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "8129FC1C"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "39509351"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "39509351"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "42966C68"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "4E695CCA"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "6E4AF83E"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "36568ABE"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "38F5A5E4"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "248A9CA3"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "2F2FF15D"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 3967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1403,
											"end": 1580,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 3747,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3747,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3462,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2682,
											"end": 2866,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6212,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1354,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 1254,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1254,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1315,
											"end": 1354,
											"name": "PUSH",
											"source": 15,
											"value": "2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0"
										},
										{
											"begin": 1254,
											"end": 1354,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1254,
											"end": 1354,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2630,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2630,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3777,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3902,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1264,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1264,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1773,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2727,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 3132,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3192,
											"end": 3196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3223,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3240,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4098,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3479,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3479,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1360,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 3293,
											"end": 3485,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 1030,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 948,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 996,
											"end": 1030,
											"name": "PUSH",
											"source": 14,
											"value": "5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F"
										},
										{
											"begin": 948,
											"end": 1030,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 948,
											"end": 1030,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2766,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 2766,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2595,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4939,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1770,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1770,
											"end": 1841,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1822,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1841,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1770,
											"end": 1841,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1770,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 1841,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 1841,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1855,
											"end": 1880,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 2281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 2281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 1928,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1961,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 2012,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 1928,
											"end": 2012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 1981,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2012,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 1981,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 2073,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1928,
											"end": 2073,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2073,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 2032,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 2073,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 2073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2109,
											"end": 2133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2133,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 1315,
											"end": 1354,
											"name": "PUSH",
											"source": 15,
											"value": "2F26AC9AB74D35285B05B7B0D4A0F2FFDEF33823BC15863D6299DBDD56E7B6B0"
										},
										{
											"begin": 2190,
											"end": 2192,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 2154,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2193,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 2154,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2108,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AFAE8E97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 2281,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3922,
											"end": 3958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 3941,
											"end": 3945,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3947,
											"end": 3949,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3957,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3922,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 3922,
											"end": 3958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3922,
											"end": 3958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 3922,
											"end": 3958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3958,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3965,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3747,
											"end": 3965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5404,
											"end": 5408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5393,
											"end": 5418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4635,
											"end": 4665,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4701,
											"end": 4735,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4736,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4745,
											"end": 4790,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4826,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4807,
											"end": 4826,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6570,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1030,
											"name": "PUSH",
											"source": 14,
											"value": "5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 2280,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2280,
											"end": 2298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2358,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2276,
											"end": 2358,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14829857"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2347,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2276,
											"end": 2358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 2367,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2392,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2392,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4F03D75A12F5F2153536F14E57D9477EFF6BE012215A22E894DBC840DB1C8F7E"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2426,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6212,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6379,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6379,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6379,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6354,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 958,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 869,
											"end": 958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 924,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 951,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 924,
											"end": 951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 869,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1030,
											"name": "PUSH",
											"source": 14,
											"value": "5BE4D4BB045CDE5ABB3C363F9FC314C0F4F94DFFCC1C7BA61871BDB28228C55F"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 2729,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2729,
											"end": 2747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 2846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2724,
											"end": 2846,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17C33B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2792,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 2846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2724,
											"end": 2846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 2855,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 2881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2896,
											"end": 2924,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2896,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "43A926D6828BE5AECD76C987F92B63201C077E5EBF44EA16EECD0F2342BF5319"
										},
										{
											"begin": 2896,
											"end": 2924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2881,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2896,
											"end": 2924,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1264,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1340,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1340,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1402,
											"end": 1409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1396,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1773,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5303,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5304,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 16,
											"value": "2E"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5313,
											"end": 5343,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5379,
											"end": 5413,
											"name": "PUSH",
											"source": 16,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5352,
											"end": 5414,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5423,
											"end": 5467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5099,
											"end": 5509,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C76617261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414C5641"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 1824,
											"end": 1854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 1824,
											"end": 1854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1864,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 1864,
											"end": 1886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1864,
											"end": 1886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1896,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 1896,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1896,
											"end": 1928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1896,
											"end": 1928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 1896,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1945,
											"end": 1955,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1971,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1971,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 1971,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 1985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 1971,
											"end": 1985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "BEBC200"
										},
										{
											"begin": 1957,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 1957,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 1957,
											"end": 1985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 1939,
											"end": 1986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1939,
											"end": 1986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2727,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2808,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7107,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7166,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7522,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7523,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7532,
											"end": 7562,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7598,
											"end": 7632,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7571,
											"end": 7633,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7642,
											"end": 7677,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7694,
											"end": 7713,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 7694,
											"end": 7713,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7318,
											"end": 7719,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7142,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7261,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 7360,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4098,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4231,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5831,
											"end": 5835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5819,
											"end": 5845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4345,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4471,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 2766,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 2895,
											"end": 2911,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2895,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 2938,
											"end": 2954,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2938,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2938,
											"end": 2954,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2934,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2954,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2954,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2895,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 3008,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2891,
											"end": 3008,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F555EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2997,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 3008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2891,
											"end": 3008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3066,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3479,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3479,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E210431CE7E96EEF28F9095D645802317660C1411F89B4D642456F027E7C8D6"
										},
										{
											"begin": 3022,
											"end": 3066,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3066,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FB"
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3114,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7965,
											"end": 7967,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7938,
											"end": 7968,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7977,
											"end": 8039,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8048,
											"end": 8082,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8099,
											"end": 8118,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 8099,
											"end": 8118,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7724,
											"end": 8124,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10908,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8334,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8370,
											"end": 8372,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8343,
											"end": 8373,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8409,
											"end": 8443,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8382,
											"end": 8444,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8453,
											"end": 8485,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8129,
											"end": 8527,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10986,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11076,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11092,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11101,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11148,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5561,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 965,
											"end": 975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5714,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5714,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5762,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3855,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8021,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8132,
											"end": 8139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8425,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10392,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9733,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8736,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8737,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8773,
											"end": 8775,
											"name": "PUSH",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8746,
											"end": 8776,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8812,
											"end": 8846,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8785,
											"end": 8847,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8856,
											"end": 8887,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8904,
											"end": 8923,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 8904,
											"end": 8923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8532,
											"end": 8929,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9808,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9946,
											"end": 9968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9980,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10007,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9139,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9175,
											"end": 9177,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9214,
											"end": 9248,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9187,
											"end": 9249,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9258,
											"end": 9290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9307,
											"end": 9326,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 9307,
											"end": 9326,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8934,
											"end": 9332,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10148,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10253,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10263,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 11563,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11563,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11602,
											"end": 11639,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11598,
											"end": 11841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11689,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9541,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9542,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9578,
											"end": 9580,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9551,
											"end": 9581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9617,
											"end": 9648,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9590,
											"end": 9649,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9666,
											"end": 9684,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9666,
											"end": 9684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 9337,
											"end": 9690,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11655,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11781,
											"end": 11788,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11790,
											"end": 11806,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11790,
											"end": 11815,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 11765,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11765,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11526,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2139,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2139,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2264,
											"end": 2269,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2241,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 680,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 615,
											"end": 680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2509,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 2380,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2365,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 2458,
											"end": 2502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8878,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8878,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 8982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8961,
											"end": 8982,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10291,
											"end": 10312,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10321,
											"end": 10351,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10421,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10107,
											"end": 10462,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8953,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9101,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 9089,
											"end": 9101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 9089,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9266,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9347,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3648,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 3328,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH",
											"source": 14,
											"value": "FC"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3457,
											"end": 3595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3457,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 3457,
											"end": 3595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3991FCA9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3457,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 3457,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3608,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3630,
											"end": 3632,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3608,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4261,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 4444,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 4554,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4351,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4299,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2451,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2292,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2404,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2404,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 2434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2427,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2427,
											"end": 2444,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 7814,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13742,
											"end": 13744,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13781,
											"end": 13783,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 13761,
											"end": 13779,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13761,
											"end": 13779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13761,
											"end": 13779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13754,
											"end": 13784,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13820,
											"end": 13854,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13800,
											"end": 13818,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 13800,
											"end": 13818,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13800,
											"end": 13818,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13793,
											"end": 13855,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13871,
											"end": 13889,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 13871,
											"end": 13889,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13871,
											"end": 13889,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 13899,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13916,
											"end": 13935,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 13916,
											"end": 13935,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 13540,
											"end": 13941,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14148,
											"end": 14150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14130,
											"end": 14151,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "PUSH",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 14167,
											"end": 14185,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14167,
											"end": 14185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14167,
											"end": 14185,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14160,
											"end": 14190,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14226,
											"end": 14260,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14206,
											"end": 14224,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 14206,
											"end": 14224,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14206,
											"end": 14224,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14199,
											"end": 14261,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14270,
											"end": 14303,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14320,
											"end": 14339,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 14320,
											"end": 14339,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 13946,
											"end": 14345,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 7980,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14591,
											"end": 14593,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14564,
											"end": 14594,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14630,
											"end": 14664,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14610,
											"end": 14628,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 14610,
											"end": 14628,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14610,
											"end": 14628,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14603,
											"end": 14665,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14681,
											"end": 14699,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 14681,
											"end": 14699,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14681,
											"end": 14699,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14674,
											"end": 14710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14727,
											"end": 14746,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 14727,
											"end": 14746,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 14350,
											"end": 14752,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 8151,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8295,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8495,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1549,
											"end": 1574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1403,
											"end": 1580,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15232,
											"end": 15234,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15214,
											"end": 15235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15214,
											"end": 15235,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15214,
											"end": 15235,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15251,
											"end": 15269,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 15251,
											"end": 15269,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15251,
											"end": 15269,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15244,
											"end": 15274,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15310,
											"end": 15344,
											"name": "PUSH",
											"source": 16,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 15290,
											"end": 15308,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 15290,
											"end": 15308,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15290,
											"end": 15308,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15283,
											"end": 15345,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15362,
											"end": 15380,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 15362,
											"end": 15380,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 15030,
											"end": 15386,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 497,
											"end": 915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 672,
											"end": 685,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 701,
											"end": 719,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 694,
											"end": 728,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 763,
											"end": 778,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 737,
											"end": 787,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 828,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 811,
											"end": 820,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 803,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 796,
											"end": 838,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 874,
											"end": 903,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 859,
											"end": 904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 855,
											"end": 909,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 847,
											"end": 909,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 497,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 920,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1206,
											"end": 1213,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1202,
											"end": 1225,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 1266,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1295,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1719,
											"end": 1728,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1729,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 1699,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 1770,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1799,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1850,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 1818,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 1818,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1959,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1856,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1856,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2073,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2047,
											"end": 2079,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 2044,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2160,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2160,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1964,
											"end": 2190,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1964,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2590,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 2633,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2377,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2871,
											"end": 3057,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 2871,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2958,
											"end": 2981,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2954,
											"end": 2986,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3022,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3041,
											"end": 3050,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3022,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 3022,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3621,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3590,
											"end": 3622,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3658,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3658,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 3658,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3658,
											"end": 3687,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 3658,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3648,
											"end": 3687,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3648,
											"end": 3687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3706,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3706,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 3706,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3755,
											"end": 4031,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 3755,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3841,
											"end": 3864,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3837,
											"end": 3869,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3834,
											"end": 3886,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3834,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 3834,
											"end": 3886,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3834,
											"end": 3886,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 3834,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3930,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3908,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3960,
											"end": 3982,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3953,
											"end": 3958,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3950,
											"end": 3983,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3940,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3940,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4036,
											"end": 4416,
											"name": "tag",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 4036,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4179,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 4179,
											"end": 4240,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4221,
											"end": 4238,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4238,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4238,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4179,
											"end": 4240,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 4179,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4286,
											"end": 4288,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4252,
											"end": 4290,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 4249,
											"end": 4410,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 4327,
											"end": 4330,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4323,
											"end": 4343,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4344,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4367,
											"end": 4371,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4357,
											"end": 4372,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4395,
											"end": 4399,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4410,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 4249,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4410,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4036,
											"end": 4416,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4036,
											"end": 4416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4036,
											"end": 4416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4036,
											"end": 4416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4837,
											"end": 4964,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 4837,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4898,
											"end": 4908,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 4893,
											"end": 4896,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4910,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4929,
											"end": 4933,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5034,
											"end": 5043,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5034,
											"end": 5043,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5034,
											"end": 5043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5052,
											"end": 5088,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5052,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 5052,
											"end": 5088,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5068,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5645,
											"end": 5653,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5642,
											"end": 5657,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5705,
											"end": 5709,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5700,
											"end": 5703,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5696,
											"end": 5710,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5687,
											"end": 5711,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5684,
											"end": 5734,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5684,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 5684,
											"end": 5734,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5714,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5754,
											"end": 5762,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5750,
											"end": 5766,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5747,
											"end": 5796,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5747,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 5747,
											"end": 5796,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5747,
											"end": 5796,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 5747,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5861,
											"end": 5862,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 5634,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5514,
											"end": 5889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5894,
											"end": 6796,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 5894,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5981,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5963,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 5963,
											"end": 6043,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6014,
											"end": 6015,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6028,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 6028,
											"end": 6033,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5963,
											"end": 6043,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 5963,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6062,
											"end": 6066,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6052,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 6052,
											"end": 6128,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6099,
											"end": 6100,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 6113,
											"end": 6118,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6052,
											"end": 6128,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 6052,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6137,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 6137,
											"end": 6399,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 6157,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6178,
											"end": 6188,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6178,
											"end": 6188,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 6225,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 6252,
											"end": 6260,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6249,
											"end": 6266,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6289,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 6246,
											"end": 6289,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6269,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6327,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6327,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6137,
											"end": 6399,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 6137,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6137,
											"end": 6399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6483,
											"end": 6485,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6481,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6486,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "PUSH",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 6458,
											"end": 6462,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6451,
											"end": 6487,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "PUSH",
											"source": 16,
											"value": "4E"
										},
										{
											"begin": 6435,
											"end": 6443,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6432,
											"end": 6448,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6427,
											"end": 6429,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6414,
											"end": 6449,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6411,
											"end": 6488,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 6408,
											"end": 6611,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6408,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 6408,
											"end": 6611,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6520,
											"end": 6539,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6539,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6539,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6596,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 6596,
											"end": 6601,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6408,
											"end": 6611,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 6408,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 6643,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6685,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 6643,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6719,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6709,
											"end": 6728,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6707,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6729,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6694,
											"end": 6752,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6694,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6694,
											"end": 6752,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6732,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6790,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6790,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5894,
											"end": 6796,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5894,
											"end": 6796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6801,
											"end": 6941,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 6801,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6859,
											"end": 6864,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 6919,
											"end": 6927,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6915,
											"end": 6934,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6888,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 6888,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6946,
											"end": 7114,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 6946,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7028,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7028,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7028,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7067,
											"end": 7082,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7067,
											"end": 7082,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7067,
											"end": 7082,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 7088,
											"end": 7106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 10102,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 9695,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9897,
											"end": 9899,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9879,
											"end": 9900,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9879,
											"end": 9900,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9879,
											"end": 9900,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 16,
											"value": "2B"
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9909,
											"end": 9939,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9975,
											"end": 10009,
											"name": "PUSH",
											"source": 16,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 9970,
											"end": 9972,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9948,
											"end": 10010,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10041,
											"end": 10043,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10019,
											"end": 10060,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10092,
											"end": 10095,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 10077,
											"end": 10096,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10077,
											"end": 10096,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 10102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10679,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 10467,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10552,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10541,
											"end": 10553,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10591,
											"end": 10597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10584,
											"end": 10588,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10577,
											"end": 10582,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10573,
											"end": 10589,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10568,
											"end": 10571,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10562,
											"end": 10598,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10642,
											"end": 10655,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10642,
											"end": 10655,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10642,
											"end": 10655,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10679,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10467,
											"end": 10679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10684,
											"end": 11279,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 10684,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11095,
											"end": 11120,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 11090,
											"end": 11093,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11083,
											"end": 11121,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 11175,
											"end": 11177,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 11170,
											"end": 11173,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11166,
											"end": 11178,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11140,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 11140,
											"end": 11179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11140,
											"end": 11179,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 11140,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11195,
											"end": 11197,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11188,
											"end": 11219,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11235,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 11269,
											"end": 11271,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 11265,
											"end": 11267,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11261,
											"end": 11272,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11253,
											"end": 11259,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11235,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 11235,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11235,
											"end": 11273,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 11235,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11228,
											"end": 11273,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 10684,
											"end": 11279,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10684,
											"end": 11279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11284,
											"end": 11411,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 11284,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11345,
											"end": 11355,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 11340,
											"end": 11343,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 11336,
											"end": 11356,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 11333,
											"end": 11334,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11357,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11376,
											"end": 11380,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11366,
											"end": 11381,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11400,
											"end": 11404,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11397,
											"end": 11398,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11390,
											"end": 11405,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11542,
											"end": 12060,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 11542,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11639,
											"end": 11642,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11636,
											"end": 11647,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11633,
											"end": 12054,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11633,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 11633,
											"end": 12054,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11680,
											"end": 11685,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 11678,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11686,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11724,
											"end": 11728,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11721,
											"end": 11722,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11729,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 11794,
											"end": 11796,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11782,
											"end": 11792,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11775,
											"end": 11776,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 11771,
											"end": 11798,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11761,
											"end": 11799,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11830,
											"end": 11834,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11818,
											"end": 11828,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 11812,
											"end": 11859,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11812,
											"end": 11859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 11812,
											"end": 11859,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11812,
											"end": 11859,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 11812,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 11910,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11903,
											"end": 11906,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11899,
											"end": 11911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11896,
											"end": 11897,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 11886,
											"end": 11890,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11882,
											"end": 11913,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11872,
											"end": 11913,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11872,
											"end": 11913,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11981,
											"end": 11983,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11974,
											"end": 11979,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11971,
											"end": 11984,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12040,
											"end": 12041,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12042,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12026,
											"end": 12042,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 11996,
											"end": 12009,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 11963,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11542,
											"end": 12060,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11542,
											"end": 12060,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11542,
											"end": 12060,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11542,
											"end": 12060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12236,
											"end": 13535,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 12236,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12362,
											"end": 12365,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12356,
											"end": 12366,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12381,
											"end": 12387,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12378,
											"end": 12408,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12375,
											"end": 12431,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12375,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 12375,
											"end": 12431,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 12411,
											"end": 12429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12440,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 12530,
											"end": 12536,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12490,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 12522,
											"end": 12526,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12516,
											"end": 12527,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 12490,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 12490,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12490,
											"end": 12528,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 12490,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12484,
											"end": 12488,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12440,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 12440,
											"end": 12537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12440,
											"end": 12537,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 12440,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12586,
											"end": 12590,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 12606,
											"end": 12620,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12606,
											"end": 12620,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12634,
											"end": 12635,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13322,
											"end": 13323,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13339,
											"end": 13345,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13336,
											"end": 13425,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13336,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 13336,
											"end": 13425,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13385,
											"end": 13411,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13336,
											"end": 13425,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 13336,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 12189,
											"end": 12200,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12189,
											"end": 12200,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12189,
											"end": 12200,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12185,
											"end": 12209,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 12181,
											"end": 12210,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 12171,
											"end": 12211,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12213,
											"end": 12224,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12213,
											"end": 12224,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12213,
											"end": 12224,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12168,
											"end": 12225,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 13438,
											"end": 13519,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13438,
											"end": 13519,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 12599,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 12599,
											"end": 13529,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 12629,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11489,
											"end": 11490,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11496,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11482,
											"end": 11496,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11482,
											"end": 11496,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12665,
											"end": 12685,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12665,
											"end": 12685,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12665,
											"end": 12685,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12797,
											"end": 12804,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12791,
											"end": 12805,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12879,
											"end": 12898,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12879,
											"end": 12898,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12879,
											"end": 12898,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12899,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12858,
											"end": 12900,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12858,
											"end": 12900,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12990,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12971,
											"end": 12991,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12971,
											"end": 12991,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12971,
											"end": 12991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12971,
											"end": 12991,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12927,
											"end": 12941,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12927,
											"end": 12941,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12927,
											"end": 12941,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12927,
											"end": 12941,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12813,
											"end": 12825,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 12783,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12787,
											"end": 12790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13033,
											"end": 13039,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13024,
											"end": 13031,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13021,
											"end": 13040,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13219,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 13018,
											"end": 13219,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13088,
											"end": 13114,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13177,
											"end": 13178,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 13173,
											"end": 13187,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13187,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13187,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 13189,
											"end": 13192,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 13169,
											"end": 13193,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13165,
											"end": 13202,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 13161,
											"end": 13203,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 13146,
											"end": 13204,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13131,
											"end": 13205,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13131,
											"end": 13205,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13219,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 13018,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13265,
											"end": 13266,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13249,
											"end": 13263,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13249,
											"end": 13263,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13249,
											"end": 13263,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 13245,
											"end": 13267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13232,
											"end": 13268,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13232,
											"end": 13268,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 13535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14884,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 14757,
											"end": 14884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14818,
											"end": 14828,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 14813,
											"end": 14816,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 14806,
											"end": 14807,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14830,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14849,
											"end": 14853,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 14846,
											"end": 14847,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14873,
											"end": 14877,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14878,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14889,
											"end": 15025,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 14889,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14928,
											"end": 14931,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14956,
											"end": 14961,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14946,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 14946,
											"end": 14985,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 14965,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 14965,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 14983,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 14965,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15001,
											"end": 15019,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15001,
											"end": 15019,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14889,
											"end": 15025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/tokens/Alvara.sol",
								"contracts/utils/WithSupervisedTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ALLOWED_TRANSFER_FROM_ROLE()": "4e695cca",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GREYLIST_MANAGER_ROLE()": "dbd192d4",
							"addToGreyList(address)": "38f5a5e4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"isGreyListed(address)": "a64a92a8",
							"listingTimestamp()": "bd39a2a8",
							"name()": "06fdde03",
							"removeFromGreyList(address)": "6e4af83e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setListingTimestamp(uint32)": "e90cdd1c",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ActionRestricted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressAlreadyGreylisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressNotInGreyList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupervisedTranferFrom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyListed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"GreyListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"ListingTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemovedFromGreyList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOWED_TRANSFER_FROM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GREYLIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToGreyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isGreyListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromGreyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"setListingTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ActionRestricted()\":[{\"details\":\"Whenever an action is performed that is restricted, this error will be shown\"}],\"AddressAlreadyGreylisted()\":[{\"details\":\"Error displayed when address is already greylisted\"}],\"AddressNotInGreyList()\":[{\"details\":\"Error displayed when an address is not in grey list and function tries to remove it \"}],\"SupervisedTranferFrom()\":[{\"details\":\"Used before listing if not allowed transferFrom occurs.\"}],\"TokenAlreadyListed()\":[{\"details\":\"Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"GreyListed(address)\":{\"details\":\"Emitted when an address is added to the grey list.\",\"params\":{\"account\":\"The address that has been greylisted.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ListingTimestampUpdated(uint32)\":{\"params\":{\"newListingTimestamp\":\"the value of the new listing timestamp\"}},\"RemovedFromGreyList(address)\":{\"details\":\"Emitted when an address is removed from the grey list.\",\"params\":{\"account\":\"The address that has been removed from the grey list.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addToGreyList(address)\":{\"details\":\"Adds a wallet address to the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\",\"params\":{\"account\":\"The address to be added to the grey list.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Constructor will disable initializers.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Initializer\"},\"isGreyListed(address)\":{\"details\":\"Checks if an address is a part of grey list.\",\"params\":{\"account\":\"The address to be checked.\"},\"returns\":{\"_0\":\"true if the address is on the grey list, false otherwise.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeFromGreyList(address)\":{\"details\":\"Removes an address from the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\",\"params\":{\"account\":\"The address to be removed from the grey list.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setListingTimestamp(uint32)\":{\"params\":{\"newListingTimestamp\":\"epoch time of when the token is listed on DEX\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Public Transfer From method including supervised transfer control\"}},\"stateVariables\":{\"GREYLIST_MANAGER_ROLE\":{\"details\":\"Define role for managing the grey list\"},\"_greyList\":{\"details\":\"Mapping to keep track of greylisted wallet addresses\"}},\"version\":1},\"userdoc\":{\"events\":{\"ListingTimestampUpdated(uint32)\":{\"notice\":\"Called every time the listing timestamp is updated for easy off-chain tracking.\"}},\"kind\":\"user\",\"methods\":{\"setListingTimestamp(uint32)\":{\"notice\":\"Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/Alvara.sol\":\"Alvara\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/tokens/Alvara.sol\":{\"keccak256\":\"0xd310edbd808af986864d050adb3fa9db88ab152d137a707714fe5936acc5e5a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e8444cd8bffa9ed4c02092636b992c0f2cdc81305ea9d61f13fdcd78756f8e\",\"dweb:/ipfs/QmfQchyhMASEUepw6XuBqL4yF3Lrh65qTLVi93eUb7RSz4\"]},\"contracts/utils/WithSupervisedTransfers.sol\":{\"keccak256\":\"0x492b924054f4ec02c8b3411195dfd1ebad541f37342d4f54b77c4580f37b48a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8c9c69ebcf67dcc98a448dfde076710f501ccb11a2c94bf1039e101be61cfc3\",\"dweb:/ipfs/QmSHxceETV4EQrV56cBoB2NYPEFxricEE26o2pMYSJupBh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 598,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 604,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 606,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 608,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 610,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1190,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1333,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2013,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_roles",
								"offset": 0,
								"slot": "201",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "__gap",
								"offset": 0,
								"slot": "202",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3227,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "listingTimestamp",
								"offset": 0,
								"slot": "251",
								"type": "t_uint32"
							},
							{
								"astId": 3031,
								"contract": "contracts/tokens/Alvara.sol:Alvara",
								"label": "_greyList",
								"offset": 0,
								"slot": "252",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "contracts/tokens/Alvara.sol:Alvara",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "contracts/tokens/Alvara.sol:Alvara",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ListingTimestampUpdated(uint32)": {
								"notice": "Called every time the listing timestamp is updated for easy off-chain tracking."
							}
						},
						"kind": "user",
						"methods": {
							"setListingTimestamp(uint32)": {
								"notice": "Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/utils/WithSupervisedTransfers.sol": {
				"WithSupervisedTransfers": {
					"abi": [
						{
							"inputs": [],
							"name": "SupervisedTranferFrom",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyListed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "ListingTimestampUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALLOWED_TRANSFER_FROM_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingTimestamp",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "newListingTimestamp",
									"type": "uint32"
								}
							],
							"name": "setListingTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SupervisedTranferFrom()": [
								{
									"details": "Used before listing if not allowed transferFrom occurs."
								}
							],
							"TokenAlreadyListed()": [
								{
									"details": "Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again."
								}
							]
						},
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"ListingTimestampUpdated(uint32)": {
								"params": {
									"newListingTimestamp": "the value of the new listing timestamp"
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setListingTimestamp(uint32)": {
								"params": {
									"newListingTimestamp": "epoch time of when the token is listed on DEX"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ALLOWED_TRANSFER_FROM_ROLE()": "4e695cca",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"listingTimestamp()": "bd39a2a8",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setListingTimestamp(uint32)": "e90cdd1c",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SupervisedTranferFrom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyListed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"ListingTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOWED_TRANSFER_FROM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newListingTimestamp\",\"type\":\"uint32\"}],\"name\":\"setListingTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SupervisedTranferFrom()\":[{\"details\":\"Used before listing if not allowed transferFrom occurs.\"}],\"TokenAlreadyListed()\":[{\"details\":\"Once the listingTimestamp passes (which disables supervised transfers) it can never be set again. This ensures once supervised transfers are disabled, they can never be enabled again.\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ListingTimestampUpdated(uint32)\":{\"params\":{\"newListingTimestamp\":\"the value of the new listing timestamp\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setListingTimestamp(uint32)\":{\"params\":{\"newListingTimestamp\":\"epoch time of when the token is listed on DEX\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ListingTimestampUpdated(uint32)\":{\"notice\":\"Called every time the listing timestamp is updated for easy off-chain tracking.\"}},\"kind\":\"user\",\"methods\":{\"setListingTimestamp(uint32)\":{\"notice\":\"Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again.\"}},\"notice\":\"Supervised transfers allow the admin to whitelist addresses who\\u2019re allowed to receive the token using transferFrom method. The admin can also specify listing timestamp. After the token listing, anyone can tranferFrom without any restrictions forever. Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/WithSupervisedTransfers.sol\":\"WithSupervisedTransfers\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/utils/WithSupervisedTransfers.sol\":{\"keccak256\":\"0x492b924054f4ec02c8b3411195dfd1ebad541f37342d4f54b77c4580f37b48a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8c9c69ebcf67dcc98a448dfde076710f501ccb11a2c94bf1039e101be61cfc3\",\"dweb:/ipfs/QmSHxceETV4EQrV56cBoB2NYPEFxricEE26o2pMYSJupBh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1739,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2013,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3227,
								"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
								"label": "listingTimestamp",
								"offset": 0,
								"slot": "151",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "contracts/utils/WithSupervisedTransfers.sol:WithSupervisedTransfers",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ListingTimestampUpdated(uint32)": {
								"notice": "Called every time the listing timestamp is updated for easy off-chain tracking."
							}
						},
						"kind": "user",
						"methods": {
							"setListingTimestamp(uint32)": {
								"notice": "Allows the admin to specify when the token should become tradeable. Once the token is tradeable, transferFrom can never be supervised again."
							}
						},
						"notice": "Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method. The admin can also specify listing timestamp. After the token listing, anyone can tranferFrom without any restrictions forever. Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"ContextUpgradeable": [
							1740
						],
						"ERC165Upgradeable": [
							2014
						],
						"IAccessControlUpgradeable": [
							409
						],
						"IERC165Upgradeable": [
							2026
						],
						"Initializable": [
							578
						],
						"MathUpgradeable": [
							2892
						],
						"SignedMathUpgradeable": [
							2997
						],
						"StringsUpgradeable": [
							1969
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 410,
							"src": "133:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1741,
							"src": "175:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1970,
							"src": "217:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 2015,
							"src": "259:54:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 579,
							"src": "314:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "322:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Initializable",
										"nameLocations": [
											"2086:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "2086:13:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2086:13:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2101:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1740,
										"src": "2101:18:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2101:18:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2121:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "2121:25:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2121:25:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2148:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2014,
										"src": "2148:17:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2148:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "379:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336,
								2014,
								2026,
								409,
								1740,
								578
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2058:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2223:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2198:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2198:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2248:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2240:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2240:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2179:8:0",
									"nodeType": "StructDefinition",
									"scope": 336,
									"src": "2172:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2307:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2278:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2270:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "RoleData",
												"nameLocations": [
													"2289:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "2289:8:0"
											},
											"referencedDeclaration": 23,
											"src": "2289:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$23_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 31,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2344:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2320:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2320:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "2788:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 36,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 108,
														"src": "2798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "2798:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "2824:1:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "2376:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 42,
									"name": "onlyRole",
									"nameLocation": "2765:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2782:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:14:0"
									},
									"src": "2756:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2896:7:0",
										"statements": []
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 45,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 44,
												"name": "onlyInitializing",
												"nameLocations": [
													"2879:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2879:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2879:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2847:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:0"
									},
									"scope": 336,
									"src": "2838:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2977:7:0",
										"statements": []
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 50,
												"name": "onlyInitializing",
												"nameLocations": [
													"2960:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2960:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2960:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2918:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2948:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:0:0"
									},
									"scope": 336,
									"src": "2909:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2008
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "3141:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 63,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 65,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3178:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 64,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3173:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$409",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3205:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3173:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3158:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "3244:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$336_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2008,
															"src": "3220:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3158:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 62,
												"id": 74,
												"nodeType": "Return",
												"src": "3151:105:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2989:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3059:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3117:8:0"
									},
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3084:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3077:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 56,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:20:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:6:0"
									},
									"scope": 336,
									"src": "3050:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										376
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "3442:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 87,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "3459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"id": 88,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3459:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "3459:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 92,
													"indexExpression": {
														"id": 91,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3459:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 86,
												"id": 93,
												"nodeType": "Return",
												"src": "3452:36:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3269:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3359:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3418:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:6:0"
									},
									"scope": 336,
									"src": "3350:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3845:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "3866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 103,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "3872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3872:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 147,
														"src": "3855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3855:30:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3501:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:14:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:0:0"
									},
									"scope": 336,
									"src": "3789:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4246:428:0",
										"statements": [
											{
												"condition": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4260:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 117,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4269:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 116,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4261:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "4256:412:0",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "4285:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4393:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 129,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 113,
																								"src": "4475:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 127,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1969,
																								"src": "4444:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1969_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 128,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4463:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1943,
																							"src": "4444:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4444:39:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4509:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 136,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 111,
																										"src": "4593:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 135,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4585:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 134,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4585:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 137,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4585:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4600:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 132,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1969,
																								"src": "4554:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1969_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4573:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1923,
																							"src": "4554:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4554:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 124,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4351:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4355:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4351:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4351:274:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 122,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4323:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4323:320:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 121,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:358:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "4299:358:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3898:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4182:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:31:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4246:0:0"
									},
									"scope": 336,
									"src": "4173:501:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										384
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4938:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 156,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "4955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$23_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4968:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "4955:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 155,
												"id": 160,
												"nodeType": "Return",
												"src": "4948:29:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4680:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4864:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4911:8:0"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:14:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:9:0"
									},
									"scope": 336,
									"src": "4855:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5383:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "5393:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4990:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 172,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 171,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 170,
												"name": "onlyRole",
												"nameLocations": [
													"5354:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5354:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5354:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5289:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5345:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:31:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 336,
									"src": "5280:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5809:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5819:26:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5431:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 191,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5789:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "onlyRole",
												"nameLocations": [
													"5780:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5780:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5780:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5714:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:0"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5725:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:31:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:0"
									},
									"scope": 336,
									"src": "5705:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "6466:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "6495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6495:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6484:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6509:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "6476:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 221,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "6570:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6570:26:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5858:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6398:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6457:8:0"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:31:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:0"
									},
									"scope": 336,
									"src": "6389:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "7366:25:0"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6609:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7297:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7316:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:31:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7356:0:0"
									},
									"scope": 336,
									"src": "7288:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7596:174:0",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7614:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "7606:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 247,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"arguments": [
														{
															"id": 250,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 249,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7634:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7606:46:0"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 253,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "7662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 255,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "7669:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7662:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7675:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "7662:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7687:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7662:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "7662:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 261,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 262,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7734:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "7753:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 260,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7711:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "7706:57:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7404:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7532:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7545:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:0"
									},
									"scope": 336,
									"src": "7523:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "8006:165:0",
										"statements": [
											{
												"condition": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8020:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8029:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 277,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 275,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "8021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "8016:149:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "8045:120:0",
													"statements": [
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 280,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 282,
																			"indexExpression": {
																				"id": 281,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 270,
																				"src": "8066:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8059:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8072:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8059:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8059:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8091:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8059:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "8059:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 290,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "8126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1717,
																			"src": "8141:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8141:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 289,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "8114:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8114:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 295,
															"nodeType": "EmitStatement",
															"src": "8109:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "7776:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7947:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:31:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8006:0:0"
									},
									"scope": 336,
									"src": "7938:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "8411:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 308,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 309,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "8439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 307,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "8425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "8421:149:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8449:121:0",
													"statements": [
														{
															"expression": {
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 311,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8463:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 313,
																			"indexExpression": {
																				"id": 312,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 302,
																				"src": "8470:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8463:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8476:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8463:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 316,
																	"indexExpression": {
																		"id": 315,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8463:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8463:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "8463:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "8531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 322,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 323,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1717,
																			"src": "8546:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8546:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8519:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8519:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "EmitStatement",
															"src": "8514:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "8177:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8351:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8363:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8362:31:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8411:0:0"
									},
									"scope": 336,
									"src": "8342:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "8582:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 335,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8861:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "8841:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 334,
										"length": {
											"hexValue": "3439",
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8849:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8841:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 337,
							"src": "2040:6829:0",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								424
							]
						}
					],
					"src": "108:8762:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 339,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 348,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "571:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "593:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "628:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:1"
									},
									"src": "548:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 357,
									"name": "RoleGranted",
									"nameLocation": "887:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "899:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "921:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "946:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:1"
									},
									"src": "881:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 366,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1296:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1321:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:1"
									},
									"src": "1256:89:1"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 409,
									"src": "1432:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1726:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1763:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:1"
									},
									"scope": 409,
									"src": "1704:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2055:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:1"
									},
									"scope": 409,
									"src": "2022:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2335:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:1"
									},
									"scope": 409,
									"src": "2315:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:1"
									},
									"scope": 409,
									"src": "2866:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 410,
							"src": "209:2721:1",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366
							]
						}
					],
					"src": "94:2837:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1689
						],
						"Initializable": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 1690,
							"src": "138:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Initializable",
							"nameLocation": "2412:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:2",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 416,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "2546:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 415,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:2",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 419,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "2675:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 418,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 424,
									"name": "Initialized",
									"nameLocation": "2809:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2821:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 421,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:2"
									},
									"src": "2803:33:2"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3269:483:2",
										"statements": [
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "3279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 427,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:2",
													"subExpression": {
														"id": 429,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3302:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 428,
																			"src": "3347:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 434,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "3365:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:2",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 443,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$578",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$578",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 441,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 439,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1689,
																						"src": "3388:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1689_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:2",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1377,
																					"src": "3388:29:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "3436:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:2"
											},
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3536:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:2"
											},
											{
												"condition": {
													"id": 460,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "3566:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 466,
												"nodeType": "IfStatement",
												"src": "3562:65:2",
												"trueBody": {
													"id": 465,
													"nodeType": "Block",
													"src": "3582:45:2",
													"statements": [
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 461,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3596:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:2"
														}
													]
												}
											},
											{
												"id": 467,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:2"
											},
											{
												"condition": {
													"id": 468,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "3651:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "3647:99:2",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "3667:79:2",
													"statements": [
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 469,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3681:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 473,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3721:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "EmitStatement",
															"src": "3716:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 480,
									"name": "initializer",
									"nameLocation": "3255:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:2"
									},
									"src": "3246:506:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4863:255:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:2",
																"subExpression": {
																	"id": 486,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "4882:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "4899:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 489,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:2"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 495,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "4982:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "4997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:2"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "5014:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:2"
											},
											{
												"id": 503,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:2"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "5055:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 509,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5103:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 508,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "5091:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "EmitStatement",
												"src": "5086:25:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 513,
									"name": "reinitializer",
									"nameLocation": "4834:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4848:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:2"
									},
									"src": "4825:293:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5356:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5374:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:2"
											},
											{
												"id": 521,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:2"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 523,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:2"
									},
									"src": "5328:125:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5988:231:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:2",
															"subExpression": {
																"id": 528,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "6007:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 533,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6078:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 534,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 557,
												"nodeType": "IfStatement",
												"src": "6074:139:2",
												"trueBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "6111:102:2",
													"statements": [
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 540,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "6125:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 542,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 541,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 550,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 549,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 548,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "6174:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 555,
															"nodeType": "EmitStatement",
															"src": "6169:33:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:2"
									},
									"scope": 578,
									"src": "5939:280:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "6393:36:2",
										"statements": [
											{
												"expression": {
													"id": 565,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 416,
													"src": "6410:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 564,
												"id": 566,
												"nodeType": "Return",
												"src": "6403:19:2"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6386:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 562,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:2"
									},
									"scope": 578,
									"src": "6329:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6601:37:2",
										"statements": [
											{
												"expression": {
													"id": 574,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "6618:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 575,
												"nodeType": "Return",
												"src": "6611:20:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6595:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:2"
									},
									"scope": 578,
									"src": "6545:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "2394:4246:2",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "113:6528:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1740
						],
						"ERC20Upgradeable": [
							1191
						],
						"IERC20MetadataUpgradeable": [
							1359
						],
						"IERC20Upgradeable": [
							1269
						],
						"Initializable": [
							578
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 1270,
							"src": "130:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
							"file": "./extensions/IERC20MetadataUpgradeable.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 1360,
							"src": "164:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 1741,
							"src": "217:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 579,
							"src": "262:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 584,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "270:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 587,
										"name": "Initializable",
										"nameLocations": [
											"1661:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "1661:13:3"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "1661:13:3"
								},
								{
									"baseName": {
										"id": 589,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1676:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1740,
										"src": "1676:18:3"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "1676:18:3"
								},
								{
									"baseName": {
										"id": 591,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"1696:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1269,
										"src": "1696:17:3"
									},
									"id": 592,
									"nodeType": "InheritanceSpecifier",
									"src": "1696:17:3"
								},
								{
									"baseName": {
										"id": 593,
										"name": "IERC20MetadataUpgradeable",
										"nameLocations": [
											"1715:25:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "1715:25:3"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "1715:25:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 586,
								"nodeType": "StructuredDocumentation",
								"src": "330:1301:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								1359,
								1269,
								1740,
								578
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1641:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 598,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1783:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1747:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 597,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 595,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1755:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1747:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 596,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1766:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 604,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1855:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1799:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 603,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 599,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1807:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1799:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 602,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 600,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1826:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1818:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 601,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1837:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 606,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1889:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1873:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 605,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1873:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 608,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1923:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1908:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 607,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1908:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 610,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1949:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1934:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 609,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1934:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "2231:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2264:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 622,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "2271:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 620,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2241:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "2241:38:3"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1963:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 617,
												"name": "onlyInitializing",
												"nameLocations": [
													"2214:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2214:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2214:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2148:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2175:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2161:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2161:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2196:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2182:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2182:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:44:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:3"
									},
									"scope": 1191,
									"src": "2139:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "2394:57:3",
										"statements": [
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 635,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2404:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 636,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2412:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2404:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "2404:13:3"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 639,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "2427:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 640,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2437:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2427:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2427:17:3"
											}
										]
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 632,
												"name": "onlyInitializing",
												"nameLocations": [
													"2377:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2377:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2377:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2301:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2338:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2324:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2324:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2359:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2345:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2345:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:44:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:0:3"
									},
									"scope": 1191,
									"src": "2292:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "2585:29:3",
										"statements": [
											{
												"expression": {
													"id": 651,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "2602:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 650,
												"id": 652,
												"nodeType": "Return",
												"src": "2595:12:3"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "2457:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2525:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 647,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2552:8:3"
									},
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2529:2:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2570:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2570:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:15:3"
									},
									"scope": 1191,
									"src": "2516:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2798:31:3",
										"statements": [
											{
												"expression": {
													"id": 661,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 610,
													"src": "2815:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 660,
												"id": 662,
												"nodeType": "Return",
												"src": "2808:14:3"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2620:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2736:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 657,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2765:8:3"
									},
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2742:2:3"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2783:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:15:3"
									},
									"scope": 1191,
									"src": "2727:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3527:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3544:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "3537:9:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2835:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3471:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3502:8:3"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:2:3"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3520:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 668,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3520:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:7:3"
									},
									"scope": 1191,
									"src": "3462:91:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1218
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3683:36:3",
										"statements": [
											{
												"expression": {
													"id": 681,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 606,
													"src": "3700:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "3693:19:3"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "3559:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3622:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3656:8:3"
									},
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:2:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3674:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3673:9:3"
									},
									"scope": 1191,
									"src": "3613:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1226
									],
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "3860:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 693,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3877:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 695,
													"indexExpression": {
														"id": 694,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "3887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3877:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 692,
												"id": 696,
												"nodeType": "Return",
												"src": "3870:25:3"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "3725:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3786:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3833:8:3"
									},
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3804:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3796:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3796:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:17:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3851:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:3"
									},
									"scope": 1191,
									"src": "3777:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1236
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4183:104:3",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4201:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4193:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4193:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 711,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "4209:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4193:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4241:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4248:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "4252:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4231:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4231:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "4231:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4276:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 708,
												"id": 721,
												"nodeType": "Return",
												"src": "4269:11:3"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "3908:185:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4107:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4159:8:3"
									},
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4124:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4116:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4136:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4128:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:28:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4177:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4177:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4176:6:3"
									},
									"scope": 1191,
									"src": "4098:189:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1246
									],
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "4443:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 734,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4460:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4472:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4460:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 738,
													"indexExpression": {
														"id": 737,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4479:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4460:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 739,
												"nodeType": "Return",
												"src": "4453:34:3"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4293:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4354:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4416:8:3"
									},
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4372:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4364:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4387:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4379:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4363:32:3"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4434:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:9:3"
									},
									"scope": 1191,
									"src": "4345:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1256
									],
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "4891:108:3",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4909:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "4901:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 752,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4901:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 754,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "4917:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4901:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4948:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4955:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4964:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4939:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "4939:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4988:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 751,
												"id": 764,
												"nodeType": "Return",
												"src": "4981:11:3"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "4500:297:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4811:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4867:8:3"
									},
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4827:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4819:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4844:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4836:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4818:33:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4885:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:3"
									},
									"scope": 1191,
									"src": "4802:197:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "5664:153:3",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5682:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5674:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 779,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5674:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 781,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "5692:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5692:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5674:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "5730:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "5736:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5745:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "5714:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5714:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "5714:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "5772:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5778:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5782:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "5762:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "5762:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 778,
												"id": 797,
												"nodeType": "Return",
												"src": "5799:11:3"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "5005:551:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5570:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5640:8:3"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5591:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5583:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5605:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5597:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5617:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5609:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:42:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5658:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5658:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5657:6:3"
									},
									"scope": 1191,
									"src": "5561:256:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "6306:140:3",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6324:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "6316:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 809,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6316:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 811,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "6332:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6332:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6316:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "6363:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "6370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 818,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "6389:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "6396:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 817,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "6379:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6379:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 821,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "6407:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6379:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "6354:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6354:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "6354:64:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6435:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 808,
												"id": 826,
												"nodeType": "Return",
												"src": "6428:11:3"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "5823:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6247:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "6239:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6264:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "6256:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6238:37:3"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "6300:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6300:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:6:3"
									},
									"scope": 1191,
									"src": "6212:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "7032:328:3",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7050:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "7042:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 838,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7042:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "7058:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7058:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7042:28:3"
											},
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7088:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "7080:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7080:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "7117:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7124:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "7107:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7107:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7080:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "7150:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 852,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "7170:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7150:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7187:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7142:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "7142:85:3"
											},
											{
												"id": 865,
												"nodeType": "UncheckedBlock",
												"src": "7237:95:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 858,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "7270:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 859,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "7277:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 860,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "7286:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 861,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "7305:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7286:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 857,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "7261:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7261:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 864,
														"nodeType": "ExpressionStatement",
														"src": "7261:60:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7349:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 837,
												"id": 867,
												"nodeType": "Return",
												"src": "7342:11:3"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "6452:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6942:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6960:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6985:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6977:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6959:42:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7026:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7026:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7025:6:3"
									},
									"scope": 1191,
									"src": "6933:427:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "7892:710:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "7910:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7926:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7918:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 881,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7918:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7918:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7910:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7930:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7902:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7902:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "7902:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "7988:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8002:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7994:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 891,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7994:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7994:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7988:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8006:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7980:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7980:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "7980:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "8076:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8082:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "8086:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 899,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8055:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "8055:38:3"
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8112:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "8104:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"baseExpression": {
														"id": 907,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8126:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 909,
													"indexExpression": {
														"id": 908,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "8136:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8126:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8104:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 912,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "8159:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 913,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8174:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8159:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8182:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8151:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8151:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "8151:72:3"
											},
											{
												"id": 932,
												"nodeType": "UncheckedBlock",
												"src": "8233:273:3",
												"statements": [
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 918,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "8257:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 920,
																"indexExpression": {
																	"id": 919,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "8267:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8257:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 921,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "8275:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 922,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "8289:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8275:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8257:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "8257:38:3"
													},
													{
														"expression": {
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 926,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "8472:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 928,
																"indexExpression": {
																	"id": 927,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "8482:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8472:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 929,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8489:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8472:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 931,
														"nodeType": "ExpressionStatement",
														"src": "8472:23:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "8530:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8536:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "8540:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 933,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "8521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8521:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "EmitStatement",
												"src": "8516:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "8578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8584:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "8588:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 939,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "8558:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8558:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "8558:37:3"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "7366:443:3",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7823:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7841:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "7833:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7833:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7855:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "7847:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7867:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "7859:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:42:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7892:0:3"
									},
									"scope": 1191,
									"src": "7814:788:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "8943:470:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 955,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "8961:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8980:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8972:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 956,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8972:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8972:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8961:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8984:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8953:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8953:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "8953:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9058:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9050:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9050:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9050:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "9062:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "9071:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 964,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9029:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "9029:49:3"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "9089:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 974,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "9105:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9089:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "9089:22:3"
											},
											{
												"id": 983,
												"nodeType": "UncheckedBlock",
												"src": "9121:175:3",
												"statements": [
													{
														"expression": {
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 977,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "9257:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 979,
																"indexExpression": {
																	"id": 978,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "9267:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9257:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 980,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "9279:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9257:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 982,
														"nodeType": "ExpressionStatement",
														"src": "9257:28:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9327:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9319:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9319:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9319:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "9331:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "9340:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 984,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "9310:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9310:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "EmitStatement",
												"src": "9305:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9386:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9378:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9378:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9378:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "9390:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "9399:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "9358:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9358:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "9358:48:3"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "8608:265:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8887:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8901:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "8893:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8918:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "8910:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8892:33:3"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8943:0:3"
									},
									"scope": 1191,
									"src": "8878:535:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "9798:594:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "9816:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9835:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9827:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1013,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9827:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9827:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9816:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9839:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9808:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "9808:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "9907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9924:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9916:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1023,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9916:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9916:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "9928:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9886:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9886:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "9886:49:3"
											},
											{
												"assignments": [
													1031
												],
												"declarations": [
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9954:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "9946:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9946:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"baseExpression": {
														"id": 1032,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9971:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1034,
													"indexExpression": {
														"id": 1033,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "9981:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9971:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9946:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "10007:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1038,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "10025:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10007:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10033:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9999:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9999:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "9999:71:3"
											},
											{
												"id": 1055,
												"nodeType": "UncheckedBlock",
												"src": "10080:194:3",
												"statements": [
													{
														"expression": {
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1043,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "10104:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1045,
																"indexExpression": {
																	"id": 1044,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "10114:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10104:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1046,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "10125:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1047,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "10142:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10125:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10104:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "10104:44:3"
													},
													{
														"expression": {
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1051,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "10241:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1052,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "10257:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10241:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1054,
														"nodeType": "ExpressionStatement",
														"src": "10241:22:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1057,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "10298:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10307:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "10319:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1056,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "10289:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10289:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "EmitStatement",
												"src": "10284:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "10357:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10374:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10366:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10366:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10366:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "10378:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1065,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "10337:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10337:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "10337:48:3"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "9419:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9742:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9756:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "9748:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9773:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "9765:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9747:33:3"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9798:0:3"
									},
									"scope": 1191,
									"src": "9733:659:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "10898:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "10916:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10933:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10925:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10925:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10925:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10916:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10937:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10908:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10908:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "10908:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "10994:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11013:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11005:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11005:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11005:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10994:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11017:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10986:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10986:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "10986:68:3"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1105,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "11065:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1108,
															"indexExpression": {
																"id": 1106,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "11077:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11065:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"id": 1107,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "11084:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11065:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "11095:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11065:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "11065:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1114,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "11125:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "11132:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "11141:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "11116:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11116:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "11111:37:3"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "10398:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10824:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10841:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "10833:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10833:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10856:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "10848:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10873:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "10865:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10865:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10832:48:3"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10898:0:3"
									},
									"scope": 1191,
									"src": "10815:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "11526:321:3",
										"statements": [
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11544:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "11536:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11536:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"arguments": [
														{
															"id": 1133,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "11573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "11580:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1132,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "11563:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11563:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11536:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "11602:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11627:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1139,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11627:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1138,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11622:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11622:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11636:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11622:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11602:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "11598:243:3",
												"trueBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "11641:200:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1145,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "11663:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1146,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "11683:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11663:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11691:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1144,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11655:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1150,
															"nodeType": "ExpressionStatement",
															"src": "11655:68:3"
														},
														{
															"id": 1159,
															"nodeType": "UncheckedBlock",
															"src": "11737:94:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1152,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "11774:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1153,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "11781:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1154,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "11790:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1155,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "11809:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11790:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1151,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "11765:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11765:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "11765:51:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "11161:270:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11445:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11469:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11461:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11484:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11476:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11501:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11493:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11460:48:3"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11526:0:3"
									},
									"scope": 1191,
									"src": "11436:411:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "12520:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "11853:573:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12440:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12469:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12461:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12483:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12475:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12495:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12487:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12460:42:3"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12520:0:3"
									},
									"scope": 1191,
									"src": "12431:91:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "13198:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "12528:577:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13119:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13147:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "13139:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13161:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "13153:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13173:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "13165:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13138:42:3"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:3"
									},
									"scope": 1191,
									"src": "13110:90:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "13206:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1190,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "13485:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "13465:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 1187,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13465:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1189,
										"length": {
											"hexValue": "3435",
											"id": 1188,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13473:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "13465:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1192,
							"src": "1632:11861:3",
							"usedErrors": [],
							"usedEvents": [
								424,
								1203,
								1212
							]
						}
					],
					"src": "105:13389:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1269
						]
					},
					"id": 1270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1194,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1269,
							"linearizedBaseContracts": [
								1269
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1203,
									"name": "Transfer",
									"nameLocation": "405:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "414:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "436:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "456:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:4"
									},
									"src": "399:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1212,
									"name": "Approval",
									"nameLocation": "636:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "645:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "668:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "693:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:4"
									},
									"src": "630:78:4"
								},
								{
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:4"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:4"
									},
									"scope": 1269,
									"src": "785:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "942:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:4"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "982:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:4"
									},
									"scope": 1269,
									"src": "923:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1234:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:4"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1269,
									"src": "1204:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1269,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2302:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2319:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:4"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2353:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:4"
									},
									"scope": 1269,
									"src": "2285:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2679:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2693:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2705:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:4"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 1269,
									"src": "2657:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1270,
							"src": "202:2545:4",
							"usedErrors": [],
							"usedEvents": [
								1203,
								1212
							]
						}
					],
					"src": "106:2642:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1740
						],
						"ERC20BurnableUpgradeable": [
							1334
						],
						"ERC20Upgradeable": [
							1191
						],
						"IERC20MetadataUpgradeable": [
							1359
						],
						"IERC20Upgradeable": [
							1269
						],
						"Initializable": [
							578
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1271,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 1272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1192,
							"src": "149:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../../utils/ContextUpgradeable.sol",
							"id": 1273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1741,
							"src": "183:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 579,
							"src": "231:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1274,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "239:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1277,
										"name": "Initializable",
										"nameLocations": [
											"557:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "557:13:5"
									},
									"id": 1278,
									"nodeType": "InheritanceSpecifier",
									"src": "557:13:5"
								},
								{
									"baseName": {
										"id": 1279,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"572:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1740,
										"src": "572:18:5"
									},
									"id": 1280,
									"nodeType": "InheritanceSpecifier",
									"src": "572:18:5"
								},
								{
									"baseName": {
										"id": 1281,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"592:16:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1191,
										"src": "592:16:5"
									},
									"id": 1282,
									"nodeType": "InheritanceSpecifier",
									"src": "592:16:5"
								}
							],
							"canonicalName": "ERC20BurnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "302:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1334,
							"linearizedBaseContracts": [
								1334,
								1191,
								1359,
								1269,
								1740,
								578
							],
							"name": "ERC20BurnableUpgradeable",
							"nameLocation": "529:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "673:7:5",
										"statements": []
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1284,
												"name": "onlyInitializing",
												"nameLocations": [
													"656:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "656:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "656:16:5"
										}
									],
									"name": "__ERC20Burnable_init",
									"nameLocation": "624:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:2:5"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:0:5"
									},
									"scope": 1334,
									"src": "615:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "754:7:5",
										"statements": []
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1290,
												"name": "onlyInitializing",
												"nameLocations": [
													"737:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "737:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "737:16:5"
										}
									],
									"name": "__ERC20Burnable_init_unchained",
									"nameLocation": "695:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:5"
									},
									"scope": 1334,
									"src": "686:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "914:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1301,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "930:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "930:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "944:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1300,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "924:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "924:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "924:27:5"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "766:98:5",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "878:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "891:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "883:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:16:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:5"
									},
									"scope": 1334,
									"src": "869:89:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "1330:95:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1356:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1317,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "1365:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1365:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1315,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1340:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "1340:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1402:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1324,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1411:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1322,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "1396:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "1396:22:5"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "964:295:5",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1273:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1290:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "1282:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "1299:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:33:5"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:0:5"
									},
									"scope": 1334,
									"src": "1264:161:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "1431:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1333,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1710:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "1690:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1330,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1690:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1332,
										"length": {
											"hexValue": "3530",
											"id": 1331,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1698:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1690:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1335,
							"src": "511:1207:5",
							"usedErrors": [],
							"usedEvents": [
								424,
								1203,
								1212
							]
						}
					],
					"src": "124:1595:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							1359
						],
						"IERC20Upgradeable": [
							1269
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 1270,
							"src": "135:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1339,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"327:17:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1269,
										"src": "327:17:6"
									},
									"id": 1340,
									"nodeType": "InheritanceSpecifier",
									"src": "327:17:6"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1338,
								"nodeType": "StructuredDocumentation",
								"src": "171:116:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								1269
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "298:25:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "351:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "419:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "449:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:15:6"
									},
									"scope": 1359,
									"src": "410:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "470:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "540:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:6"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "572:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:15:6"
									},
									"scope": 1359,
									"src": "531:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "593:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "672:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "706:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1355,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "706:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:7:6"
									},
									"scope": 1359,
									"src": "663:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "288:427:6",
							"usedErrors": [],
							"usedEvents": [
								1203,
								1212
							]
						}
					],
					"src": "110:606:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1689
						]
					},
					"id": 1690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1362,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1689,
							"linearizedBaseContracts": [
								1689
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "1489:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1370,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1713:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1375,
												"nodeType": "Return",
												"src": "1706:30:7"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1483:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:7"
									},
									"scope": 1689,
									"src": "1423:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "2729:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1388,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1689",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1689",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1386,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "2772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:7"
											},
											{
												"assignments": [
													1397,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "2824:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1404,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "2842:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "2864:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:7"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2677:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 1689,
									"src": "2658:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "3801:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "3840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "3848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1421,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "3818:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1420,
												"id": 1427,
												"nodeType": "Return",
												"src": "3811:79:7"
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3734:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3750:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:7"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3787:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:7"
									},
									"scope": 1689,
									"src": "3712:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "4266:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4305:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4313:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1445,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1441,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "4283:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1447,
												"nodeType": "Return",
												"src": "4276:59:7"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "4150:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "4174:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "4201:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:7"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "4252:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:7"
									},
									"scope": 1689,
									"src": "4119:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "4817:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4864:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "4870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1461,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "4834:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1467,
												"nodeType": "Return",
												"src": "4827:94:7"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4735:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4751:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:7"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4803:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:7"
									},
									"scope": 1689,
									"src": "4704:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "5355:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1486,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1689",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1689",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1484,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1489,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:7"
											},
											{
												"assignments": [
													1495,
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "5457:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1494,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "5471:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1496,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"arguments": [
														{
															"id": 1502,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "5524:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1498,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "5498:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1500,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5517:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1506,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "5573:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "5581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1508,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "5590:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1509,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "5602:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1505,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "5546:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1511,
												"nodeType": "Return",
												"src": "5539:76:7"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5216:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5240:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5290:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:7"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5341:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:7"
									},
									"scope": 1689,
									"src": "5176:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "5899:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "5935:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "5943:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1523,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1530,
															1559
														],
														"referencedDeclaration": 1559,
														"src": "5916:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1528,
												"nodeType": "Return",
												"src": "5909:80:7"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5843:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5885:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:7"
									},
									"scope": 1689,
									"src": "5799:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6338:168:7",
										"statements": [
											{
												"assignments": [
													1543,
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6349:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1542,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6363:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1544,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"arguments": [
														{
															"id": 1548,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "6408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1546,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "6390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "6457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "6465:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1554,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "6474:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1555,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "6486:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1551,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "6430:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1557,
												"nodeType": "Return",
												"src": "6423:76:7"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6217:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6241:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6268:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:7"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6324:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:7"
									},
									"scope": 1689,
									"src": "6180:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "6782:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6820:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "6828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1569,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1576,
															1605
														],
														"referencedDeclaration": 1605,
														"src": "6799:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1568,
												"id": 1574,
												"nodeType": "Return",
												"src": "6792:84:7"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1689,
									"src": "6685:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "7224:170:7",
										"statements": [
											{
												"assignments": [
													1589,
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "7235:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "7249:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [
														{
															"id": 1594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "7296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7345:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "7374:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1597,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "7318:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1603,
												"nodeType": "Return",
												"src": "7311:76:7"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "7108:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "7132:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "7159:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "7210:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:7"
									},
									"scope": 1689,
									"src": "7069:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "7876:434:7",
										"statements": [
											{
												"condition": {
													"id": 1619,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1610,
													"src": "7890:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1641,
													"nodeType": "Block",
													"src": "8246:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1637,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "8268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1638,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "8280:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1636,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "8260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:7"
														}
													]
												},
												"id": 1642,
												"nodeType": "IfStatement",
												"src": "7886:418:7",
												"trueBody": {
													"id": 1635,
													"nodeType": "Block",
													"src": "7899:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1620,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "7917:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1632,
															"nodeType": "IfStatement",
															"src": "7913:286:7",
															"trueBody": {
																"id": 1631,
																"nodeType": "Block",
																"src": "7941:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1626,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1608,
																							"src": "8143:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1625,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1377,
																						"src": "8132:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1624,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1630,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1633,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "8219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1618,
															"id": 1634,
															"nodeType": "Return",
															"src": "8212:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7751:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7773:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7806:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7862:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:7"
									},
									"scope": 1689,
									"src": "7682:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "8691:135:7",
										"statements": [
											{
												"condition": {
													"id": 1656,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "8705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "8762:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1661,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "8784:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1660,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "8776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:7"
														}
													]
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "8701:119:7",
												"trueBody": {
													"id": 1659,
													"nodeType": "Block",
													"src": "8714:42:7",
													"statements": [
														{
															"expression": {
																"id": 1657,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "8735:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1655,
															"id": 1658,
															"nodeType": "Return",
															"src": "8728:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8588:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8621:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8677:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:7"
									},
									"scope": 1689,
									"src": "8531:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "8915:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1675,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "8991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "9321:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1682,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "9342:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1681,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:7"
														}
													]
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "8987:379:7",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "9014:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:7",
																"nodeType": "YulBlock",
																"src": "9172:133:7",
																"statements": [
																	{
																		"nativeSrc": "9190:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:7"
																			},
																			"nativeSrc": "9213:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:7",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:7"
																					},
																					"nativeSrc": "9254:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:7"
																			},
																			"nativeSrc": "9247:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:7"
																		},
																		"nativeSrc": "9247:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1670,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1670,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:7",
																	"valueSize": 1
																}
															],
															"id": 1679,
															"nodeType": "InlineAssembly",
															"src": "9163:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8849:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8874:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:7"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:7"
									},
									"scope": 1689,
									"src": "8832:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1690,
							"src": "194:9180:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1740
						],
						"Initializable": [
							578
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 579,
							"src": "125:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1692,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "133:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1695,
										"name": "Initializable",
										"nameLocations": [
											"727:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "727:13:8"
									},
									"id": 1696,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1694,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740,
								578
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "799:7:8",
										"statements": []
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1698,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "782:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:8"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:8"
									},
									"scope": 1740,
									"src": "747:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "874:7:8",
										"statements": []
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1704,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "857:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:8"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:8"
									},
									"scope": 1740,
									"src": "812:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "948:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1713,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1715,
												"nodeType": "Return",
												"src": "958:17:8"
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:8"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "939:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:8"
									},
									"scope": 1740,
									"src": "886:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "1055:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1722,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1724,
												"nodeType": "Return",
												"src": "1065:15:8"
											}
										]
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:8"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1039:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:8"
									},
									"scope": 1740,
									"src": "988:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "1165:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1730,
												"id": 1732,
												"nodeType": "Return",
												"src": "1175:8:8"
											}
										]
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1156:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:8"
									},
									"scope": 1740,
									"src": "1093:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1739,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1455:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1736,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1738,
										"length": {
											"hexValue": "3530",
											"id": 1737,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1741,
							"src": "687:796:8",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "101:1383:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2892
						],
						"SignedMathUpgradeable": [
							2997
						],
						"StringsUpgradeable": [
							1969
						]
					},
					"id": 1970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1742,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2893,
							"src": "126:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 1744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2998,
							"src": "163:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1745,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1748,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1969,
									"src": "275:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1746,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1747,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1751,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1969,
									"src": "335:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1749,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1750,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "551:636:9",
										"statements": [
											{
												"id": 1797,
												"nodeType": "UncheckedBlock",
												"src": "561:620:9",
												"statements": [
													{
														"assignments": [
															1760
														],
														"declarations": [
															{
																"constant": false,
																"id": 1760,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1797,
																"src": "585:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1759,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1767,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1763,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "624:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1761,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2892,
																		"src": "602:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2892_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2729,
																	"src": "602:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:9"
													},
													{
														"assignments": [
															1769
														],
														"declarations": [
															{
																"constant": false,
																"id": 1769,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1797,
																"src": "648:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1768,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1774,
														"initialValue": {
															"arguments": [
																{
																	"id": 1772,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "682:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1770,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:9"
													},
													{
														"assignments": [
															1776
														],
														"declarations": [
															{
																"constant": false,
																"id": 1776,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1797,
																"src": "703:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1775,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1777,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:9"
													},
													{
														"AST": {
															"nativeSrc": "784:67:9",
															"nodeType": "YulBlock",
															"src": "784:67:9",
															"statements": [
																{
																	"nativeSrc": "802:35:9",
																	"nodeType": "YulAssignment",
																	"src": "802:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "813:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "825:2:9",
																						"nodeType": "YulLiteral",
																						"src": "825:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "829:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "821:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:9"
																				},
																				"nativeSrc": "821:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "809:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:9"
																		},
																		"nativeSrc": "809:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "802:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1769,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1760,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1776,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:9",
																"valueSize": 1
															}
														],
														"id": 1778,
														"nodeType": "InlineAssembly",
														"src": "775:76:9"
													},
													{
														"body": {
															"id": 1793,
															"nodeType": "Block",
															"src": "877:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:9",
																		"subExpression": {
																			"id": 1780,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1776,
																			"src": "895:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1782,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "978:84:9",
																		"nodeType": "YulBlock",
																		"src": "978:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1008:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1022:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1029:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1018:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:9"
																									},
																									"nativeSrc": "1018:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "1034:8:9",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1013:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:9"
																							},
																							"nativeSrc": "1013:30:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1000:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:9"
																					},
																					"nativeSrc": "1000:44:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:9"
																				},
																				"nativeSrc": "1000:44:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "prague",
																	"externalReferences": [
																		{
																			"declaration": 1748,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1776,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1754,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1783,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:9"
																},
																{
																	"expression": {
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1784,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "1079:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1787,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "1112:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1792,
																	"nodeType": "IfStatement",
																	"src": "1108:21:9",
																	"trueBody": {
																		"id": 1791,
																		"nodeType": "Break",
																		"src": "1124:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1794,
														"nodeType": "WhileStatement",
														"src": "864:280:9"
													},
													{
														"expression": {
															"id": 1795,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "1164:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1758,
														"id": 1796,
														"nodeType": "Return",
														"src": "1157:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "498:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:9"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1756,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:9"
									},
									"scope": 1969,
									"src": "480:707:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1357:114:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1811,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "1398:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:9",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1820,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "1455:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1818,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2997,
																					"src": "1429:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$2997_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 1819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:9",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2996,
																				"src": "1429:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1817,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1799,
																			1827
																		],
																		"referencedDeclaration": 1799,
																		"src": "1420:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1807,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1825,
												"nodeType": "Return",
												"src": "1367:97:9"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1305:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1801,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:9"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1342:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:9"
									},
									"scope": 1969,
									"src": "1287:184:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "1650:111:9",
										"statements": [
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1836,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "1703:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "1733:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1837,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2892,
																				"src": "1710:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2892_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2852,
																			"src": "1710:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1835,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1847,
																	1923,
																	1943
																],
																"referencedDeclaration": 1923,
																"src": "1691:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1834,
														"id": 1844,
														"nodeType": "Return",
														"src": "1684:60:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1597:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:9"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1635:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:9"
									},
									"scope": 1969,
									"src": "1576:185:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "1974:347:9",
										"statements": [
											{
												"assignments": [
													1858
												],
												"declarations": [
													{
														"constant": false,
														"id": 1858,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1922,
														"src": "1984:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1857,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1867,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1862,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "2020:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1859,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:9"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1868,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "2041:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1870,
														"indexExpression": {
															"hexValue": "30",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:9"
											},
											{
												"expression": {
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1874,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "2066:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1876,
														"indexExpression": {
															"hexValue": "31",
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:9"
											},
											{
												"body": {
													"id": 1908,
													"nodeType": "Block",
													"src": "2136:83:9",
													"statements": [
														{
															"expression": {
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1894,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "2150:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1896,
																	"indexExpression": {
																		"id": 1895,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "2157:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1897,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "2162:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1901,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "2171:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:9"
														},
														{
															"expression": {
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "2197:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1907,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "2124:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1909,
												"initializationExpression": {
													"assignments": [
														1881
													],
													"declarations": [
														{
															"constant": false,
															"id": 1881,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1909,
															"src": "2096:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1880,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1887,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1883,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "2112:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:9",
														"subExpression": {
															"id": 1891,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "2133:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1893,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "2236:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1919,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "2307:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1917,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1856,
												"id": 1921,
												"nodeType": "Return",
												"src": "2293:21:9"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1905:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1920:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:9"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1959:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:9"
									},
									"scope": 1969,
									"src": "1884:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "2546:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1936,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "2591:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1934,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1939,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "2599:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1931,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1847,
															1923,
															1943
														],
														"referencedDeclaration": 1923,
														"src": "2563:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1941,
												"nodeType": "Return",
												"src": "2556:59:9"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2494:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:9"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2531:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1928,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:9"
									},
									"scope": 1969,
									"src": "2473:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2777:66:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1956,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "2810:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1954,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1953,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1962,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2833:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1960,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1959,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1952,
												"id": 1966,
												"nodeType": "Return",
												"src": "2787:49:9"
											}
										]
									},
									"documentation": {
										"id": 1944,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2714:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2731:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:9"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2771:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:9"
									},
									"scope": 1969,
									"src": "2699:144:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1970,
							"src": "242:2603:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2745:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							2014
						],
						"IERC165Upgradeable": [
							2026
						],
						"Initializable": [
							578
						]
					},
					"id": 2015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1972,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 2027,
							"src": "124:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 579,
							"src": "159:66:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1973,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "167:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1976,
										"name": "Initializable",
										"nameLocations": [
											"843:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "843:13:10"
									},
									"id": 1977,
									"nodeType": "InheritanceSpecifier",
									"src": "843:13:10"
								},
								{
									"baseName": {
										"id": 1978,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"858:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2026,
										"src": "858:18:10"
									},
									"id": 1979,
									"nodeType": "InheritanceSpecifier",
									"src": "858:18:10"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1975,
								"nodeType": "StructuredDocumentation",
								"src": "227:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2014,
							"linearizedBaseContracts": [
								2014,
								2026,
								578
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "822:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "934:7:10",
										"statements": []
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1982,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1981,
												"name": "onlyInitializing",
												"nameLocations": [
													"917:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "917:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:16:10"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "892:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:10"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:10"
									},
									"scope": 2014,
									"src": "883:58:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "1008:7:10",
										"statements": []
									},
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1987,
												"name": "onlyInitializing",
												"nameLocations": [
													"991:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "991:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:16:10"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "956:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:10"
									},
									"scope": 2014,
									"src": "947:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2025
									],
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1172:75:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2000,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "1189:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2002,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2026,
																	"src": "1209:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2026_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2026_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 2001,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1204:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1204:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2026",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1229:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1204:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1189:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2006,
												"nodeType": "Return",
												"src": "1182:58:10"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "1020:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1090:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1996,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1148:8:10"
									},
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1115:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1108:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1993,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:20:10"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1166:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:6:10"
									},
									"scope": 2014,
									"src": "1081:166:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "1253:254:10",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2013,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1532:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "1512:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2010,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2012,
										"length": {
											"hexValue": "3530",
											"id": 2011,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1520:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1512:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2015,
							"src": "804:736:10",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "99:1442:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							2026
						]
					},
					"id": 2027,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2017,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2026,
							"linearizedBaseContracts": [
								2026
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "812:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:11"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "855:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:11"
									},
									"scope": 2026,
									"src": "785:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2027,
							"src": "405:458:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2892
						]
					},
					"id": 2893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2028,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2029,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2892,
							"linearizedBaseContracts": [
								2892
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 2033,
									"members": [
										{
											"id": 2030,
											"name": "Down",
											"nameLocation": "256:4:12",
											"nodeType": "EnumValue",
											"src": "256:4:12"
										},
										{
											"id": 2031,
											"name": "Up",
											"nameLocation": "298:2:12",
											"nodeType": "EnumValue",
											"src": "298:2:12"
										},
										{
											"id": 2032,
											"name": "Zero",
											"nameLocation": "329:4:12",
											"nodeType": "EnumValue",
											"src": "329:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:12",
									"nodeType": "EnumDefinition",
									"src": "232:122:12"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "491:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2043,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "508:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2044,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "512:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "520:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:12",
													"trueExpression": {
														"id": 2046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "516:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2042,
												"id": 2049,
												"nodeType": "Return",
												"src": "501:20:12"
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "448:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:12"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "482:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:12"
									},
									"scope": 2892,
									"src": "424:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "666:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2061,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "683:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2062,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "687:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2065,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "695:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:12",
													"trueExpression": {
														"id": 2064,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "691:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2060,
												"id": 2067,
												"nodeType": "Return",
												"src": "676:20:12"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "623:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:12"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "657:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:12"
									},
									"scope": 2892,
									"src": "599:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "887:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2079,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2072,
																	"src": "942:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2080,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "946:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2082,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "952:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2084,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "956:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2086,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2078,
												"id": 2090,
												"nodeType": "Return",
												"src": "934:28:12"
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "844:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:12"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:12"
									},
									"scope": 2892,
									"src": "816:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "1239:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2102,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "1327:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2106,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "1341:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2110,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "1350:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2101,
												"id": 2115,
												"nodeType": "Return",
												"src": "1320:35:12"
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1196:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:12"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1230:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:12"
									},
									"scope": 2892,
									"src": "1168:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "1776:4115:12",
										"statements": [
											{
												"id": 2238,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:12",
												"statements": [
													{
														"assignments": [
															2130
														],
														"declarations": [
															{
																"constant": false,
																"id": 2130,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "2107:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2129,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2131,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:12"
													},
													{
														"assignments": [
															2133
														],
														"declarations": [
															{
																"constant": false,
																"id": 2133,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "2179:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2134,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:12"
													},
													{
														"AST": {
															"nativeSrc": "2259:157:12",
															"nodeType": "YulBlock",
															"src": "2259:157:12",
															"statements": [
																{
																	"nativeSrc": "2277:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2294:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2297:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2304:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2300:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:12"
																				},
																				"nativeSrc": "2300:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2287:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:12"
																		},
																		"nativeSrc": "2287:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2281:2:12",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:18:12",
																	"nodeType": "YulAssignment",
																	"src": "2324:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2337:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2340:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2333:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:12"
																		},
																		"nativeSrc": "2333:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2324:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "2359:43:12",
																	"nodeType": "YulAssignment",
																	"src": "2359:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2376:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2380:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:12"
																				},
																				"nativeSrc": "2372:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2391:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2395:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2388:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:12"
																				},
																				"nativeSrc": "2388:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2368:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:12"
																		},
																		"nativeSrc": "2368:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2359:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2133,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2122,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2122,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:12",
																"valueSize": 1
															}
														],
														"id": 2135,
														"nodeType": "InlineAssembly",
														"src": "2250:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2136,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "2497:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2144,
														"nodeType": "IfStatement",
														"src": "2493:368:12",
														"trueBody": {
															"id": 2143,
															"nodeType": "Block",
															"src": "2509:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2139,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2130,
																			"src": "2827:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2140,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "2835:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2128,
																	"id": 2142,
																	"nodeType": "Return",
																	"src": "2820:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2146,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "2971:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2147,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "2985:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2145,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2151,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:12"
													},
													{
														"assignments": [
															2153
														],
														"declarations": [
															{
																"constant": false,
																"id": 2153,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "3272:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:12"
													},
													{
														"AST": {
															"nativeSrc": "3312:291:12",
															"nodeType": "YulBlock",
															"src": "3312:291:12",
															"statements": [
																{
																	"nativeSrc": "3381:38:12",
																	"nodeType": "YulAssignment",
																	"src": "3381:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3401:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3404:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3407:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3394:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:12"
																		},
																		"nativeSrc": "3394:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3381:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3501:41:12",
																	"nodeType": "YulAssignment",
																	"src": "3501:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3514:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3524:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3535:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3521:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:12"
																				},
																				"nativeSrc": "3521:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:12"
																		},
																		"nativeSrc": "3510:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3501:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3559:30:12",
																	"nodeType": "YulAssignment",
																	"src": "3559:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3572:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3579:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:12"
																		},
																		"nativeSrc": "3568:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3559:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2133,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2133,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2122,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:12",
																"valueSize": 1
															}
														],
														"id": 2155,
														"nodeType": "InlineAssembly",
														"src": "3303:300:12"
													},
													{
														"assignments": [
															2157
														],
														"declarations": [
															{
																"constant": false,
																"id": 2157,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "3910:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2158,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2124,
																"src": "3925:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:12",
																			"subExpression": {
																				"id": 2159,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "3941:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2163,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:12"
													},
													{
														"AST": {
															"nativeSrc": "3980:362:12",
															"nodeType": "YulBlock",
															"src": "3980:362:12",
															"statements": [
																{
																	"nativeSrc": "4045:37:12",
																	"nodeType": "YulAssignment",
																	"src": "4045:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4064:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4077:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4060:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:12"
																		},
																		"nativeSrc": "4060:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4045:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "4149:25:12",
																	"nodeType": "YulAssignment",
																	"src": "4149:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4162:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4169:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4158:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:12"
																		},
																		"nativeSrc": "4158:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4149:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "4289:39:12",
																	"nodeType": "YulAssignment",
																	"src": "4289:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4309:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4312:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4305:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:12"
																						},
																						"nativeSrc": "4305:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4319:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4301:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:12"
																				},
																				"nativeSrc": "4301:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:12"
																		},
																		"nativeSrc": "4297:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4289:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:12",
																"valueSize": 1
															}
														],
														"id": 2166,
														"nodeType": "InlineAssembly",
														"src": "3971:371:12"
													},
													{
														"expression": {
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2167,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "4408:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "4417:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2169,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "4425:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2172,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:12"
													},
													{
														"assignments": [
															2174
														],
														"declarations": [
															{
																"constant": false,
																"id": 2174,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "4747:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2173,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2181,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2176,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "4770:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:12"
													},
													{
														"expression": {
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5003:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2184,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5018:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2185,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5032:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2189,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:12"
													},
													{
														"expression": {
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2190,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5072:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2192,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5087:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2193,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5101:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2197,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:12"
													},
													{
														"expression": {
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2198,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5142:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2200,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5157:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2201,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5171:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2205,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:12"
													},
													{
														"expression": {
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2206,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5212:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2208,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2209,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5241:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2213,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:12"
													},
													{
														"expression": {
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2214,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5282:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2216,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5297:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2217,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5311:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2221,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:12"
													},
													{
														"expression": {
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2222,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "5353:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2224,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5368:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2225,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5382:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2229,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:12"
													},
													{
														"expression": {
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "5823:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2231,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "5832:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2232,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "5840:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2235,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:12"
													},
													{
														"expression": {
															"id": 2236,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "5868:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2128,
														"id": 2237,
														"nodeType": "Return",
														"src": "5861:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1694:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1705:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1716:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:12"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1760:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:12"
									},
									"scope": 2892,
									"src": "1678:4213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "6133:189:12",
										"statements": [
											{
												"assignments": [
													2256
												],
												"declarations": [
													{
														"constant": false,
														"id": 2256,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "6143:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2262,
												"initialValue": {
													"arguments": [
														{
															"id": 2258,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "6167:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2259,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "6170:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2260,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "6173:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2257,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2240,
															2284
														],
														"referencedDeclaration": 2240,
														"src": "6160:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2033",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2263,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "6199:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2033",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2264,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "6211:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2033_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "6211:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2033",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2268,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "6233:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2269,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2245,
																	"src": "6236:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2270,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "6239:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2267,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2280,
												"nodeType": "IfStatement",
												"src": "6195:98:12",
												"trueBody": {
													"id": 2279,
													"nodeType": "Block",
													"src": "6257:36:12",
													"statements": [
														{
															"expression": {
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2275,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "6271:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2278,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2281,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2256,
													"src": "6309:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2282,
												"nodeType": "Return",
												"src": "6302:13:12"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "6039:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "6050:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "6061:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "6082:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2033",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2248,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2033,
														"src": "6082:8:12"
													},
													"referencedDeclaration": 2033,
													"src": "6082:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2033",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:12"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "6124:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:12"
									},
									"scope": 2892,
									"src": "6023:299:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "6598:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "6612:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"nodeType": "IfStatement",
												"src": "6608:45:12",
												"trueBody": {
													"id": 2297,
													"nodeType": "Block",
													"src": "6620:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2291,
															"id": 2296,
															"nodeType": "Return",
															"src": "6634:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "7332:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2309,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2303,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2287,
																			"src": "7360:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2302,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2564,
																			2600
																		],
																		"referencedDeclaration": 2564,
																		"src": "7355:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2307,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:12"
											},
											{
												"id": 2394,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:12",
												"statements": [
													{
														"expression": {
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2310,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "7793:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2311,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "7803:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2312,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "7812:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2313,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "7816:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2316,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2320,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:12"
													},
													{
														"expression": {
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2321,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "7842:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2322,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "7852:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2323,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "7861:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2324,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "7865:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2327,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2331,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:12"
													},
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2332,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "7891:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2333,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "7901:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2334,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "7910:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2335,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "7914:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2338,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:12"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "7940:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "7950:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2345,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "7959:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2346,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "7963:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:12"
													},
													{
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "7989:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "7999:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2356,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "8008:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2357,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "8012:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2364,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:12"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2365,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "8038:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2366,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "8048:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2367,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "8057:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2368,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "8061:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:12"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "8087:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "8097:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2378,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2287,
																					"src": "8106:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2379,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "8110:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2388,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "8147:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2389,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "8155:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2390,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "8159:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2387,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "8143:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2291,
														"id": 2393,
														"nodeType": "Return",
														"src": "8136:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "6555:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:12"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "6589:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:12"
									},
									"scope": 2892,
									"src": "6541:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2431,
										"nodeType": "Block",
										"src": "8359:161:12",
										"statements": [
											{
												"id": 2430,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:12",
												"statements": [
													{
														"assignments": [
															2408
														],
														"declarations": [
															{
																"constant": false,
																"id": 2408,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2430,
																"src": "8393:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2407,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2412,
														"initialValue": {
															"arguments": [
																{
																	"id": 2410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "8415:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2409,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2396,
																	2432
																],
																"referencedDeclaration": 2396,
																"src": "8410:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "8438:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2033",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2414,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "8448:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2415,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2033,
																						"src": "8460:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2033_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2031,
																					"src": "8460:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2418,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2408,
																						"src": "8475:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2419,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2408,
																						"src": "8484:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2421,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "8493:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2427,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2406,
														"id": 2429,
														"nodeType": "Return",
														"src": "8431:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8297:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8308:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2033",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2400,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2033,
														"src": "8308:8:12"
													},
													"referencedDeclaration": 2033,
													"src": "8308:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2033",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:12"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8350:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:12"
									},
									"scope": 2892,
									"src": "8283:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "8705:922:12",
										"statements": [
											{
												"assignments": [
													2441
												],
												"declarations": [
													{
														"constant": false,
														"id": 2441,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2563,
														"src": "8715:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"hexValue": "30",
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:12"
											},
											{
												"id": 2560,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "8771:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2458,
														"nodeType": "IfStatement",
														"src": "8767:99:12",
														"trueBody": {
															"id": 2457,
															"nodeType": "Block",
															"src": "8789:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "8807:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2452,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:12"
																},
																{
																	"expression": {
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "8838:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2456,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "8883:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2473,
														"nodeType": "IfStatement",
														"src": "8879:96:12",
														"trueBody": {
															"id": 2472,
															"nodeType": "Block",
															"src": "8900:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "8918:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2467,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:12"
																},
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "8948:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "8992:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2488,
														"nodeType": "IfStatement",
														"src": "8988:96:12",
														"trueBody": {
															"id": 2487,
															"nodeType": "Block",
															"src": "9009:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2479,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9027:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2482,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:12"
																},
																{
																	"expression": {
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2483,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9057:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2486,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2489,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "9101:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2503,
														"nodeType": "IfStatement",
														"src": "9097:96:12",
														"trueBody": {
															"id": 2502,
															"nodeType": "Block",
															"src": "9118:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2494,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9136:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2497,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:12"
																},
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2498,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9166:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2504,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "9210:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2518,
														"nodeType": "IfStatement",
														"src": "9206:93:12",
														"trueBody": {
															"id": 2517,
															"nodeType": "Block",
															"src": "9226:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2509,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9244:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:12"
																},
																{
																	"expression": {
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9273:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2516,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "9316:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2533,
														"nodeType": "IfStatement",
														"src": "9312:93:12",
														"trueBody": {
															"id": 2532,
															"nodeType": "Block",
															"src": "9332:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2524,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9350:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2527,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:12"
																},
																{
																	"expression": {
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9379:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2531,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "9422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2548,
														"nodeType": "IfStatement",
														"src": "9418:93:12",
														"trueBody": {
															"id": 2547,
															"nodeType": "Block",
															"src": "9438:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9456:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:12"
																},
																{
																	"expression": {
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2543,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9485:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2546,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "9528:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "9524:64:12",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "9544:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9562:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2561,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2441,
													"src": "9614:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2439,
												"id": 2562,
												"nodeType": "Return",
												"src": "9607:13:12"
											}
										]
									},
									"documentation": {
										"id": 2433,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "8658:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:12"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "8696:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:12"
									},
									"scope": 2892,
									"src": "8644:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "9860:165:12",
										"statements": [
											{
												"id": 2598,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:12",
												"statements": [
													{
														"assignments": [
															2576
														],
														"declarations": [
															{
																"constant": false,
																"id": 2576,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2598,
																"src": "9894:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2580,
														"initialValue": {
															"arguments": [
																{
																	"id": 2578,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "9916:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2577,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2564,
																	2600
																],
																"referencedDeclaration": 2564,
																"src": "9911:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2581,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2576,
																"src": "9943:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2033",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2582,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2570,
																					"src": "9953:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2583,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2033,
																						"src": "9965:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2033_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2031,
																					"src": "9965:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2588,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2586,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2587,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2576,
																						"src": "9985:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2589,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2567,
																					"src": "9994:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2574,
														"id": 2597,
														"nodeType": "Return",
														"src": "9936:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "9794:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "9809:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2033",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2568,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2033,
														"src": "9809:8:12"
													},
													"referencedDeclaration": 2033,
													"src": "9809:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2033",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:12"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "9851:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:12"
									},
									"scope": 2892,
									"src": "9780:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "10212:854:12",
										"statements": [
											{
												"assignments": [
													2609
												],
												"declarations": [
													{
														"constant": false,
														"id": 2609,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2728,
														"src": "10222:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"hexValue": "30",
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:12"
											},
											{
												"id": 2725,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10278:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10274:103:12",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10297:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10315:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:12"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10350:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10394:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "10390:103:12",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "10413:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10431:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:12"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10466:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10510:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "10506:103:12",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "10529:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10547:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:12"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10582:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10626:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2679,
														"nodeType": "IfStatement",
														"src": "10622:100:12",
														"trueBody": {
															"id": 2678,
															"nodeType": "Block",
															"src": "10644:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10662:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:12"
																},
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10696:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2680,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10739:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2696,
														"nodeType": "IfStatement",
														"src": "10735:100:12",
														"trueBody": {
															"id": 2695,
															"nodeType": "Block",
															"src": "10757:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10775:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:12"
																},
																{
																	"expression": {
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10809:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2694,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2697,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10852:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2713,
														"nodeType": "IfStatement",
														"src": "10848:100:12",
														"trueBody": {
															"id": 2712,
															"nodeType": "Block",
															"src": "10870:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2702,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "10888:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2707,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:12"
																},
																{
																	"expression": {
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2708,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "10922:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2711,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2714,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "10965:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "10961:66:12",
														"trueBody": {
															"id": 2723,
															"nodeType": "Block",
															"src": "10983:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "11001:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2726,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2609,
													"src": "11053:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2607,
												"id": 2727,
												"nodeType": "Return",
												"src": "11046:13:12"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "10165:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:12"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "10203:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:12"
									},
									"scope": 2892,
									"src": "10150:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "11301:167:12",
										"statements": [
											{
												"id": 2763,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:12",
												"statements": [
													{
														"assignments": [
															2741
														],
														"declarations": [
															{
																"constant": false,
																"id": 2741,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2763,
																"src": "11335:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2740,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2745,
														"initialValue": {
															"arguments": [
																{
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "11358:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2742,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2729,
																	2765
																],
																"referencedDeclaration": 2729,
																"src": "11352:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2746,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2741,
																"src": "11385:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2033",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2747,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2735,
																					"src": "11395:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2748,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2033,
																						"src": "11407:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2033_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2031,
																					"src": "11407:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2752,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2741,
																						"src": "11428:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2754,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2732,
																					"src": "11437:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2760,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2739,
														"id": 2762,
														"nodeType": "Return",
														"src": "11378:73:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2730,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "11235:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "11250:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2033",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2733,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2033,
														"src": "11250:8:12"
													},
													"referencedDeclaration": 2033,
													"src": "11250:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2033",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:12"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "11292:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:12"
									},
									"scope": 2892,
									"src": "11220:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "11782:600:12",
										"statements": [
											{
												"assignments": [
													2774
												],
												"declarations": [
													{
														"constant": false,
														"id": 2774,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2851,
														"src": "11792:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2776,
												"initialValue": {
													"hexValue": "30",
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:12"
											},
											{
												"id": 2848,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "11848:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2791,
														"nodeType": "IfStatement",
														"src": "11844:98:12",
														"trueBody": {
															"id": 2790,
															"nodeType": "Block",
															"src": "11866:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2782,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "11884:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2785,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:12"
																},
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11915:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "11959:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2806,
														"nodeType": "IfStatement",
														"src": "11955:95:12",
														"trueBody": {
															"id": 2805,
															"nodeType": "Block",
															"src": "11976:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "11994:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:12"
																},
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "12024:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2807,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "12067:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2821,
														"nodeType": "IfStatement",
														"src": "12063:95:12",
														"trueBody": {
															"id": 2820,
															"nodeType": "Block",
															"src": "12084:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "12102:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:12"
																},
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "12132:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "12175:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2836,
														"nodeType": "IfStatement",
														"src": "12171:95:12",
														"trueBody": {
															"id": 2835,
															"nodeType": "Block",
															"src": "12192:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "12210:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2830,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:12"
																},
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "12240:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "12283:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2847,
														"nodeType": "IfStatement",
														"src": "12279:64:12",
														"trueBody": {
															"id": 2846,
															"nodeType": "Block",
															"src": "12299:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "12317:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2845,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2849,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2774,
													"src": "12369:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2772,
												"id": 2850,
												"nodeType": "Return",
												"src": "12362:13:12"
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "11735:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:12"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "11773:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:12"
									},
									"scope": 2892,
									"src": "11719:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2890,
										"nodeType": "Block",
										"src": "12619:174:12",
										"statements": [
											{
												"id": 2889,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:12",
												"statements": [
													{
														"assignments": [
															2864
														],
														"declarations": [
															{
																"constant": false,
																"id": 2864,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2889,
																"src": "12653:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2868,
														"initialValue": {
															"arguments": [
																{
																	"id": 2866,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "12677:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2865,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2852,
																	2891
																],
																"referencedDeclaration": 2852,
																"src": "12670:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2869,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2864,
																"src": "12704:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2033",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2870,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "12714:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2871,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2033,
																						"src": "12726:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2033_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2031,
																					"src": "12726:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2033",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2877,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2875,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2864,
																									"src": "12747:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2876,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2878,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2880,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2855,
																					"src": "12762:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2862,
														"id": 2888,
														"nodeType": "Return",
														"src": "12697:79:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "12553:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "12568:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2033",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2856,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2033,
														"src": "12568:8:12"
													},
													"referencedDeclaration": 2033,
													"src": "12568:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2033",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:12"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "12610:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:12"
									},
									"scope": 2892,
									"src": "12537:256:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2893,
							"src": "202:12593:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12693:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							2997
						]
					},
					"id": 2998,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2894,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2895,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2997,
							"linearizedBaseContracts": [
								2997
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "386:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2905,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "403:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2906,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "407:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2909,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2900,
														"src": "415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:13",
													"trueExpression": {
														"id": 2908,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2898,
														"src": "411:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2904,
												"id": 2911,
												"nodeType": "Return",
												"src": "396:20:13"
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2897,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "345:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2899,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:13"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "378:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2902,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:13"
									},
									"scope": 2997,
									"src": "322:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "565:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2923,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2916,
															"src": "582:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2924,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2918,
															"src": "586:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2927,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "594:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:13",
													"trueExpression": {
														"id": 2926,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "590:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2922,
												"id": 2929,
												"nodeType": "Return",
												"src": "575:20:13"
											}
										]
									},
									"documentation": {
										"id": 2914,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "524:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2917,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:13"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "557:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2920,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:13"
									},
									"scope": 2997,
									"src": "501:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "807:162:13",
										"statements": [
											{
												"assignments": [
													2942
												],
												"declarations": [
													{
														"constant": false,
														"id": 2942,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2974,
														"src": "869:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2941,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2955,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2943,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2934,
																	"src": "881:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2944,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "885:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2946,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2947,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2934,
																				"src": "892:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2948,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2936,
																				"src": "896:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2950,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2953,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2956,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "921:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2961,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2942,
																						"src": "941:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2959,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2957,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2966,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2934,
																				"src": "955:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2967,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2936,
																				"src": "959:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2969,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2940,
												"id": 2973,
												"nodeType": "Return",
												"src": "914:48:13"
											}
										]
									},
									"documentation": {
										"id": 2932,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2933,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "766:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2935,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:13"
									},
									"returnParameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "799:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:13"
									},
									"scope": 2997,
									"src": "739:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "1113:158:13",
										"statements": [
											{
												"id": 2994,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2985,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2978,
																			"src": "1238:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:13",
																		"subExpression": {
																			"id": 2989,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2978,
																			"src": "1252:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:13",
																	"trueExpression": {
																		"id": 2988,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2978,
																		"src": "1247:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2983,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2982,
														"id": 2993,
														"nodeType": "Return",
														"src": "1223:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2976,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "1071:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2977,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:13"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "1104:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:13"
									},
									"scope": 2997,
									"src": "1058:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2998,
							"src": "215:1058:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1165:13"
				},
				"id": 13
			},
			"contracts/tokens/Alvara.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/Alvara.sol",
					"exportedSymbols": {
						"Alvara": [
							3202
						],
						"ERC20BurnableUpgradeable": [
							1334
						],
						"ERC20Upgradeable": [
							1191
						],
						"WithSupervisedTransfers": [
							3326
						]
					},
					"id": 3203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2999,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 3001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3203,
							"sourceUnit": 1192,
							"src": "57:102:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3000,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1191,
										"src": "65:16:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"id": 3003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3203,
							"sourceUnit": 1335,
							"src": "160:129:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3002,
										"name": "ERC20BurnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1334,
										"src": "168:24:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/WithSupervisedTransfers.sol",
							"file": "../utils/WithSupervisedTransfers.sol",
							"id": 3005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3203,
							"sourceUnit": 3327,
							"src": "291:77:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3004,
										"name": "WithSupervisedTransfers",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3326,
										"src": "299:23:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3006,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"393:16:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1191,
										"src": "393:16:14"
									},
									"id": 3007,
									"nodeType": "InheritanceSpecifier",
									"src": "393:16:14"
								},
								{
									"baseName": {
										"id": 3008,
										"name": "ERC20BurnableUpgradeable",
										"nameLocations": [
											"415:24:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1334,
										"src": "415:24:14"
									},
									"id": 3009,
									"nodeType": "InheritanceSpecifier",
									"src": "415:24:14"
								},
								{
									"baseName": {
										"id": 3010,
										"name": "WithSupervisedTransfers",
										"nameLocations": [
											"445:23:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3326,
										"src": "445:23:14"
									},
									"id": 3011,
									"nodeType": "InheritanceSpecifier",
									"src": "445:23:14"
								}
							],
							"canonicalName": "Alvara",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3202,
							"linearizedBaseContracts": [
								3202,
								3326,
								336,
								2014,
								2026,
								409,
								1334,
								1191,
								1359,
								1269,
								1740,
								578
							],
							"name": "Alvara",
							"nameLocation": "379:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3012,
										"nodeType": "StructuredDocumentation",
										"src": "475:100:14",
										"text": " @dev Whenever an action is performed that is restricted, this error will be shown"
									},
									"errorSelector": "e647f2a4",
									"id": 3014,
									"name": "ActionRestricted",
									"nameLocation": "586:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:2:14"
									},
									"src": "580:25:14"
								},
								{
									"documentation": {
										"id": 3015,
										"nodeType": "StructuredDocumentation",
										"src": "615:74:14",
										"text": " @dev Error displayed when address is already greylisted"
									},
									"errorSelector": "a414c2b8",
									"id": 3017,
									"name": "AddressAlreadyGreylisted",
									"nameLocation": "700:24:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:14"
									},
									"src": "694:33:14"
								},
								{
									"documentation": {
										"id": 3018,
										"nodeType": "StructuredDocumentation",
										"src": "733:108:14",
										"text": " @dev Error displayed when an address is not in grey list and function tries to remove it "
									},
									"errorSelector": "17c33b65",
									"id": 3020,
									"name": "AddressNotInGreyList",
									"nameLocation": "852:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:14"
									},
									"src": "846:29:14"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "881:62:14",
										"text": " @dev Define role for managing the grey list"
									},
									"functionSelector": "dbd192d4",
									"id": 3026,
									"mutability": "constant",
									"name": "GREYLIST_MANAGER_ROLE",
									"nameLocation": "972:21:14",
									"nodeType": "VariableDeclaration",
									"scope": 3202,
									"src": "948:82:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3022,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "475245594c4953545f4d414e414745525f524f4c45",
												"id": 3024,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1006:23:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f",
													"typeString": "literal_string \"GREYLIST_MANAGER_ROLE\""
												},
												"value": "GREYLIST_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5be4d4bb045cde5abb3c363f9fc314c0f4f94dffcc1c7ba61871bdb28228c55f",
													"typeString": "literal_string \"GREYLIST_MANAGER_ROLE\""
												}
											],
											"id": 3023,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "996:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "996:34:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3027,
										"nodeType": "StructuredDocumentation",
										"src": "1041:76:14",
										"text": " @dev Mapping to keep track of greylisted wallet addresses"
									},
									"id": 3031,
									"mutability": "mutable",
									"name": "_greyList",
									"nameLocation": "1155:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3202,
									"src": "1122:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3030,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3028,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1130:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1122:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3029,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1141:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3032,
										"nodeType": "StructuredDocumentation",
										"src": "1171:134:14",
										"text": " @dev Emitted when an address is added to the grey list.\n @param account The address that has been greylisted."
									},
									"eventSelector": "4f03d75a12f5f2153536f14e57d9477eff6be012215a22e894dbc840db1c8f7e",
									"id": 3036,
									"name": "GreyListed",
									"nameLocation": "1316:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1343:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "1327:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:25:14"
									},
									"src": "1310:42:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3037,
										"nodeType": "StructuredDocumentation",
										"src": "1358:154:14",
										"text": " @dev Emitted when an address is removed from the grey list.\n @param account The address that has been removed from the grey list."
									},
									"eventSelector": "43a926d6828be5aecd76c987f92b63201c077e5ebf44ea16eecd0f2342bf5319",
									"id": 3041,
									"name": "RemovedFromGreyList",
									"nameLocation": "1523:19:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1559:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "1543:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:25:14"
									},
									"src": "1517:51:14"
								},
								{
									"body": {
										"id": 3048,
										"nodeType": "Block",
										"src": "1660:67:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3045,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "1670:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3047,
												"nodeType": "ExpressionStatement",
												"src": "1670:22:14"
											}
										]
									},
									"documentation": {
										"id": 3042,
										"nodeType": "StructuredDocumentation",
										"src": "1578:62:14",
										"text": " @dev Constructor will disable initializers."
									},
									"id": 3049,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:2:14"
									},
									"returnParameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:0:14"
									},
									"scope": 3202,
									"src": "1646:81:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3077,
										"nodeType": "Block",
										"src": "1814:179:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "416c76617261",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b9d66c3a9ce31efcb398e2185a18587f6be6d958c574f9d3178e3a47542828d",
																"typeString": "literal_string \"Alvara\""
															},
															"value": "Alvara"
														},
														{
															"hexValue": "414c5641",
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9caf2d540b898cdfac81b83e07c5ccc2b43b435ef7fd303389645f588cf0a2fa",
																"typeString": "literal_string \"ALVA\""
															},
															"value": "ALVA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3b9d66c3a9ce31efcb398e2185a18587f6be6d958c574f9d3178e3a47542828d",
																"typeString": "literal_string \"Alvara\""
															},
															{
																"typeIdentifier": "t_stringliteral_9caf2d540b898cdfac81b83e07c5ccc2b43b435ef7fd303389645f588cf0a2fa",
																"typeString": "literal_string \"ALVA\""
															}
														],
														"id": 3055,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1824:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3059,
												"nodeType": "ExpressionStatement",
												"src": "1824:30:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3060,
														"name": "__ERC20Burnable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "1864:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "1864:22:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3063,
														"name": "__WithSupervisedTransfers_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3294,
														"src": "1896:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3065,
												"nodeType": "ExpressionStatement",
												"src": "1896:32:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1945:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1949:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1945:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3230305f3030305f303030",
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1957:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200000000_by_1",
																	"typeString": "int_const 200000000"
																},
																"value": "200_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1971:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3071,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "1975:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1975:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1971:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1957:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3066,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "1939:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "1939:47:14"
											}
										]
									},
									"documentation": {
										"id": 3050,
										"nodeType": "StructuredDocumentation",
										"src": "1733:35:14",
										"text": " @dev Initializer"
									},
									"functionSelector": "8129fc1c",
									"id": 3078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3052,
												"name": "initializer",
												"nameLocations": [
													"1802:11:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 480,
												"src": "1802:11:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1802:11:14"
										}
									],
									"name": "initialize",
									"nameLocation": "1782:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:14"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:14"
									},
									"scope": 3202,
									"src": "1773:220:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3105,
										"nodeType": "Block",
										"src": "2266:167:14",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 3087,
														"name": "_greyList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "2280:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3089,
													"indexExpression": {
														"id": 3088,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "2290:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2280:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3094,
												"nodeType": "IfStatement",
												"src": "2276:82:14",
												"trueBody": {
													"id": 3093,
													"nodeType": "Block",
													"src": "2300:58:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3090,
																	"name": "AddressAlreadyGreylisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3017,
																	"src": "2321:24:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2321:26:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3092,
															"nodeType": "RevertStatement",
															"src": "2314:33:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3095,
															"name": "_greyList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "2367:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3097,
														"indexExpression": {
															"id": 3096,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "2377:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2367:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2388:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2367:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3100,
												"nodeType": "ExpressionStatement",
												"src": "2367:25:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "2418:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3101,
														"name": "GreyListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "2407:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3104,
												"nodeType": "EmitStatement",
												"src": "2402:24:14"
											}
										]
									},
									"documentation": {
										"id": 3079,
										"nodeType": "StructuredDocumentation",
										"src": "1999:183:14",
										"text": " @dev Adds a wallet address to the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\n @param account The address to be added to the grey list."
									},
									"functionSelector": "38f5a5e4",
									"id": 3106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3084,
													"name": "GREYLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3026,
													"src": "2243:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3085,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3083,
												"name": "onlyRole",
												"nameLocations": [
													"2234:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2234:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2234:31:14"
										}
									],
									"name": "addToGreyList",
									"nameLocation": "2196:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2218:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "2210:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:17:14"
									},
									"returnParameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2266:0:14"
									},
									"scope": 3202,
									"src": "2187:246:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3134,
										"nodeType": "Block",
										"src": "2714:217:14",
										"statements": [
											{
												"condition": {
													"id": 3118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2728:19:14",
													"subExpression": {
														"baseExpression": {
															"id": 3115,
															"name": "_greyList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "2729:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3117,
														"indexExpression": {
															"id": 3116,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "2739:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2729:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3123,
												"nodeType": "IfStatement",
												"src": "2724:122:14",
												"trueBody": {
													"id": 3122,
													"nodeType": "Block",
													"src": "2749:97:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3119,
																	"name": "AddressNotInGreyList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "2770:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3121,
															"nodeType": "RevertStatement",
															"src": "2763:29:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3124,
															"name": "_greyList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "2855:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3126,
														"indexExpression": {
															"id": 3125,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "2865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2855:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2876:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2855:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3129,
												"nodeType": "ExpressionStatement",
												"src": "2855:26:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "2916:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3130,
														"name": "RemovedFromGreyList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "2896:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3133,
												"nodeType": "EmitStatement",
												"src": "2891:33:14"
											}
										]
									},
									"documentation": {
										"id": 3107,
										"nodeType": "StructuredDocumentation",
										"src": "2439:186:14",
										"text": " @dev Removes an address from the grey list. Can only be called by the GREYLIST_MANAGER_ROLE holder.\n @param account The address to be removed from the grey list."
									},
									"functionSelector": "6e4af83e",
									"id": 3135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3112,
													"name": "GREYLIST_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3026,
													"src": "2691:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3111,
												"name": "onlyRole",
												"nameLocations": [
													"2682:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2682:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2682:31:14"
										}
									],
									"name": "removeFromGreyList",
									"nameLocation": "2639:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2666:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "2658:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:17:14"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:0:14"
									},
									"scope": 3202,
									"src": "2630:301:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3147,
										"nodeType": "Block",
										"src": "3197:43:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3143,
														"name": "_greyList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "3214:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3145,
													"indexExpression": {
														"id": 3144,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3138,
														"src": "3224:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3214:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3142,
												"id": 3146,
												"nodeType": "Return",
												"src": "3207:25:14"
											}
										]
									},
									"documentation": {
										"id": 3136,
										"nodeType": "StructuredDocumentation",
										"src": "2937:190:14",
										"text": " @dev Checks if an address is a part of grey list.\n @param account The address to be checked.\n @return true if the address is on the grey list, false otherwise."
									},
									"functionSelector": "a64a92a8",
									"id": 3148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGreyListed",
									"nameLocation": "3141:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3162:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "3154:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:17:14"
									},
									"returnParameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "3192:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3192:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3191:6:14"
									},
									"scope": 3202,
									"src": "3132:108:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										946
									],
									"body": {
										"id": 3175,
										"nodeType": "Block",
										"src": "3443:205:14",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 3159,
														"name": "_greyList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "3461:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3161,
													"indexExpression": {
														"id": 3160,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3151,
														"src": "3471:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3461:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3166,
												"nodeType": "IfStatement",
												"src": "3457:138:14",
												"trueBody": {
													"id": 3165,
													"nodeType": "Block",
													"src": "3478:117:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3162,
																	"name": "ActionRestricted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3014,
																	"src": "3503:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3503:18:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3164,
															"nodeType": "RevertStatement",
															"src": "3496:25:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3170,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "3624:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3171,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "3630:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3172,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "3634:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3167,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3608:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alvara_$3202_$",
																"typeString": "type(contract super Alvara)"
															}
														},
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3614:9:14",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "3608:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3174,
												"nodeType": "ExpressionStatement",
												"src": "3608:33:14"
											}
										]
									},
									"documentation": {
										"id": 3149,
										"nodeType": "StructuredDocumentation",
										"src": "3246:77:14",
										"text": " @dev Override _transfer to add a custom check for greylist"
									},
									"id": 3176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3337:9:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3434:8:14"
									},
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3364:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "3356:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3387:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "3379:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3379:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3408:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "3400:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3346:78:14"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3443:0:14"
									},
									"scope": 3202,
									"src": "3328:320:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										799
									],
									"body": {
										"id": 3200,
										"nodeType": "Block",
										"src": "3905:60:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3195,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3179,
															"src": "3941:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "3947:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3197,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "3951:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3193,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3922:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alvara_$3202_$",
																"typeString": "type(contract super Alvara)"
															}
														},
														"id": 3194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3928:12:14",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "3922:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3192,
												"id": 3199,
												"nodeType": "Return",
												"src": "3915:43:14"
											}
										]
									},
									"documentation": {
										"id": 3177,
										"nodeType": "StructuredDocumentation",
										"src": "3654:88:14",
										"text": " @dev Public Transfer From method including supervised transfer control"
									},
									"functionSelector": "23b872dd",
									"id": 3201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3187,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3179,
													"src": "3880:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3188,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3181,
													"src": "3886:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3186,
												"name": "supervisedTransferFrom",
												"nameLocations": [
													"3857:22:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3281,
												"src": "3857:22:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3857:32:14"
										}
									],
									"name": "transferFrom",
									"nameLocation": "3756:12:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3848:8:14"
									},
									"parameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3786:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "3778:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3808:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "3800:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3828:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "3820:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3768:72:14"
									},
									"returnParameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "3899:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3899:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:6:14"
									},
									"scope": 3202,
									"src": "3747:218:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3203,
							"src": "370:3597:14",
							"usedErrors": [
								3014,
								3017,
								3020,
								3212,
								3215
							],
							"usedEvents": [
								348,
								357,
								366,
								424,
								1203,
								1212,
								3036,
								3041,
								3220
							]
						}
					],
					"src": "32:3935:14"
				},
				"id": 14
			},
			"contracts/utils/WithSupervisedTransfers.sol": {
				"ast": {
					"absolutePath": "contracts/utils/WithSupervisedTransfers.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"WithSupervisedTransfers": [
							3326
						]
					},
					"id": 3327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 3206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3327,
							"sourceUnit": 337,
							"src": "57:113:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3205,
										"name": "AccessControlUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "65:24:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3208,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"611:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "611:24:15"
									},
									"id": 3209,
									"nodeType": "InheritanceSpecifier",
									"src": "611:24:15"
								}
							],
							"canonicalName": "WithSupervisedTransfers",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3207,
								"nodeType": "StructuredDocumentation",
								"src": "172:393:15",
								"text": " Supervised transfers allow the admin to whitelist addresses whoâ€™re allowed to receive the token using transferFrom method.\n The admin can also specify listing timestamp.\n After the token listing, anyone can tranferFrom without any restrictions forever.\n Before the listing, the admin can do anything they want, including adding providing and removing liquidity from the DEX."
							},
							"fullyImplemented": true,
							"id": 3326,
							"linearizedBaseContracts": [
								3326,
								336,
								2014,
								2026,
								409,
								1740,
								578
							],
							"name": "WithSupervisedTransfers",
							"nameLocation": "584:23:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3210,
										"nodeType": "StructuredDocumentation",
										"src": "642:214:15",
										"text": " @dev Once the listingTimestamp passes (which disables supervised transfers) it can never be set again.\n This ensures once supervised transfers are disabled, they can never be enabled again."
									},
									"errorSelector": "deaabdc2",
									"id": 3212,
									"name": "TokenAlreadyListed",
									"nameLocation": "867:18:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:2:15"
									},
									"src": "861:27:15"
								},
								{
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "894:79:15",
										"text": " @dev Used before listing if not allowed transferFrom occurs."
									},
									"errorSelector": "afae8e97",
									"id": 3215,
									"name": "SupervisedTranferFrom",
									"nameLocation": "984:21:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:15"
									},
									"src": "978:30:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3216,
										"nodeType": "StructuredDocumentation",
										"src": "1014:171:15",
										"text": " Called every time the listing timestamp is updated for easy off-chain tracking.\n @param newListingTimestamp the value of the new listing timestamp"
									},
									"eventSelector": "0e210431ce7e96eef28f9095d645802317660c1411f89b4d642456f027e7c8d6",
									"id": 3220,
									"name": "ListingTimestampUpdated",
									"nameLocation": "1196:23:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"indexed": false,
												"mutability": "mutable",
												"name": "newListingTimestamp",
												"nameLocation": "1227:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 3220,
												"src": "1220:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3217,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1220:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:28:15"
									},
									"src": "1190:58:15"
								},
								{
									"constant": true,
									"functionSelector": "4e695cca",
									"id": 3225,
									"mutability": "constant",
									"name": "ALLOWED_TRANSFER_FROM_ROLE",
									"nameLocation": "1278:26:15",
									"nodeType": "VariableDeclaration",
									"scope": 3326,
									"src": "1254:100:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3221,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "414c4c4f5745445f5452414e534645525f46524f4d5f524f4c45",
												"id": 3223,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1325:28:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0",
													"typeString": "literal_string \"ALLOWED_TRANSFER_FROM_ROLE\""
												},
												"value": "ALLOWED_TRANSFER_FROM_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2f26ac9ab74d35285b05b7b0d4a0f2ffdef33823bc15863d6299dbdd56e7b6b0",
													"typeString": "literal_string \"ALLOWED_TRANSFER_FROM_ROLE\""
												}
											],
											"id": 3222,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1315:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1315:39:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd39a2a8",
									"id": 3227,
									"mutability": "mutable",
									"name": "listingTimestamp",
									"nameLocation": "1374:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 3326,
									"src": "1360:30:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 3226,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1360:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3280,
										"nodeType": "Block",
										"src": "1727:571:15",
										"statements": [
											{
												"assignments": [
													3235
												],
												"declarations": [
													{
														"constant": false,
														"id": 3235,
														"mutability": "mutable",
														"name": "duringSupervisedTransfers",
														"nameLocation": "1742:25:15",
														"nodeType": "VariableDeclaration",
														"scope": 3280,
														"src": "1737:30:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3234,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1737:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3244,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3236,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "1770:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1790:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1770:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3239,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1807:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1813:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1807:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3241,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "1825:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "1807:34:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1770:71:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1737:104:15"
											},
											{
												"condition": {
													"id": 3245,
													"name": "duringSupervisedTransfers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3235,
													"src": "1855:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3278,
												"nodeType": "IfStatement",
												"src": "1851:430:15",
												"trueBody": {
													"id": 3277,
													"nodeType": "Block",
													"src": "1882:399:15",
													"statements": [
														{
															"assignments": [
																3247
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3247,
																	"mutability": "mutable",
																	"name": "transactionInvolvesAdmin",
																	"nameLocation": "1901:24:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3277,
																	"src": "1896:29:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3246,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1896:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3263,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 3249,
																				"name": "DEFAULT_ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "1936:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3250,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3230,
																				"src": "1956:4:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3248,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "1928:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:33:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 3253,
																				"name": "DEFAULT_ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "1989:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3254,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3232,
																				"src": "2009:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3252,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "1981:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1981:31:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1928:84:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3258,
																			"name": "DEFAULT_ADMIN_ROLE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "2040:18:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3259,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "2060:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2060:12:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3257,
																		"name": "hasRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "2032:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (bytes32,address) view returns (bool)"
																		}
																	},
																	"id": 3261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2032:41:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1928:145:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1896:177:15"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2108:25:15",
																	"subExpression": {
																		"id": 3264,
																		"name": "transactionInvolvesAdmin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3247,
																		"src": "2109:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2153:40:15",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 3267,
																				"name": "ALLOWED_TRANSFER_FROM_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3225,
																				"src": "2162:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 3268,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3232,
																				"src": "2190:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3266,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "2154:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 3269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2154:39:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2108:85:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3276,
															"nodeType": "IfStatement",
															"src": "2087:184:15",
															"trueBody": {
																"id": 3275,
																"nodeType": "Block",
																"src": "2208:63:15",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3272,
																				"name": "SupervisedTranferFrom",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3215,
																				"src": "2233:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2233:23:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 3274,
																		"nodeType": "RevertStatement",
																		"src": "2226:30:15"
																	}
																]
															}
														}
													]
												}
											},
											{
												"id": 3279,
												"nodeType": "PlaceholderStatement",
												"src": "2290:1:15"
											}
										]
									},
									"documentation": {
										"id": 3228,
										"nodeType": "StructuredDocumentation",
										"src": "1397:267:15",
										"text": " This modifier blocks all tranferFrom function calls unless:\n - the token has already been listed\n - OR the transaction involves admin\n - OR the reciver is whitelisted\n This modifier MUST be used on the transferFrom function."
									},
									"id": 3281,
									"name": "supervisedTransferFrom",
									"nameLocation": "1678:22:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1709:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "1701:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1723:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "1715:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:26:15"
									},
									"src": "1669:629:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3293,
										"nodeType": "Block",
										"src": "2448:61:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3288,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2469:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3289,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "2489:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2489:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3287,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2458:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2458:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3292,
												"nodeType": "ExpressionStatement",
												"src": "2458:44:15"
											}
										]
									},
									"documentation": {
										"id": 3282,
										"nodeType": "StructuredDocumentation",
										"src": "2304:71:15",
										"text": " The initialize grants the admin role to the deployer"
									},
									"id": 3294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3284,
												"name": "onlyInitializing",
												"nameLocations": [
													"2431:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2431:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2431:16:15"
										}
									],
									"name": "__WithSupervisedTransfers_init",
									"nameLocation": "2389:30:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2419:2:15"
									},
									"returnParameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:15"
									},
									"scope": 3326,
									"src": "2380:129:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3324,
										"nodeType": "Block",
										"src": "2881:240:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3303,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "2895:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2914:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2895:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3306,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2919:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2925:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2919:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 3308,
															"name": "listingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "2938:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2919:35:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2895:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3315,
												"nodeType": "IfStatement",
												"src": "2891:117:15",
												"trueBody": {
													"id": 3314,
													"nodeType": "Block",
													"src": "2956:52:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3311,
																	"name": "TokenAlreadyListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "2977:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2977:20:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3313,
															"nodeType": "RevertStatement",
															"src": "2970:27:15"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3317,
															"name": "newListingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3297,
															"src": "3046:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 3316,
														"name": "ListingTimestampUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3220,
														"src": "3022:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
															"typeString": "function (uint32)"
														}
													},
													"id": 3318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3319,
												"nodeType": "EmitStatement",
												"src": "3017:49:15"
											},
											{
												"expression": {
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3320,
														"name": "listingTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3227,
														"src": "3076:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3321,
														"name": "newListingTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3297,
														"src": "3095:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3076:38:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3323,
												"nodeType": "ExpressionStatement",
												"src": "3076:38:15"
											}
										]
									},
									"documentation": {
										"id": 3295,
										"nodeType": "StructuredDocumentation",
										"src": "2515:246:15",
										"text": " Allows the admin to specify when the token should become tradeable.\n Once the token is tradeable, transferFrom can never be supervised again.\n @param newListingTimestamp epoch time of when the token is listed on DEX"
									},
									"functionSelector": "e90cdd1c",
									"id": 3325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3300,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "2857:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3299,
												"name": "onlyRole",
												"nameLocations": [
													"2848:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2848:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2848:28:15"
										}
									],
									"name": "setListingTimestamp",
									"nameLocation": "2775:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "newListingTimestamp",
												"nameLocation": "2802:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 3325,
												"src": "2795:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3296,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2795:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:28:15"
									},
									"returnParameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2881:0:15"
									},
									"scope": 3326,
									"src": "2766:355:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3327,
							"src": "566:2557:15",
							"usedErrors": [
								3212,
								3215
							],
							"usedEvents": [
								348,
								357,
								366,
								424,
								3220
							]
						}
					],
					"src": "32:3092:15"
				},
				"id": 15
			}
		}
	}
}