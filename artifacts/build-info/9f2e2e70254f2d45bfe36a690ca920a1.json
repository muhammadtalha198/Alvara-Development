{
	"id": "9f2e2e70254f2d45bfe36a690ca920a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/BSKTPairBeacon_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/proxy/beacon/IBeacon.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev The `implementation` of the beacon is invalid.\n     */\n    error BeaconInvalidImplementation(address implementation);\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\n     */\n    constructor(address implementation_, address initialOwner) Ownable(initialOwner) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert BeaconInvalidImplementation(newImplementation);\n        }\n        _implementation = newImplementation;\n        emit Upgraded(newImplementation);\n    }\n}\n\n// File: contracts/tokens/BSKTPairBeacon.sol\n\n\npragma solidity ^0.8.26;\n\n\ncontract BSKTPairBeacon is UpgradeableBeacon {\n    constructor(address implementation) UpgradeableBeacon(implementation, _msgSender()) {}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens/BSKTPairBeacon_flattened.sol": {
				"BSKTPairBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "BeaconInvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"BeaconInvalidImplementation(address)": [
								{
									"details": "The `implementation` of the beacon is invalid."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6811:6950  contract BSKTPairBeacon is UpgradeableBeacon {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6862:6948  constructor(address implementation) UpgradeableBeacon(implementation, _msgSender()) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6916:6930  implementation */\n  dup1\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":1259:1269  msg.sender */\n  caller\n  dup1\n  dup1\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2733:2828  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2814:2815  0 */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2733:2828  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2869  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2856:2868  initialOwner */\n  dup2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2855  _transferOwnership */\n  tag_14\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2869  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5702  _setImplementation(implementation_) */\n  tag_16\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5686:5701  implementation_ */\n  dup3\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5685  _setImplementation */\n  tag_17\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5702  _setImplementation(implementation_) */\n  jump\t// in\ntag_16:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5576:5709  constructor(address implementation_, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6862:6948  constructor(address implementation) UpgradeableBeacon(implementation, _msgSender()) {} */\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6811:6950  contract BSKTPairBeacon is UpgradeableBeacon {... */\n  jump(tag_25)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4484:4501  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n  swap1\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4439:4563  {... */\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\ntag_17:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6543  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6555  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6559:6560  0 */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6560  newImplementation.code.length == 0 */\n  sub\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n  tag_23\n  jumpi\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe2, 0x211eb159)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":473:505   */\n  dup3\n  and\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  tag_11\n    /* \"#utility.yul\":309:512   */\n  jump\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\ntag_23:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6664  _implementation */\n  0x01\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6684  _implementation = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6699:6726  Upgraded(newImplementation) */\n  mload(0x40)\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_27:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_28:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_25:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6811:6950  contract BSKTPairBeacon is UpgradeableBeacon {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6811:6950  contract BSKTPairBeacon is UpgradeableBeacon {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n    tag_4:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5868:5883  _implementation */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3102:3187  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3148:3155  address */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3174:3180  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3102:3187  function owner() public view virtual returns (address) {... */\n      jump(tag_12)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4007:4222  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_8\n      tag_22\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_11:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_25\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6267  _setImplementation(newImplementation) */\n      tag_28\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6249:6266  newImplementation */\n      dup2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6248  _setImplementation */\n      tag_29\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6267  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_32\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3851  _transferOwnership(address(0)) */\n      tag_34\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3848:3849  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3839  _transferOwnership */\n      tag_35\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4007:4222  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_38\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4091:4113  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4087:4178  if (newOwner == address(0)) {... */\n      tag_40\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4164:4165  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4087:4178  if (newOwner == address(0)) {... */\n    tag_40:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4215  _transferOwnership(newOwner) */\n      tag_28\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4206:4214  newOwner */\n      dup2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4205  _transferOwnership */\n      tag_35\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4215  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3260:3422  function _checkOwner() internal view virtual {... */\n    tag_26:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3148:3155  address */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3174:3180  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":1259:1269  msg.sender */\n      caller\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3319:3342  owner() != _msgSender() */\n      eq\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3315:3416  if (owner() != _msgSender()) {... */\n      tag_34\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":1259:1269  msg.sender */\n      caller\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_41\n        /* \"#utility.yul\":305:508   */\n      jump\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n    tag_29:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6543  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6555  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6559:6560  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6560  newImplementation.code.length == 0 */\n      sub\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n      tag_51\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe2, 0x211eb159)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      dup3\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      tag_41\n        /* \"#utility.yul\":305:508   */\n      jump\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n    tag_51:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6664  _implementation */\n      0x01\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6684  _implementation = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6699:6726  Upgraded(newImplementation) */\n      mload(0x40)\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4484:4501  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n      swap1\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4439:4563  {... */\n      pop\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_10:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_57:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_58:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208eebad1505d56e0a3dca074a6d63437fd651ffb3c6f798077808146e71f7eb8d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_265": {
									"entryPoint": 192,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 113,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:1",
										"nodeType": "YulBlock",
										"src": "0:514:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "410:102:1",
													"nodeType": "YulBlock",
													"src": "410:102:1",
													"statements": [
														{
															"nativeSrc": "420:26:1",
															"nodeType": "YulAssignment",
															"src": "420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:1",
																		"nodeType": "YulLiteral",
																		"src": "443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nativeSrc": "428:18:1",
																"nodeType": "YulFunctionCall",
																"src": "428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:1",
																								"nodeType": "YulLiteral",
																								"src": "493:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:1",
																								"nodeType": "YulLiteral",
																								"src": "498:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:1"
																						},
																						"nativeSrc": "489:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:1",
																						"nodeType": "YulLiteral",
																						"src": "502:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:1"
																				},
																				"nativeSrc": "485:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:1"
																		},
																		"nativeSrc": "473:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																},
																"nativeSrc": "455:51:1",
																"nodeType": "YulFunctionCall",
																"src": "455:51:1"
															},
															"nativeSrc": "455:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:1",
														"nodeType": "YulTypedName",
														"src": "379:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:1",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:1",
														"nodeType": "YulTypedName",
														"src": "401:4:1",
														"type": ""
													}
												],
												"src": "309:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516103fc3803806103fc83398101604081905261002e9161013e565b8033808061005657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61005f81610071565b50610069826100c0565b50505061016b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b5f036100f55760405163211eb15960e21b81526001600160a01b038216600482015260240161004d565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f6020828403121561014e575f5ffd5b81516001600160a01b0381168114610164575f5ffd5b9392505050565b610284806101785f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f5ffd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f5ffd5b81356001600160a01b0381168114610247575f5ffd5b939250505056fea26469706673582212208eebad1505d56e0a3dca074a6d63437fd651ffb3c6f798077808146e71f7eb8d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3FC CODESIZE SUB DUP1 PUSH2 0x3FC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x13E JUMP JUMPDEST DUP1 CALLER DUP1 DUP1 PUSH2 0x56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F DUP2 PUSH2 0x71 JUMP JUMPDEST POP PUSH2 0x69 DUP3 PUSH2 0xC0 JUMP JUMPDEST POP POP POP PUSH2 0x16B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x164 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP1 PUSH2 0x178 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xD6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B JUMP JUMPDEST PUSH2 0x6C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x128 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x154 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE PUSH2 0x128 JUMP JUMPDEST PUSH2 0xE7 PUSH0 PUSH2 0x1D2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEB 0xAD ISZERO SDIV 0xD5 PUSH15 0xA3DCA074A6D63437FD651FFB3C6F7 SWAP9 SMOD PUSH25 0x8146E71F7EB8D64736F6C634300081C003300000000000000 ",
							"sourceMap": "6811:139:0:-:0;;;6862:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6916:14;1259:10;;;2733:95;;2786:31;;-1:-1:-1;;;2786:31:0;;2814:1;2786:31;;;455:51:1;428:18;;2786:31:0;;;;;;;;2733:95;2837:32;2856:12;2837:18;:32::i;:::-;-1:-1:-1;5667:35:0::1;5686:15:::0;5667:18:::1;:35::i;:::-;5576:133:::0;;6862:86;6811:139;;4376:187;4449:16;4468:6;;-1:-1:-1;;;;;4484:17:0;;;-1:-1:-1;;;;;;4484:17:0;;;;;;4516:40;;4468:6;;;;;;;4516:40;;4449:16;4516:40;4439:124;4376:187;:::o;6449:284::-;6526:17;-1:-1:-1;;;;;6526:29:0;;6559:1;6526:34;6522:118;;6583:46;;-1:-1:-1;;;6583:46:0;;-1:-1:-1;;;;;473:32:1;;6583:46:0;;;455:51:1;428:18;;6583:46:0;309:203:1;6522:118:0;6649:15;:35;;-1:-1:-1;;;;;;6649:35:0;-1:-1:-1;;;;;6649:35:0;;;;;;;;6699:27;;;;-1:-1:-1;;6699:27:0;6449:284;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:203::-;6811:139:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_120": {
									"entryPoint": 296,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_265": {
									"entryPoint": 340,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 466,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@implementation_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_103": {
									"entryPoint": null,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_134": {
									"entryPoint": 214,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_162": {
									"entryPoint": 233,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeTo_239": {
									"entryPoint": 194,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:510:1",
										"nodeType": "YulBlock",
										"src": "0:510:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:1",
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:1",
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nativeSrc": "256:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nativeSrc": "256:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:1",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:1",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nativeSrc": "235:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:1",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nativeSrc": "231:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:50:1",
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nativeSrc": "200:70:1",
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nativeSrc": "279:15:1",
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:1",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nativeSrc": "406:102:1",
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nativeSrc": "416:26:1",
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nativeSrc": "424:18:1",
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "489:3:1",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "494:1:1",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "485:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nativeSrc": "485:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "498:1:1",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "481:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nativeSrc": "481:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nativeSrc": "469:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nativeSrc": "451:51:1",
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nativeSrc": "451:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "305:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:1",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:1",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:1",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f5ffd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f5ffd5b81356001600160a01b0381168114610247575f5ffd5b939250505056fea26469706673582212208eebad1505d56e0a3dca074a6d63437fd651ffb3c6f798077808146e71f7eb8d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xD6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B JUMP JUMPDEST PUSH2 0x6C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x128 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x154 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE PUSH2 0x128 JUMP JUMPDEST PUSH2 0xE7 PUSH0 PUSH2 0x1D2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEB 0xAD ISZERO SDIV 0xD5 PUSH15 0xA3DCA074A6D63437FD651FFB3C6F7 SWAP9 SMOD PUSH25 0x8146E71F7EB8D64736F6C634300081C003300000000000000 ",
							"sourceMap": "6811:139:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6149:125;;;;;;:::i;:::-;;:::i;:::-;;5787:103;5868:15;;-1:-1:-1;;;;;5868:15:0;5787:103;;;-1:-1:-1;;;;;469:32:1;;;451:51;;439:2;424:18;5787:103:0;;;;;;;3757:101;;;:::i;3102:85::-;3148:7;3174:6;-1:-1:-1;;;;;3174:6:0;3102:85;;4007:215;;;;;;:::i;:::-;;:::i;6149:125::-;2995:13;:11;:13::i;:::-;6230:37:::1;6249:17;6230:18;:37::i;:::-;6149:125:::0;:::o;3757:101::-;2995:13;:11;:13::i;:::-;3821:30:::1;3848:1;3821:18;:30::i;:::-;3757:101::o:0;4007:215::-;2995:13;:11;:13::i;:::-;-1:-1:-1;;;;;4091:22:0;::::1;4087:91;;4136:31;::::0;-1:-1:-1;;;4136:31:0;;4164:1:::1;4136:31;::::0;::::1;451:51:1::0;424:18;;4136:31:0::1;;;;;;;;4087:91;4187:28;4206:8;4187:18;:28::i;3260:162::-:0;3148:7;3174:6;-1:-1:-1;;;;;3174:6:0;1259:10;3319:23;3315:101;;3365:40;;-1:-1:-1;;;3365:40:0;;1259:10;3365:40;;;451:51:1;424:18;;3365:40:0;305:203:1;6449:284:0;6526:17;-1:-1:-1;;;;;6526:29:0;;6559:1;6526:34;6522:118;;6583:46;;-1:-1:-1;;;6583:46:0;;-1:-1:-1;;;;;469:32:1;;6583:46:0;;;451:51:1;424:18;;6583:46:0;305:203:1;6522:118:0;6649:15;:35;;-1:-1:-1;;;;;;6649:35:0;-1:-1:-1;;;;;6649:35:0;;;;;;;;6699:27;;;;-1:-1:-1;;6699:27:0;6449:284;:::o;4376:187::-;4449:16;4468:6;;-1:-1:-1;;;;;4484:17:0;;;-1:-1:-1;;;;;;4484:17:0;;;;;;4516:40;;4468:6;;;;;;;4516:40;;4449:16;4516:40;4439:124;4376:187;:::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "128800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"implementation()": "2307",
								"owner()": "2361",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28360",
								"upgradeTo(address)": "30482"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6862,
									"end": 6948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6916,
									"end": 6930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1259,
									"end": 1269,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1259,
									"end": 1269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1259,
									"end": 1269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2856,
									"end": 2868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2855,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2837,
									"end": 2869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5686,
									"end": 5701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5667,
									"end": 5685,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5667,
									"end": 5702,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6862,
									"end": 6948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4449,
									"end": 4465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4449,
									"end": 4465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4439,
									"end": 4563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6526,
									"end": 6543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6526,
									"end": 6555,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6526,
									"end": 6555,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 6559,
									"end": 6560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6526,
									"end": 6560,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "211EB159"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 473,
									"end": 505,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 473,
									"end": 505,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6664,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "PUSH",
									"source": 0,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6811,
									"end": 6950,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208eebad1505d56e0a3dca074a6d63437fd651ffb3c6f798077808146e71f7eb8d64736f6c634300081c0033",
									".code": [
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3757,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4007,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4007,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6249,
											"end": 6266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6230,
											"end": 6267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3848,
											"end": 3849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3821,
											"end": 3851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4206,
											"end": 4214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4187,
											"end": 4215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3260,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3315,
											"end": 3416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 6543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 6555,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6559,
											"end": 6560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "211EB159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokens/BSKTPairBeacon_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"BeaconInvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BeaconInvalidImplementation(address)\":[{\"details\":\"The `implementation` of the beacon is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":\"BSKTPairBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":{\"keccak256\":\"0x4738b09c7bf554eddae62284b82029b9776da1d3fec4ffbb3fe73035da86f2ca\",\"urls\":[\"bzz-raw://a04f066cdf6b4227b8a639d0d6fbbc98ca4805ad0ee970626d66cadba52143c8\",\"dweb:/ipfs/Qmd7FwJBNMSCEPbDb8UHYnsjP6upkVMk8f1ydfeY8C4MX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "contracts/tokens/BSKTPairBeacon_flattened.sol:BSKTPairBeacon",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 191,
								"contract": "contracts/tokens/BSKTPairBeacon_flattened.sol:BSKTPairBeacon",
								"label": "_implementation",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":{\"keccak256\":\"0x4738b09c7bf554eddae62284b82029b9776da1d3fec4ffbb3fe73035da86f2ca\",\"urls\":[\"bzz-raw://a04f066cdf6b4227b8a639d0d6fbbc98ca4805ad0ee970626d66cadba52143c8\",\"dweb:/ipfs/Qmd7FwJBNMSCEPbDb8UHYnsjP6upkVMk8f1ydfeY8C4MX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":{\"keccak256\":\"0x4738b09c7bf554eddae62284b82029b9776da1d3fec4ffbb3fe73035da86f2ca\",\"urls\":[\"bzz-raw://a04f066cdf6b4227b8a639d0d6fbbc98ca4805ad0ee970626d66cadba52143c8\",\"dweb:/ipfs/Qmd7FwJBNMSCEPbDb8UHYnsjP6upkVMk8f1ydfeY8C4MX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":{\"keccak256\":\"0x4738b09c7bf554eddae62284b82029b9776da1d3fec4ffbb3fe73035da86f2ca\",\"urls\":[\"bzz-raw://a04f066cdf6b4227b8a639d0d6fbbc98ca4805ad0ee970626d66cadba52143c8\",\"dweb:/ipfs/Qmd7FwJBNMSCEPbDb8UHYnsjP6upkVMk8f1ydfeY8C4MX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "contracts/tokens/BSKTPairBeacon_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "BeaconInvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"errors": {
							"BeaconInvalidImplementation(address)": [
								{
									"details": "The `implementation` of the beacon is invalid."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the initial owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5072:6735  contract UpgradeableBeacon is IBeacon, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5576:5709  constructor(address implementation_, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5643:5655  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2737:2763  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2733:2828  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2814:2815  0 */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2786:2817  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2733:2828  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2869  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2856:2868  initialOwner */\n  dup2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2855  _transferOwnership */\n  tag_11\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2837:2869  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5702  _setImplementation(implementation_) */\n  tag_13\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5686:5701  implementation_ */\n  dup3\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5685  _setImplementation */\n  tag_14\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5667:5702  _setImplementation(implementation_) */\n  jump\t// in\ntag_13:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5576:5709  constructor(address implementation_, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5072:6735  contract UpgradeableBeacon is IBeacon, Ownable {... */\n  jump(tag_21)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4484:4501  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n  swap1\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4439:4563  {... */\n  pop\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\ntag_14:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6543  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6555  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6559:6560  0 */\n  0x00\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6560  newImplementation.code.length == 0 */\n  sub\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe2, 0x211eb159)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":658:690   */\n  dup3\n  and\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n  tag_8\n    /* \"#utility.yul\":494:697   */\n  jump\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6664  _implementation */\n  0x01\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6684  _implementation = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6699:6726  Upgraded(newImplementation) */\n  mload(0x40)\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_23:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_25:\n    /* \"#utility.yul\":375:415   */\n  tag_26\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_27\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_21:\n    /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5072:6735  contract UpgradeableBeacon is IBeacon, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5072:6735  contract UpgradeableBeacon is IBeacon, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n    tag_4:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5868:5883  _implementation */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":5787:5890  function implementation() public view virtual returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3102:3187  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3148:3155  address */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3174:3180  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3102:3187  function owner() public view virtual returns (address) {... */\n      jump(tag_12)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4007:4222  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_8\n      tag_22\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_11:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_25\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6267  _setImplementation(newImplementation) */\n      tag_28\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6249:6266  newImplementation */\n      dup2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6248  _setImplementation */\n      tag_29\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6230:6267  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6149:6274  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_32\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3851  _transferOwnership(address(0)) */\n      tag_34\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3848:3849  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3839  _transferOwnership */\n      tag_35\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3821:3851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3757:3858  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4007:4222  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      tag_38\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3006  _checkOwner */\n      tag_26\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":2995:3008  _checkOwner() */\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4091:4113  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4087:4178  if (newOwner == address(0)) {... */\n      tag_40\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4164:4165  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4136:4167  OwnableInvalidOwner(address(0)) */\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4087:4178  if (newOwner == address(0)) {... */\n    tag_40:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4215  _transferOwnership(newOwner) */\n      tag_28\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4206:4214  newOwner */\n      dup2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4205  _transferOwnership */\n      tag_35\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4187:4215  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3260:3422  function _checkOwner() internal view virtual {... */\n    tag_26:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3148:3155  address */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3174:3180  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":1259:1269  msg.sender */\n      caller\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3319:3342  owner() != _msgSender() */\n      eq\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3315:3416  if (owner() != _msgSender()) {... */\n      tag_34\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":1259:1269  msg.sender */\n      caller\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":3365:3405  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_41\n        /* \"#utility.yul\":305:508   */\n      jump\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n    tag_29:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6543  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6555  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6559:6560  0 */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6526:6560  newImplementation.code.length == 0 */\n      sub\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n      tag_51\n      jumpi\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe2, 0x211eb159)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      dup3\n      and\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:502   */\n      mstore\n        /* \"#utility.yul\":424:442   */\n      0x24\n      add\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6583:6629  BeaconInvalidImplementation(newImplementation) */\n      tag_41\n        /* \"#utility.yul\":305:508   */\n      jump\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6522:6640  if (newImplementation.code.length == 0) {... */\n    tag_51:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6664  _implementation */\n      0x01\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6649:6684  _implementation = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6699:6726  Upgraded(newImplementation) */\n      mload(0x40)\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":6449:6733  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n      0x00\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4484:4501  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4468:4474  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4449:4465  address oldOwner */\n      swap1\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4516:4556  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4439:4563  {... */\n      pop\n        /* \"contracts/tokens/BSKTPairBeacon_flattened.sol\":4376:4563  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_10:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_57:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_58:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063c310996e682e3927816105e3502f4a55cf850c5a7f2b002b86076add5832f864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_265": {
									"entryPoint": 198,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 119,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:1",
										"nodeType": "YulBlock",
										"src": "0:699:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "294:195:1",
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:1",
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:1",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:1",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nativeSrc": "342:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nativeSrc": "342:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nativeSrc": "311:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:1",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nativeSrc": "307:32:1",
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nativeSrc": "304:52:1",
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nativeSrc": "365:50:1",
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nativeSrc": "375:40:1",
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nativeSrc": "424:59:1",
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:1",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nativeSrc": "464:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nativeSrc": "434:49:1",
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:1",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:1",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nativeSrc": "595:102:1",
													"nodeType": "YulBlock",
													"src": "595:102:1",
													"statements": [
														{
															"nativeSrc": "605:26:1",
															"nodeType": "YulAssignment",
															"src": "605:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:1"
																},
																"nativeSrc": "613:18:1",
																"nodeType": "YulFunctionCall",
																"src": "613:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:1",
																								"nodeType": "YulLiteral",
																								"src": "678:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:1",
																								"nodeType": "YulLiteral",
																								"src": "683:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:1"
																						},
																						"nativeSrc": "674:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:1",
																						"nodeType": "YulLiteral",
																						"src": "687:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:1"
																				},
																				"nativeSrc": "670:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:1"
																		},
																		"nativeSrc": "658:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																},
																"nativeSrc": "640:51:1",
																"nodeType": "YulFunctionCall",
																"src": "640:51:1"
															},
															"nativeSrc": "640:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:1",
														"nodeType": "YulTypedName",
														"src": "564:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:1",
														"nodeType": "YulTypedName",
														"src": "586:4:1",
														"type": ""
													}
												],
												"src": "494:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161042138038061042183398101604081905261002e9161015f565b806001600160a01b03811661005d57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006681610077565b50610070826100c6565b5050610190565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b5f036100fb5760405163211eb15960e21b81526001600160a01b0382166004820152602401610054565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b80516001600160a01b038116811461015a575f5ffd5b919050565b5f5f60408385031215610170575f5ffd5b61017983610144565b915061018760208401610144565b90509250929050565b6102848061019d5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f5ffd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f5ffd5b81356001600160a01b0381168114610247575f5ffd5b939250505056fea264697066735822122063c310996e682e3927816105e3502f4a55cf850c5a7f2b002b86076add5832f864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x421 CODESIZE SUB DUP1 PUSH2 0x421 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66 DUP2 PUSH2 0x77 JUMP JUMPDEST POP PUSH2 0x70 DUP3 PUSH2 0xC6 JUMP JUMPDEST POP POP PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x179 DUP4 PUSH2 0x144 JUMP JUMPDEST SWAP2 POP PUSH2 0x187 PUSH1 0x20 DUP5 ADD PUSH2 0x144 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP1 PUSH2 0x19D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xD6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B JUMP JUMPDEST PUSH2 0x6C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x128 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x154 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE PUSH2 0x128 JUMP JUMPDEST PUSH2 0xE7 PUSH0 PUSH2 0x1D2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC310996E PUSH9 0x2E3927816105E3502F BLOBBASEFEE SSTORE 0xCF DUP6 0xC GAS PUSH32 0x2B002B86076ADD5832F864736F6C634300081C00330000000000000000000000 ",
							"sourceMap": "5072:1663:0:-:0;;;5576:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5643:12;-1:-1:-1;;;;;2737:26:0;;2733:95;;2786:31;;-1:-1:-1;;;2786:31:0;;2814:1;2786:31;;;640:51:1;613:18;;2786:31:0;;;;;;;;2733:95;2837:32;2856:12;2837:18;:32::i;:::-;-1:-1:-1;5667:35:0::1;5686:15:::0;5667:18:::1;:35::i;:::-;5576:133:::0;;5072:1663;;4376:187;4449:16;4468:6;;-1:-1:-1;;;;;4484:17:0;;;-1:-1:-1;;;;;;4484:17:0;;;;;;4516:40;;4468:6;;;;;;;4516:40;;4449:16;4516:40;4439:124;4376:187;:::o;6449:284::-;6526:17;-1:-1:-1;;;;;6526:29:0;;6559:1;6526:34;6522:118;;6583:46;;-1:-1:-1;;;6583:46:0;;-1:-1:-1;;;;;658:32:1;;6583:46:0;;;640:51:1;613:18;;6583:46:0;494:203:1;6522:118:0;6649:15;:35;;-1:-1:-1;;;;;;6649:35:0;-1:-1:-1;;;;;6649:35:0;;;;;;;;6699:27;;;;-1:-1:-1;;6699:27:0;6449:284;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;5072:1663:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_120": {
									"entryPoint": 296,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_265": {
									"entryPoint": 340,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 466,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@implementation_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_103": {
									"entryPoint": null,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_134": {
									"entryPoint": 214,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_162": {
									"entryPoint": 233,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeTo_239": {
									"entryPoint": 194,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:510:1",
										"nodeType": "YulBlock",
										"src": "0:510:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:1",
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:1",
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nativeSrc": "256:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nativeSrc": "256:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:1",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:1",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nativeSrc": "235:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:1",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nativeSrc": "231:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:50:1",
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nativeSrc": "200:70:1",
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nativeSrc": "279:15:1",
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:1",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nativeSrc": "406:102:1",
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nativeSrc": "416:26:1",
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nativeSrc": "424:18:1",
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "489:3:1",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "494:1:1",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "485:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nativeSrc": "485:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "498:1:1",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "481:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nativeSrc": "481:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nativeSrc": "469:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nativeSrc": "451:51:1",
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nativeSrc": "451:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "305:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:1",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:1",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:1",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f5ffd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f5ffd5b81356001600160a01b0381168114610247575f5ffd5b939250505056fea264697066735822122063c310996e682e3927816105e3502f4a55cf850c5a7f2b002b86076add5832f864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xD6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B JUMP JUMPDEST PUSH2 0x6C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x128 JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x154 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE PUSH2 0x128 JUMP JUMPDEST PUSH2 0xE7 PUSH0 PUSH2 0x1D2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH4 0x211EB159 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x116 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC310996E PUSH9 0x2E3927816105E3502F BLOBBASEFEE SSTORE 0xCF DUP6 0xC GAS PUSH32 0x2B002B86076ADD5832F864736F6C634300081C00330000000000000000000000 ",
							"sourceMap": "5072:1663:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6149:125;;;;;;:::i;:::-;;:::i;:::-;;5787:103;5868:15;;-1:-1:-1;;;;;5868:15:0;5787:103;;;-1:-1:-1;;;;;469:32:1;;;451:51;;439:2;424:18;5787:103:0;;;;;;;3757:101;;;:::i;3102:85::-;3148:7;3174:6;-1:-1:-1;;;;;3174:6:0;3102:85;;4007:215;;;;;;:::i;:::-;;:::i;6149:125::-;2995:13;:11;:13::i;:::-;6230:37:::1;6249:17;6230:18;:37::i;:::-;6149:125:::0;:::o;3757:101::-;2995:13;:11;:13::i;:::-;3821:30:::1;3848:1;3821:18;:30::i;:::-;3757:101::o:0;4007:215::-;2995:13;:11;:13::i;:::-;-1:-1:-1;;;;;4091:22:0;::::1;4087:91;;4136:31;::::0;-1:-1:-1;;;4136:31:0;;4164:1:::1;4136:31;::::0;::::1;451:51:1::0;424:18;;4136:31:0::1;;;;;;;;4087:91;4187:28;4206:8;4187:18;:28::i;3260:162::-:0;3148:7;3174:6;-1:-1:-1;;;;;3174:6:0;1259:10;3319:23;3315:101;;3365:40;;-1:-1:-1;;;3365:40:0;;1259:10;3365:40;;;451:51:1;424:18;;3365:40:0;305:203:1;6449:284:0;6526:17;-1:-1:-1;;;;;6526:29:0;;6559:1;6526:34;6522:118;;6583:46;;-1:-1:-1;;;6583:46:0;;-1:-1:-1;;;;;469:32:1;;6583:46:0;;;451:51:1;424:18;;6583:46:0;305:203:1;6522:118:0;6649:15;:35;;-1:-1:-1;;;;;;6649:35:0;-1:-1:-1;;;;;6649:35:0;;;;;;;;6699:27;;;;-1:-1:-1;;6699:27:0;6449:284;:::o;4376:187::-;4449:16;4468:6;;-1:-1:-1;;;;;4484:17:0;;;-1:-1:-1;;;;;;4484:17:0;;;;;;4516:40;;4468:6;;;;;;;4516:40;;4449:16;4516:40;4439:124;4376:187;:::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "128800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"implementation()": "2307",
								"owner()": "2361",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28360",
								"upgradeTo(address)": "30482"
							},
							"internal": {
								"_setImplementation(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5576,
									"end": 5709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5643,
									"end": 5655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2737,
									"end": 2763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2737,
									"end": 2763,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2733,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2856,
									"end": 2868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2855,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2837,
									"end": 2869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2837,
									"end": 2869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5686,
									"end": 5701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5667,
									"end": 5685,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5667,
									"end": 5702,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5667,
									"end": 5702,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5576,
									"end": 5709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4449,
									"end": 4465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4484,
									"end": 4501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4468,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4449,
									"end": 4465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4516,
									"end": 4556,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4439,
									"end": 4563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4376,
									"end": 4563,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6526,
									"end": 6543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6526,
									"end": 6555,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6526,
									"end": 6555,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 6559,
									"end": 6560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6526,
									"end": 6560,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "211EB159"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 658,
									"end": 690,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 690,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6583,
									"end": 6629,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6522,
									"end": 6640,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6664,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6684,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "PUSH",
									"source": 0,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 6699,
									"end": 6726,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5072,
									"end": 6735,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063c310996e682e3927816105e3502f4a55cf850c5a7f2b002b86076add5832f864736f6c634300081c0033",
									".code": [
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 6735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3757,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3102,
											"end": 3187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4007,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4007,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6249,
											"end": 6266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6230,
											"end": 6267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6230,
											"end": 6267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3757,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3848,
											"end": 3849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3821,
											"end": 3851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3821,
											"end": 3851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4007,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2995,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2995,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4206,
											"end": 4214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4187,
											"end": 4215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3260,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3315,
											"end": 3416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 6543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 6555,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6559,
											"end": 6560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "211EB159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6726,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokens/BSKTPairBeacon_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"BeaconInvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"errors\":{\"BeaconInvalidImplementation(address)\":[{\"details\":\"The `implementation` of the beacon is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/BSKTPairBeacon_flattened.sol\":{\"keccak256\":\"0x4738b09c7bf554eddae62284b82029b9776da1d3fec4ffbb3fe73035da86f2ca\",\"urls\":[\"bzz-raw://a04f066cdf6b4227b8a639d0d6fbbc98ca4805ad0ee970626d66cadba52143c8\",\"dweb:/ipfs/Qmd7FwJBNMSCEPbDb8UHYnsjP6upkVMk8f1ydfeY8C4MX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "contracts/tokens/BSKTPairBeacon_flattened.sol:UpgradeableBeacon",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 191,
								"contract": "contracts/tokens/BSKTPairBeacon_flattened.sol:UpgradeableBeacon",
								"label": "_implementation",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/tokens/BSKTPairBeacon_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/tokens/BSKTPairBeacon_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/tokens/BSKTPairBeacon_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/BSKTPairBeacon_flattened.sol",
					"exportedSymbols": {
						"BSKTPairBeacon": [
							281
						],
						"Context": [
							38
						],
						"IBeacon": [
							9
						],
						"Ownable": [
							183
						],
						"UpgradeableBeacon": [
							266
						]
					},
					"id": 282,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "137:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "164:79:0",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IBeacon",
							"nameLocation": "254:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "268:168:0",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "450:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "490:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:9:0"
									},
									"scope": 9,
									"src": "441:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 282,
							"src": "244:257:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 10,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "625:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 11,
								"nodeType": "StructuredDocumentation",
								"src": "651:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Context",
							"nameLocation": "1166:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "1242:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1259:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1263:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1259:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "1252:17:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1189:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:9:0"
									},
									"scope": 38,
									"src": "1180:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1349:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 25,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1366:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1370:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1366:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 24,
												"id": 27,
												"nodeType": "Return",
												"src": "1359:15:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1291:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1333:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:16:0"
									},
									"scope": 38,
									"src": "1282:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1459:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1476:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 33,
												"id": 35,
												"nodeType": "Return",
												"src": "1469:8:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1396:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:9:0"
									},
									"scope": 38,
									"src": "1387:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "1148:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 39,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1612:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 41,
										"name": "Context",
										"nameLocations": [
											"2156:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 38,
										"src": "2156:7:0"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "2156:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 40,
								"nodeType": "StructuredDocumentation",
								"src": "1639:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 183,
							"linearizedBaseContracts": [
								183,
								38
							],
							"name": "Ownable",
							"nameLocation": "2145:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2186:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 183,
									"src": "2170:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 43,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2170:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2199:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 49,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "2295:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:17:0"
									},
									"src": "2289:50:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "2345:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 54,
									"name": "OwnableInvalidOwner",
									"nameLocation": "2438:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2458:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2457:15:0"
									},
									"src": "2432:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 60,
									"name": "OwnershipTransferred",
									"nameLocation": "2485:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2522:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2506:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2553:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2537:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:57:0"
									},
									"src": "2479:84:0"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2723:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 67,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2753:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2753:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2737:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 80,
												"nodeType": "IfStatement",
												"src": "2733:95:0",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "2765:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2814:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2806:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 73,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2806:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2806:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 72,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "2786:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2786:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 78,
															"nodeType": "RevertStatement",
															"src": "2779:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2837:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2837:32:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2569:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 86,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2709:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2701:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:22:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2723:0:0"
									},
									"scope": 183,
									"src": "2689:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2985:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 89,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2995:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2995:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "2995:13:0"
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "3018:1:0"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2882:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 94,
									"name": "onlyOwner",
									"nameLocation": "2973:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2982:2:0"
									},
									"src": "2964:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "3157:30:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "3174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "3167:13:0"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3032:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "3111:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3116:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3148:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:9:0"
									},
									"scope": 183,
									"src": "3102:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3305:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 107,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3319:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3319:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "3330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3330:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3319:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "3315:101:0",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "3344:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 113,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 20,
																			"src": "3392:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3392:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "3365:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3365:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 116,
															"nodeType": "RevertStatement",
															"src": "3358:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3193:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "3269:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3280:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:0:0"
									},
									"scope": 183,
									"src": "3260:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "3811:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "3821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "3821:30:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3428:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 123,
												"name": "onlyOwner",
												"nameLocations": [
													"3801:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "3801:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3801:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3766:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3783:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3811:0:0"
									},
									"scope": 183,
									"src": "3757:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4077:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 142,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4091:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4111:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4103:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4103:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4091:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "IfStatement",
												"src": "4087:91:0",
												"trueBody": {
													"id": 155,
													"nodeType": "Block",
													"src": "4115:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4164:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4156:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 149,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4156:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4156:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 148,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "4136:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4136:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 154,
															"nodeType": "RevertStatement",
															"src": "4129:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "4206:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "4187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4187:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "4187:28:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3864:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 139,
												"name": "onlyOwner",
												"nameLocations": [
													"4067:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "4067:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4067:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "4016:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4033:18:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:0:0"
									},
									"scope": 183,
									"src": "4007:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4439:124:0",
										"statements": [
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "4449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 168,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"id": 170,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "4468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4449:25:0"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "4484:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 173,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "4493:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4484:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "4484:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 177,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 178,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4547:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "4516:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4516:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "EmitStatement",
												"src": "4511:45:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4228:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "4385:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4412:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4404:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4403:18:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4439:0:0"
									},
									"scope": 183,
									"src": "4376:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "2127:2438:0",
							"usedErrors": [
								49,
								54
							],
							"usedEvents": [
								60
							]
						},
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4723:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 186,
										"name": "IBeacon",
										"nameLocations": [
											"5102:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 9,
										"src": "5102:7:0"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "5102:7:0"
								},
								{
									"baseName": {
										"id": 188,
										"name": "Ownable",
										"nameLocations": [
											"5111:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 183,
										"src": "5111:7:0"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "5111:7:0"
								}
							],
							"canonicalName": "UpgradeableBeacon",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "4751:320:0",
								"text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266,
								183,
								38,
								9
							],
							"name": "UpgradeableBeacon",
							"nameLocation": "5081:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 191,
									"mutability": "mutable",
									"name": "_implementation",
									"nameLocation": "5141:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 266,
									"src": "5125:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 190,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5125:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "5163:70:0",
										"text": " @dev The `implementation` of the beacon is invalid."
									},
									"errorSelector": "847ac564",
									"id": 196,
									"name": "BeaconInvalidImplementation",
									"nameLocation": "5244:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5280:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5272:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:24:0"
									},
									"src": "5238:58:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5302:90:0",
										"text": " @dev Emitted when the implementation returned by the beacon is changed."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 201,
									"name": "Upgraded",
									"nameLocation": "5403:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5428:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "5412:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:32:0"
									},
									"src": "5397:47:0"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5657:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "implementation_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5686:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 212,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "5667:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5667:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "5667:35:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "5450:121:0",
										"text": " @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon."
									},
									"id": 217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 209,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 206,
													"src": "5643:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 210,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 208,
												"name": "Ownable",
												"nameLocations": [
													"5635:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "5635:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5635:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "implementation_",
												"nameLocation": "5596:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5588:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "5621:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5613:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5587:47:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5657:0:0"
									},
									"scope": 266,
									"src": "5576:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "5851:39:0",
										"statements": [
											{
												"expression": {
													"id": 223,
													"name": "_implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 191,
													"src": "5868:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 222,
												"id": 224,
												"nodeType": "Return",
												"src": "5861:22:0"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5715:67:0",
										"text": " @dev Returns the current implementation address."
									},
									"functionSelector": "5c60da1b",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "5796:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5810:2:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5842:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5841:9:0"
									},
									"scope": 266,
									"src": "5787:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "6220:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6249:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "6230:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6230:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "6230:37:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5896:248:0",
										"text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
									},
									"functionSelector": "3659cfe6",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 231,
												"name": "onlyOwner",
												"nameLocations": [
													"6210:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "6210:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6210:9:0"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "6158:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6176:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "6168:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6167:27:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6220:0:0"
									},
									"scope": 266,
									"src": "6149:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "6512:221:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 245,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "6526:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6544:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6526:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6549:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6526:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6526:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6522:118:0",
												"trueBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6562:78:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 251,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "6611:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 250,
																	"name": "BeaconInvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "6583:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6583:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 253,
															"nodeType": "RevertStatement",
															"src": "6576:53:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "6649:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "6667:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6649:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "6649:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 261,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "6708:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 260,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "6699:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6699:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "EmitStatement",
												"src": "6694:32:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "6280:164:0",
										"text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "6458:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6485:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6477:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6476:27:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6512:0:0"
									},
									"scope": 266,
									"src": "6449:284:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 282,
							"src": "5072:1663:0",
							"usedErrors": [
								49,
								54,
								196
							],
							"usedEvents": [
								60,
								201
							]
						},
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "6784:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "UpgradeableBeacon",
										"nameLocations": [
											"6838:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "6838:17:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "6838:17:0"
								}
							],
							"canonicalName": "BSKTPairBeacon",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281,
								266,
								183,
								38,
								9
							],
							"name": "BSKTPairBeacon",
							"nameLocation": "6820:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "6946:2:0",
										"statements": []
									},
									"id": 280,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 274,
													"name": "implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "6916:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 275,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "6932:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6932:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 277,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 273,
												"name": "UpgradeableBeacon",
												"nameLocations": [
													"6898:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "6898:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6898:47:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6882:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "6874:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:24:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6946:0:0"
									},
									"scope": 281,
									"src": "6862:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 282,
							"src": "6811:139:0",
							"usedErrors": [
								49,
								54,
								196
							],
							"usedEvents": [
								60,
								201
							]
						}
					],
					"src": "137:6813:0"
				},
				"id": 0
			}
		}
	}
}